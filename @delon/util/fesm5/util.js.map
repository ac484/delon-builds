{"version":3,"file":"util.js","sources":["ng://@delon/util/src/other/other.ts","ng://@delon/util/src/string/string.ts","ng://@delon/util/src/time/time.ts","ng://@delon/util/src/lazy/lazy.service.ts","ng://@delon/util/src/validate/validate.ts","ng://@delon/util/src/validate/validators.ts","ng://@delon/util/src/logger/logger.ts","ng://@delon/util/src/other/check.ts","ng://@delon/util/src/other/style.ts","ng://@delon/util/src/array/array.config.ts","ng://@delon/util/src/util.config.ts","ng://@delon/util/src/array/array.service.ts","ng://@delon/util/src/util.module.ts"],"sourcesContent":["import extend from 'extend';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * 类似 `_.get`，根据 `path` 获取安全值\n * jsperf: https://jsperf.com/es-deep-getttps://jsperf.com/es-deep-get\n *\n * @param obj 数据源，无效时直接返回 `defaultValue` 值\n * @param path 若 `null`、`[]`、未定义及未找到时返回 `defaultValue` 值\n * @param defaultValue 默认值\n */\nexport function deepGet(obj: NzSafeAny | null, path: string | string[] | null | undefined, defaultValue?: NzSafeAny): NzSafeAny {\n  if (!obj || path == null || path.length === 0) return defaultValue;\n  if (!Array.isArray(path)) {\n    path = ~path.indexOf('.') ? path.split('.') : [path];\n  }\n  if (path.length === 1) {\n    const checkObj = obj[path[0]];\n    return typeof checkObj === 'undefined' ? defaultValue : checkObj;\n  }\n  const res = path.reduce((o, k) => (o || {})[k], obj);\n  return typeof res === 'undefined' ? defaultValue : res;\n}\n\n/**\n * 基于 [extend](https://github.com/justmoon/node-extend) 的深度拷贝\n */\nexport function deepCopy(obj: NzSafeAny): NzSafeAny {\n  const result = extend(true, {}, { _: obj });\n  return result._;\n}\n\n/**\n * 复制字符串文档至剪贴板\n */\nexport function copy(value: string): Promise<string> {\n  return new Promise<string>((resolve): void => {\n    let copyTextArea: HTMLTextAreaElement | null = null;\n    try {\n      copyTextArea = document.createElement('textarea');\n      copyTextArea.style.height = '0px';\n      copyTextArea.style.opacity = '0';\n      copyTextArea.style.width = '0px';\n      document.body.appendChild(copyTextArea);\n      copyTextArea.value = value;\n      copyTextArea.select();\n      document.execCommand('copy');\n      resolve(value);\n    } finally {\n      if (copyTextArea && copyTextArea.parentNode) {\n        copyTextArea.parentNode.removeChild(copyTextArea);\n      }\n    }\n  });\n}\n\n/**\n * 深度合并对象\n *\n * @param original 原始对象\n * @param ingoreArray 是否忽略数组，`true` 表示忽略数组的合并，`false` 表示会合并整个数组\n * @param objects 要合并的对象\n */\nexport function deepMergeKey(original: any, ingoreArray: boolean, ...objects: any[]): any {\n  if (Array.isArray(original) || typeof original !== 'object') return original;\n\n  const isObject = (v: any) => typeof v === 'object' || typeof v === 'function';\n\n  const merge = (target: any, obj: NzSafeAny) => {\n    Object.keys(obj)\n      .filter(key => key !== '__proto__' && Object.prototype.hasOwnProperty.call(obj, key))\n      .forEach(key => {\n        const oldValue = obj[key];\n        const newValue = target[key];\n        if (Array.isArray(newValue)) {\n          target[key] = ingoreArray ? oldValue : [...newValue, ...oldValue];\n        } else if (oldValue != null && isObject(oldValue) && newValue != null && isObject(newValue)) {\n          target[key] = merge(newValue, oldValue);\n        } else {\n          target[key] = deepCopy(oldValue);\n        }\n      });\n    return target;\n  };\n\n  objects.filter(v => v != null && isObject(v)).forEach(v => merge(original, v));\n\n  return original;\n}\n\n/**\n * 深度合并对象\n *\n * @param original 原始对象\n * @param objects 要合并的对象\n */\nexport function deepMerge(original: any, ...objects: any[]): any {\n  return deepMergeKey(original, false, ...objects);\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { deepGet } from '../other/other';\n\n/**\n * 字符串格式化\n * ```\n * format('this is ${name}', { name: 'asdf' })\n * // output: this is asdf\n * format('this is ${user.name}', { user: { name: 'asdf' } }, true)\n * // output: this is asdf\n * ```\n */\nexport function format(str: string | null | undefined, obj: NzSafeAny | null | undefined, needDeepGet: boolean = false): string {\n  return (str || '').replace(/\\${([^}]+)}/g, (_work: string, key: string) =>\n    needDeepGet ? deepGet(obj, key.split('.'), '') : (obj || {})[key] || '',\n  );\n}\n","import addDays from 'date-fns/addDays';\nimport endOfDay from 'date-fns/endOfDay';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport endOfYear from 'date-fns/endOfYear';\nimport parse from 'date-fns/parse';\nimport parseISO from 'date-fns/parseISO';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport startOfYear from 'date-fns/startOfYear';\nimport subMonths from 'date-fns/subMonths';\nimport subWeeks from 'date-fns/subWeeks';\nimport subYears from 'date-fns/subYears';\n\n/**\n * 获取时间范围\n * @param type 类型，带 `-` 表示过去一个时间，若指定 `number` 表示天数\n * @param time 开始时间\n */\nexport function getTimeDistance(\n  type: 'today' | '-today' | 'yesterday' | 'week' | '-week' | 'month' | '-month' | 'year' | '-year' | number,\n  time?: Date | string | number,\n): [Date, Date] {\n  time = time ? (typeof time === 'string' ? parseISO(time) : new Date(time)) : new Date();\n  const options: { weekStartsOn: 1 } = { weekStartsOn: 1 };\n\n  let res: [Date, Date];\n  switch (type) {\n    case 'today':\n      res = [time, time];\n      break;\n    case '-today':\n      res = [addDays(time, -1), time];\n      break;\n    case 'yesterday':\n      res = [addDays(time, -1), addDays(time, -1)];\n      break;\n    case 'week':\n      res = [startOfWeek(time, options), endOfWeek(time, options)];\n      break;\n    case '-week':\n      res = [startOfWeek(subWeeks(time, 1), options), endOfWeek(subWeeks(time, 1), options)];\n      break;\n    case 'month':\n      res = [startOfMonth(time), endOfMonth(time)];\n      break;\n    case '-month':\n      res = [startOfMonth(subMonths(time, 1)), endOfMonth(subMonths(time, 1))];\n      break;\n    case 'year':\n      res = [startOfYear(time), endOfYear(time)];\n      break;\n    case '-year':\n      res = [startOfYear(subYears(time, 1)), endOfYear(subYears(time, 1))];\n      break;\n    default:\n      res = type > 0 ? [time, addDays(time, type)] : [addDays(time, type), time];\n      break;\n  }\n  return fixEndTimeOfRange(res);\n}\n\n/**\n * fix time is the most, big value\n */\nexport function fixEndTimeOfRange(dates: [Date, Date]): [Date, Date] {\n  return [startOfDay(dates[0]), endOfDay(dates[1])];\n}\n\nexport function toDate(val: Date | string | number, formatString = 'yyyy-MM-dd HH:mm:ss'): Date {\n  if (val instanceof Date) return val;\n  if (typeof val === 'number') return new Date(val);\n  return parse(val, formatString, new Date());\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, share } from 'rxjs/operators';\n\nexport interface LazyResult {\n  path: string;\n  loaded: boolean;\n  status: 'ok' | 'error';\n  error?: {};\n}\n\n/**\n * 延迟加载资源（js 或 css）服务\n */\n@Injectable({ providedIn: 'root' })\nexport class LazyService {\n  private list: { [key: string]: boolean } = {};\n  private cached: { [key: string]: LazyResult } = {};\n  private _notify: BehaviorSubject<LazyResult[]> = new BehaviorSubject<LazyResult[]>([]);\n\n  constructor(@Inject(DOCUMENT) private doc: any) {}\n\n  get change(): Observable<LazyResult[]> {\n    return this._notify.asObservable().pipe(\n      share(),\n      filter(ls => ls.length !== 0),\n    );\n  }\n\n  clear(): void {\n    this.list = {};\n    this.cached = {};\n  }\n\n  load(paths: string | string[]): Promise<LazyResult[]> {\n    if (!Array.isArray(paths)) {\n      paths = [paths];\n    }\n\n    const promises: Array<Promise<LazyResult>> = [];\n    paths.forEach(path => {\n      if (path.endsWith('.js')) {\n        promises.push(this.loadScript(path));\n      } else {\n        promises.push(this.loadStyle(path));\n      }\n    });\n\n    return Promise.all(promises).then(res => {\n      this._notify.next(res);\n      return Promise.resolve(res);\n    });\n  }\n\n  loadScript(path: string, innerContent?: string): Promise<LazyResult> {\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve(this.cached[path]);\n        return;\n      }\n\n      this.list[path] = true;\n      const onSuccess = (item: LazyResult) => {\n        this.cached[path] = item;\n        resolve(item);\n      };\n\n      const node = this.doc.createElement('script') as NzSafeAny;\n      node.type = 'text/javascript';\n      node.src = path;\n      node.charset = 'utf-8';\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      if (node.readyState) {\n        // IE\n        node.onreadystatechange = () => {\n          if (node.readyState === 'loaded' || node.readyState === 'complete') {\n            node.onreadystatechange = null;\n            onSuccess({\n              path,\n              loaded: true,\n              status: 'ok',\n            });\n          }\n        };\n      } else {\n        node.onload = () =>\n          onSuccess({\n            path,\n            loaded: true,\n            status: 'ok',\n          });\n      }\n      node.onerror = (error: {}) =>\n        onSuccess({\n          path,\n          loaded: false,\n          status: 'error',\n          error,\n        });\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n    });\n  }\n\n  loadStyle(path: string, rel: string = 'stylesheet', innerContent?: string): Promise<LazyResult> {\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve(this.cached[path]);\n        return;\n      }\n\n      this.list[path] = true;\n\n      const node = this.doc.createElement('link') as HTMLLinkElement;\n      node.rel = rel;\n      node.type = 'text/css';\n      node.href = path;\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n      const item: LazyResult = {\n        path,\n        loaded: true,\n        status: 'ok',\n      };\n      this.cached[path] = item;\n      resolve(item);\n    });\n  }\n}\n","/** 是否为数字 */\nexport function isNum(value: string | number): boolean {\n  return /^((-?\\d+\\.\\d+)|(-?\\d+)|(-?\\.\\d+))$/.test(value.toString());\n}\n\n/** 是否为整数 */\nexport function isInt(value: string | number): boolean {\n  return isNum(value) && parseInt(value.toString(), 10).toString() === value.toString();\n}\n\n/** 是否为小数 */\nexport function isDecimal(value: string | number): boolean {\n  return isNum(value) && !isInt(value);\n}\n\n/** 是否为身份证 */\nexport function isIdCard(value: string): boolean {\n  return typeof value === 'string' && /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/i.test(value);\n}\n\n/** 是否为手机号 */\nexport function isMobile(value: string): boolean {\n  return typeof value === 'string' && /^(0|\\+?86|17951)?(13[0-9]|15[0-9]|17[0678]|18[0-9]|14[57])[0-9]{8}$/.test(value);\n}\n\n/** 是否URL地址 */\nexport function isUrl(url: string): boolean {\n  return /(((^https?:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+(?::\\d+)?|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)$/.test(\n    url,\n  );\n}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { isDecimal, isIdCard, isInt, isMobile, isNum, isUrl } from './validate';\n\n/** 一套日常验证器 */\n// tslint:disable-next-line:class-name\nexport class _Validators {\n  /** 是否为数字 */\n  static num(control: AbstractControl): ValidationErrors | null {\n    return isNum(control.value) ? null : { num: true };\n  }\n\n  /** 是否为整数 */\n  static int(control: AbstractControl): ValidationErrors | null {\n    return isInt(control.value) ? null : { int: true };\n  }\n\n  /** 是否为小数 */\n  static decimal(control: AbstractControl): ValidationErrors | null {\n    return isDecimal(control.value) ? null : { decimal: true };\n  }\n\n  /** 是否为身份证 */\n  static idCard(control: AbstractControl): ValidationErrors | null {\n    return isIdCard(control.value) ? null : { idCard: true };\n  }\n\n  /** 是否为手机号 */\n  static mobile(control: AbstractControl): ValidationErrors | null {\n    return isMobile(control.value) ? null : { mobile: true };\n  }\n\n  /** 是否URL地址 */\n  static url(control: AbstractControl): ValidationErrors | null {\n    return isUrl(control.value) ? null : { url: true };\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { environment } from 'ng-zorro-antd/core/environments';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nconst record: Record<string, boolean> = {};\n\nexport const PREFIX = '[@DELON]:';\n\nfunction notRecorded(...args: NzSafeAny[]): boolean {\n  const asRecord = args.reduce((acc, c) => acc + c.toString(), '');\n\n  if (record[asRecord]) {\n    return false;\n  } else {\n    record[asRecord] = true;\n    return true;\n  }\n}\n\nfunction consoleCommonBehavior(consoleFunc: (...args: NzSafeAny) => void, ...args: NzSafeAny[]): void {\n  if (environment.isTestMode || (isDevMode() && notRecorded(...args))) {\n    consoleFunc(...args);\n  }\n}\n\n// Warning should only be printed in dev mode and only once.\nexport const warn = (...args: NzSafeAny[]) => consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, ...arg), ...args);\n\nexport const deprecation10 = (comp: string, from: string, to?: string) => {\n  warnDeprecation(`${comp} => '${from}' is going to be removed in 10.0.0${to ? `, Please use '${to}' instead` : ``}.`);\n};\n\nexport const deprecation10Cog = (cogName: string) => {\n  warnDeprecation(`${cogName} is going to be removed in 10.0.0. Please refer to https://ng-alain.com/docs/global-config`);\n};\n\nexport const warnDeprecation = (...args: NzSafeAny[]) => {\n  if (!environment.isTestMode) {\n    const stack = new Error().stack;\n    return consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, 'deprecated:', ...arg, stack), ...args);\n  } else {\n    return () => {};\n  }\n};\n\n// Log should only be printed in dev mode.\nexport const log = (...args: NzSafeAny[]) => {\n  if (isDevMode()) {\n    console.log(PREFIX, ...args);\n  }\n};\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { warn } from '../logger/logger';\n\nexport function isEmpty(element: HTMLElement): boolean {\n  const nodes = element.childNodes;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes.item(i);\n    if (node.nodeType === 1 && (node as HTMLElement).outerHTML.toString().trim().length !== 0) {\n      return false;\n    } else if (node.nodeType === 3 && node.textContent!.toString().trim().length !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction propDecoratorFactory<T, D>(\n  name: string,\n  fallback: (v: T, defaultValue: D) => D,\n  defaultValue: NzSafeAny,\n): (target: NzSafeAny, propName: string) => void {\n  function propDecorator(target: NzSafeAny, propName: string, originalDescriptor?: TypedPropertyDescriptor<NzSafeAny>): NzSafeAny {\n    const privatePropName = `$$__${propName}`;\n\n    if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n      warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\n    }\n\n    Object.defineProperty(target, privatePropName, {\n      configurable: true,\n      writable: true,\n    });\n\n    return {\n      get(): string {\n        return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n      },\n      set(value: T): void {\n        if (originalDescriptor && originalDescriptor.set) {\n          originalDescriptor.set.bind(this)(fallback(value, defaultValue));\n        }\n        this[privatePropName] = fallback(value, defaultValue);\n      },\n    };\n  }\n\n  return propDecorator;\n}\n\nexport function toBoolean(value: any, allowUndefined: boolean | null = false): boolean | undefined {\n  return allowUndefined && typeof value === 'undefined' ? undefined : value != null && `${value}` !== 'false';\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toBoolean\n *\n * ```ts\n * @Input() InputBoolean() visible: boolean = false;\n * @Input() @InputBoolean(null) visible: boolean = false;\n * ```\n */\nexport function InputBoolean(defaultValue: boolean | null = false): NzSafeAny {\n  return propDecoratorFactory('InputNumber', toBoolean, defaultValue);\n}\n\nexport function toNumber(value: any): number;\nexport function toNumber<D>(value: any, fallback: D): number | D;\nexport function toNumber(value: any, fallbackValue: number = 0): number {\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toNumber\n *\n * ```ts\n * @Input() @InputNumber() visible: number = 1;\n * @Input() @InputNumber(null) visible: number = 2;\n * ```\n */\nexport function InputNumber(defaultValue: number | null = 0): NzSafeAny {\n  return propDecoratorFactory('InputNumber', toNumber, defaultValue);\n}\n","import { Renderer2 } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nfunction removeClass(el: HTMLElement, classMap: object, renderer: Renderer2): void {\n  // tslint:disable-next-line: forin\n  for (const i in classMap) {\n    renderer.removeClass(el, i);\n  }\n}\n\nfunction addClass(el: HTMLElement, classMap: NzSafeAny, renderer: Renderer2): void {\n  for (const i in classMap) {\n    if (classMap[i]) {\n      renderer.addClass(el, i);\n    }\n  }\n}\n\n/**\n * 更新宿主组件样式 `class`，例如：\n *\n * ```ts\n * updateHostClass(\n *  this.el.nativeElement,\n *  this.renderer,\n *  {\n *    [ 'classname' ]: true,\n *    [ 'classname' ]: this.type === '1',\n *    [ this.cls ]: true,\n *    [ `a-${this.cls}` ]: true\n *  })\n * ```\n *\n * @param [cleanAll] 是否先清理所有 `class` 值，默认：`false`\n */\nexport function updateHostClass(el: HTMLElement, renderer: Renderer2, classMap: object, cleanAll: boolean = false): void {\n  if (cleanAll === true) {\n    renderer.removeAttribute(el, 'class');\n  } else {\n    removeClass(el, classMap, renderer);\n  }\n  classMap = { ...classMap };\n  addClass(el, classMap, renderer);\n}\n","export interface ArrayConfig {\n  /** 深度项名，默认：`'deep'` */\n  deepMapName?: string;\n  /** 扁平后数组的父数据项名，默认：`'parent'` */\n  parentMapName?: string;\n  /** 编号项名，默认：`'id'` */\n  idMapName?: string;\n  /** 父编号项名，默认：`'parent_id'` */\n  parentIdMapName?: string;\n  /** 源数据子项名，默认：`'children'` */\n  childrenMapName?: string;\n  /** 标题项名，默认：`'title'` */\n  titleMapName?: string;\n  /** 节点 Checkbox 是否选中项名，默认：`'checked'` */\n  checkedMapname?: string;\n  /** 节点本身是否选中项名，默认：`'selected'` */\n  selectedMapname?: string;\n  /** 节点是否展开(叶子节点无效)项名，默认：`'expanded'` */\n  expandedMapname?: string;\n  /** 设置是否禁用节点(不可进行任何操作)项名，默认：`'disabled'` */\n  disabledMapname?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { ArrayConfig } from './array/array.config';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonUtilConfig {\n  array?: ArrayConfig;\n}\n","import { Injectable } from '@angular/core';\nimport { NzTreeNode } from 'ng-zorro-antd/core/tree';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DelonUtilConfig } from '../util.config';\nimport { ArrayConfig } from './array.config';\n\nexport interface ArrayServiceTreeToArrOptions {\n  /** 深度项名，默认：`'deep'` */\n  deepMapName?: string;\n  /** 扁平后数组的父数据项名，默认：`'parent'` */\n  parentMapName?: string;\n  /** 源数据子项名，默认：`'children'` */\n  childrenMapName?: string;\n  /** 是否移除 `children` 节点，默认：`true` */\n  clearChildren?: boolean;\n  /** 转换成数组结构时回调 */\n  cb?: (item: NzSafeAny, parent: NzSafeAny, deep: number) => void;\n}\n\nexport interface ArrayServiceArrToTreeOptions {\n  /** 编号项名，默认：`'id'` */\n  idMapName?: string;\n  /** 父编号项名，默认：`'parent_id'` */\n  parentIdMapName?: string;\n  /** 子项名，默认：`'children'` */\n  childrenMapName?: string;\n  /** 转换成树数据时回调 */\n  cb?: (item: NzSafeAny) => void;\n}\n\nexport interface ArrayServiceArrToTreeNodeOptions {\n  /** 编号项名，默认：`'id'` */\n  idMapName?: string;\n  /** 父编号项名，默认：`'parent_id'` */\n  parentIdMapName?: string;\n  /** 标题项名，默认：`'title'` */\n  titleMapName?: string;\n  /** 设置为叶子节点项名，若数据源不存在时自动根据 `children` 值决定是否为叶子节点，默认：`'isLeaf'` */\n  isLeafMapName?: string;\n  /** 节点 Checkbox 是否选中项名，默认：`'checked'` */\n  checkedMapname?: string;\n  /** 节点本身是否选中项名，默认：`'selected'` */\n  selectedMapname?: string;\n  /** 节点是否展开(叶子节点无效)项名，默认：`'expanded'` */\n  expandedMapname?: string;\n  /** 设置是否禁用节点(不可进行任何操作)项名，默认：`'disabled'` */\n  disabledMapname?: string;\n  /** 转换成树数据后，执行的递归回调 */\n  cb?: (item: NzSafeAny, parent: NzSafeAny, deep: number) => void;\n}\n\nexport interface ArrayServiceGetKeysByTreeNodeOptions {\n  /** 是否包含半选状态的值，默认：`true` */\n  includeHalfChecked?: boolean;\n  /** 是否重新指定 `key` 键名，若不指定表示使用 `NzTreeNode.key` 值 */\n  keyMapName?: string;\n  /** 回调，返回一个值 `key` 值，优先级高于其他 */\n  cb?: (item: NzTreeNode, parent: NzTreeNode, deep: number) => NzSafeAny;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ArrayService {\n  private c: ArrayConfig;\n  constructor(cog: DelonUtilConfig) {\n    this.c = {\n      deepMapName: 'deep',\n      parentMapName: 'parent',\n      idMapName: 'id',\n      parentIdMapName: 'parent_id',\n      childrenMapName: 'children',\n      titleMapName: 'title',\n      checkedMapname: 'checked',\n      selectedMapname: 'selected',\n      expandedMapname: 'expanded',\n      disabledMapname: 'disabled',\n      ...(cog && cog.array),\n    };\n  }\n  /**\n   * 将树结构转换成数组结构\n   */\n  treeToArr(tree: NzSafeAny[], options?: ArrayServiceTreeToArrOptions): NzSafeAny[] {\n    const opt = {\n      deepMapName: this.c.deepMapName,\n      parentMapName: this.c.parentMapName,\n      childrenMapName: this.c.childrenMapName,\n      clearChildren: true,\n      cb: null,\n      ...options,\n    } as ArrayServiceTreeToArrOptions;\n    const result: NzSafeAny[] = [];\n    const inFn = (list: NzSafeAny[], parent: NzSafeAny, deep: number = 0) => {\n      for (const i of list) {\n        i[opt.deepMapName!] = deep;\n        i[opt.parentMapName!] = parent;\n        if (opt.cb) {\n          opt.cb(i, parent, deep);\n        }\n        result.push(i);\n        const children = i[opt.childrenMapName!];\n        if (children != null && Array.isArray(children) && children.length > 0) {\n          inFn(children, i, deep + 1);\n        }\n        if (opt.clearChildren) {\n          delete i[opt.childrenMapName!];\n        }\n      }\n    };\n    inFn(tree, 1);\n    return result;\n  }\n\n  /**\n   * 数组转换成树数据\n   */\n  arrToTree(arr: NzSafeAny[], options?: ArrayServiceArrToTreeOptions): NzSafeAny[] {\n    const opt = {\n      idMapName: this.c.idMapName,\n      parentIdMapName: this.c.parentIdMapName,\n      childrenMapName: this.c.childrenMapName,\n      cb: null,\n      ...options,\n    } as ArrayServiceArrToTreeOptions;\n    const tree: NzSafeAny[] = [];\n    const childrenOf: NzSafeAny = {};\n    for (const item of arr) {\n      const id = item[opt.idMapName!];\n      const pid = item[opt.parentIdMapName!];\n      childrenOf[id] = childrenOf[id] || [];\n      item[opt.childrenMapName!] = childrenOf[id];\n      if (opt.cb) {\n        opt.cb(item);\n      }\n      if (pid) {\n        childrenOf[pid] = childrenOf[pid] || [];\n        childrenOf[pid].push(item);\n      } else {\n        tree.push(item);\n      }\n    }\n    return tree;\n  }\n\n  /**\n   * 数组转换成 `nz-tree` 数据源，通过 `options` 转化项名，也可以使用 `options.cb` 更高级决定数据项\n   */\n  arrToTreeNode(arr: NzSafeAny[], options?: ArrayServiceArrToTreeNodeOptions): NzTreeNode[] {\n    const opt = {\n      idMapName: this.c.idMapName,\n      parentIdMapName: this.c.parentIdMapName,\n      titleMapName: this.c.titleMapName,\n      isLeafMapName: 'isLeaf',\n      checkedMapname: this.c.checkedMapname,\n      selectedMapname: this.c.selectedMapname,\n      expandedMapname: this.c.expandedMapname,\n      disabledMapname: this.c.disabledMapname,\n      cb: null,\n      ...options,\n    } as ArrayServiceArrToTreeNodeOptions;\n    const tree = this.arrToTree(arr, {\n      idMapName: opt.idMapName,\n      parentIdMapName: opt.parentIdMapName,\n      childrenMapName: 'children',\n    });\n    this.visitTree(tree, (item: NzSafeAny, parent: NzSafeAny, deep: number) => {\n      item.key = item[opt.idMapName!];\n      item.title = item[opt.titleMapName!];\n      item.checked = item[opt.checkedMapname!];\n      item.selected = item[opt.selectedMapname!];\n      item.expanded = item[opt.expandedMapname!];\n      item.disabled = item[opt.disabledMapname!];\n      if (item[opt.isLeafMapName!] == null) {\n        item.isLeaf = item.children.length === 0;\n      } else {\n        item.isLeaf = item[opt.isLeafMapName!];\n      }\n      if (opt.cb) {\n        opt.cb(item, parent, deep);\n      }\n    });\n    return tree.map(node => new NzTreeNode(node));\n  }\n\n  /**\n   * 递归访问整个树\n   */\n  visitTree(\n    tree: NzSafeAny[],\n    cb: (item: NzSafeAny, parent: NzSafeAny, deep: number) => void,\n    options?: {\n      /** 子项名，默认：`'children'` */\n      childrenMapName?: string;\n    },\n  ): void {\n    options = {\n      childrenMapName: this.c.childrenMapName,\n      ...options,\n    };\n    const inFn = (data: NzSafeAny[], parent: NzSafeAny, deep: number) => {\n      for (const item of data) {\n        cb(item, parent, deep);\n        const childrenVal = item[options!.childrenMapName!];\n        if (childrenVal && childrenVal.length > 0) {\n          inFn(childrenVal, item, deep + 1);\n        }\n      }\n    };\n    inFn(tree, null, 1);\n  }\n\n  /**\n   * 获取所有已经选中的 `key` 值\n   */\n  getKeysByTreeNode(tree: NzTreeNode[], options?: ArrayServiceGetKeysByTreeNodeOptions): NzSafeAny[] {\n    const opt = {\n      includeHalfChecked: true,\n      ...options,\n    } as ArrayServiceGetKeysByTreeNodeOptions;\n    const keys: NzSafeAny[] = [];\n    this.visitTree(tree, (item: NzTreeNode, parent: NzTreeNode, deep: number) => {\n      if (item.isChecked || (opt.includeHalfChecked && item.isHalfChecked)) {\n        keys.push(opt.cb ? opt.cb(item, parent, deep) : opt.keyMapName ? item.origin[opt.keyMapName] : item.key);\n      }\n    });\n    return keys;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class DelonUtilModule {}\n"],"names":[],"mappings":"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"}