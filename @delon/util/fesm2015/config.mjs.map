{"version":3,"file":"config.mjs","sources":["../../../../packages/util/config/abc/sv.type.ts","../../../../packages/util/config/config.types.ts","../../../../packages/util/config/config.service.ts","../../../../packages/util/config/config.ts"],"sourcesContent":["export class AlainSVConfig {\n  /** 大小，默认：`large` */\n  size?: 'small' | 'large';\n  /** 间距，默认：`32` */\n  gutter?: number;\n  /** 布局，默认：`horizontal` */\n  layout?: 'horizontal' | 'vertical';\n  /** 列数，默认：`3` */\n  col?: number;\n  /** 是否显示默认值，当内容为空值时显示 `-`，默认：`true` */\n  default?: boolean;\n  /** `label` 固定宽度，若 `null` 或 `undefined` 表示非固定，默认：`null` */\n  labelWidth?: number;\n}\n","import { InjectionToken } from '@angular/core';\n\nimport {\n  AlainCellConfig,\n  AlainDateRangePickerConfig,\n  AlainErrorCollectConfig,\n  AlainImageConfig,\n  AlainLoadingConfig,\n  AlainLodopConfig,\n  AlainMediaConfig,\n  AlainOnboardingConfig,\n  AlainPageHeaderConfig,\n  AlainPdfConfig,\n  AlainQRConfig,\n  AlainSEConfig,\n  AlainSGConfig,\n  AlainSTConfig,\n  AlainSVConfig,\n  AlainXlsxConfig,\n  AlainZipConfig\n} from './abc/index';\nimport { AlainACLConfig } from './acl/acl.type';\nimport { AlainAuthConfig } from './auth/auth.type';\nimport { AlainCacheConfig } from './cache/cache.type';\nimport { AlainChartConfig } from './chart/chart.type';\nimport { AlainMockConfig } from './mock/mock.type';\nimport { AlainSFConfig } from './sf/sf.type';\nimport { AlainThemeHttpClientConfig, AlainThemeResponsiveConfig, AlainThemeI18nConfig } from './theme/index';\nimport { AlainUtilArrayConfig } from './util/array.type';\nimport { AlainUtilCurrencyConfig } from './util/currency.type';\n\nexport interface AlainConfig {\n  dataRange?: AlainDateRangePickerConfig;\n  errorCollect?: AlainErrorCollectConfig;\n  image?: AlainImageConfig;\n  loading?: AlainLoadingConfig;\n  onboarding?: AlainOnboardingConfig;\n  lodop?: AlainLodopConfig;\n  pageHeader?: AlainPageHeaderConfig;\n  qr?: AlainQRConfig;\n  se?: AlainSEConfig;\n  sg?: AlainSGConfig;\n  sv?: AlainSVConfig;\n  st?: AlainSTConfig;\n  sf?: AlainSFConfig;\n  cell?: AlainCellConfig;\n  xlsx?: AlainXlsxConfig;\n  zip?: AlainZipConfig;\n  pdf?: AlainPdfConfig;\n  media?: AlainMediaConfig;\n  acl?: AlainACLConfig;\n  auth?: AlainAuthConfig;\n  cache?: AlainCacheConfig;\n  chart?: AlainChartConfig;\n  mock?: AlainMockConfig;\n  utilArray?: AlainUtilArrayConfig;\n  utilCurrency?: AlainUtilCurrencyConfig;\n  themeHttp?: AlainThemeHttpClientConfig;\n  themeResponsive?: AlainThemeResponsiveConfig;\n  themeI18n?: AlainThemeI18nConfig;\n}\n\nexport type AlainConfigKey = keyof AlainConfig;\n\nexport const ALAIN_CONFIG = new InjectionToken<AlainConfig>('alain-config', {\n  providedIn: 'root',\n  factory: ALAIN_CONFIG_FACTORY\n});\n\nexport function ALAIN_CONFIG_FACTORY(): AlainConfig {\n  return {};\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Inject, Injectable, Optional } from '@angular/core';\n\nimport { deepMergeKey } from '@delon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { AlainConfig, AlainConfigKey, ALAIN_CONFIG } from './config.types';\n\n@Injectable({ providedIn: 'root' })\nexport class AlainConfigService {\n  private config: AlainConfig;\n\n  constructor(@Optional() @Inject(ALAIN_CONFIG) defaultConfig?: AlainConfig) {\n    this.config = { ...defaultConfig };\n  }\n\n  get<T extends AlainConfigKey>(componentName: T, key?: string): AlainConfig[T] {\n    const res = ((this.config[componentName] as { [key: string]: unknown }) || {}) as NzSafeAny;\n    return key ? { [key]: res[key] } : res;\n  }\n\n  merge<T extends AlainConfigKey>(componentName: T, ...defaultValues: Array<AlainConfig[T]>): AlainConfig[T] {\n    return deepMergeKey({}, true, ...defaultValues, this.get(componentName));\n  }\n\n  attach<T extends AlainConfigKey>(componentThis: unknown, componentName: T, defaultValues: AlainConfig[T]): void {\n    Object.assign(componentThis as any, this.merge(componentName, defaultValues));\n  }\n\n  attachKey<T extends AlainConfigKey>(componentThis: unknown, componentName: T, key: string): void {\n    Object.assign(componentThis as any, this.get(componentName, key));\n  }\n\n  set<T extends AlainConfigKey>(componentName: T, value: AlainConfig[T]): void {\n    this.config[componentName] = { ...this.config[componentName], ...value };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;MAAa,aAAa,CAAA;AAazB;;MCmDY,YAAY,GAAG,IAAI,cAAc,CAAc,cAAc,EAAE;AAC1E,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,OAAO,EAAE,oBAAoB;AAC9B,CAAA,EAAE;SAEa,oBAAoB,GAAA;AAClC,IAAA,OAAO,EAAE,CAAC;AACZ;;ACvEA;MASa,kBAAkB,CAAA;AAG7B,IAAA,WAAA,CAA8C,aAA2B,EAAA;AACvE,QAAA,IAAI,CAAC,MAAM,GAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAa,CAAE,CAAC;KACpC;IAED,GAAG,CAA2B,aAAgB,EAAE,GAAY,EAAA;AAC1D,QAAA,MAAM,GAAG,IAAK,IAAI,CAAC,MAAM,CAAC,aAAa,CAAgC,IAAI,EAAE,CAAc,CAAC;AAC5F,QAAA,OAAO,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;KACxC;AAED,IAAA,KAAK,CAA2B,aAAgB,EAAE,GAAG,aAAoC,EAAA;AACvF,QAAA,OAAO,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;KAC1E;AAED,IAAA,MAAM,CAA2B,aAAsB,EAAE,aAAgB,EAAE,aAA6B,EAAA;AACtG,QAAA,MAAM,CAAC,MAAM,CAAC,aAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;KAC/E;AAED,IAAA,SAAS,CAA2B,aAAsB,EAAE,aAAgB,EAAE,GAAW,EAAA;AACvF,QAAA,MAAM,CAAC,MAAM,CAAC,aAAoB,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC;KACnE;IAED,GAAG,CAA2B,aAAgB,EAAE,KAAqB,EAAA;AACnE,QAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAK,EAAA,KAAK,CAAE,CAAC;KAC1E;;AA1BU,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,kBAGG,YAAY,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAHjC,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cADL,MAAM,EAAA,CAAA,CAAA;2FACnB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;8BAInB,QAAQ;;8BAAI,MAAM;+BAAC,YAAY,CAAA;;;;ACZ9C;;AAEG;;;;"}