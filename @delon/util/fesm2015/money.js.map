{"version":3,"file":"money.js","sources":["../../../../packages/util/format/string.ts","../../../../packages/util/format/validate.ts","../../../../packages/util/format/currency.types.ts","../../../../packages/util/format/currency.service.ts"],"sourcesContent":["import { deepGet } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * String formatting\n *\n * 字符串格式化\n * ```\n * format('this is ${name}', { name: 'asdf' })\n * // output: this is asdf\n * format('this is ${user.name}', { user: { name: 'asdf' } }, true)\n * // output: this is asdf\n * ```\n */\nexport function format(str: string | null | undefined, obj: NzSafeAny | null | undefined, needDeepGet: boolean = false): string {\n  return (str || '').replace(/\\${([^}]+)}/g, (_work: string, key: string) =>\n    needDeepGet ? deepGet(obj, key.split('.'), '') : (obj || {})[key] || '',\n  );\n}\n","export const REGEX_STR = {\n  num: `((-?\\\\d+\\\\.\\\\d+)|(-?\\\\d+)|(-?\\\\.\\\\d+))`,\n  idCard: `(^\\\\d{15}$)|(^\\\\d{17}(?:[0-9]|X)$)`,\n  mobile: `(0|\\\\+?86|17951)?(13[0-9]|15[0-9]|17[0678]|18[0-9]|14[57])[0-9]{8}`,\n  url: `(((^https?:(?:\\/\\/)?)(?:[-;:&=\\\\+\\\\$,\\\\w]+@)?[A-Za-z0-9.-]+(?::\\\\d+)?|(?:www.|[-;:&=\\\\+\\\\$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\\\+~%\\\\/.\\\\w-_]*)?\\\\??(?:[-\\\\+=&;%@.\\\\w_]*)#?(?:[\\\\w]*))?)`,\n  ip: `(?:^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$)|(?:^(?:(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:)))(?:%[0-9a-zA-Z]{1,})?$)`,\n  color: `(?:#|0x)(?:[a-f0-9]{3}|[a-f0-9]{6})\\\\b|(?:rgb|hsl)a?\\\\([^\\\\)]*\\\\)`,\n  chinese: `[\\u4e00-\\u9fa5]+`,\n};\n\nfunction genRegex(str: string, flags?: string): RegExp {\n  return new RegExp(`^${str}$`, flags);\n}\n\nexport const REGEX = {\n  num: genRegex(REGEX_STR.num),\n  idCard: genRegex(REGEX_STR.idCard, 'i'),\n  mobile: genRegex(REGEX_STR.mobile),\n  url: genRegex(REGEX_STR.url),\n  ip: genRegex(REGEX_STR.ip),\n  color: genRegex(REGEX_STR.color),\n  chinese: genRegex(REGEX_STR.chinese),\n};\n\n/**\n * Wheter is number\n *\n * 是否为数字\n */\nexport function isNum(value: string | number): boolean {\n  return REGEX.num.test(value.toString());\n}\n\n/**\n * Wheter is integer\n *\n * 是否为整数\n */\nexport function isInt(value: string | number): boolean {\n  return isNum(value) && parseInt(value.toString(), 10).toString() === value.toString();\n}\n\n/**\n * Wheter is decimal\n *\n * 是否为小数点数值\n */\nexport function isDecimal(value: string | number): boolean {\n  return isNum(value) && !isInt(value);\n}\n\n/**\n * Wheter is People's Republic of China identity card\n *\n * 是否为中华人民共和国居民身份证\n */\nexport function isIdCard(value: string): boolean {\n  return REGEX.idCard.test(value);\n}\n\n/**\n * Wheter is china mobile (China)\n *\n * 是否为手机号（中国）\n */\nexport function isMobile(value: string): boolean {\n  return REGEX.mobile.test(value);\n}\n\n/**\n * Wheter is url address\n *\n * 是否URL地址\n */\nexport function isUrl(url: string): boolean {\n  return REGEX.url.test(url);\n}\n\n/**\n * Wheter is IPv4 address (Support v4, v6)\n *\n * 是否IP4地址（支持v4、v6）\n */\nexport function isIp(ip: string): boolean {\n  return REGEX.ip.test(ip);\n}\n\n/**\n * Wheter is color\n *\n * 是否颜色代码值\n */\nexport function isColor(color: string): boolean {\n  return REGEX.color.test(color);\n}\n\n/**\n * Wheter is chinese\n *\n * 是否中文\n */\nexport function isChinese(value: string): boolean {\n  return REGEX.chinese.test(value);\n}\n","export type CurrencyStartingUnit = 'yuan' | 'cent';\n\nexport interface CurrencyCommasOptions {\n  /**\n   * Thousands separator, default: `,`\n   *\n   * 千位分隔符，默认：`,`\n   */\n  separator?: string;\n\n  /**\n   * Starting unit, default: `yuan`\n   *\n   * 起始单位，默认：`yuan`\n   */\n  startingUnit?: CurrencyStartingUnit;\n}\n\nexport interface CurrencyMegaOptions {\n  /**\n   * 精度，默认：`2`\n   */\n  precision?: number;\n\n  /**\n   * 单位国际化，默认：`{Q: '京', T: '兆', B: '亿', M: '万', K: '千',}`\n   */\n  unitI18n?: CurrencyMegaUnitI18n;\n\n  /**\n   * Starting unit, default: `yuan`\n   *\n   * 起始单位，默认：`yuan`\n   */\n  startingUnit?: CurrencyStartingUnit;\n}\n\nexport interface CurrencyMegaResult {\n  raw: number | string;\n  value: string;\n  unit: string;\n  unitI18n: string;\n}\n\nexport const CurrencyMega_Powers = [\n  { unit: 'Q', value: Math.pow(10, 15) },\n  { unit: 'T', value: Math.pow(10, 12) },\n  { unit: 'B', value: Math.pow(10, 9) },\n  { unit: 'M', value: Math.pow(10, 6) },\n  { unit: 'K', value: 1000 },\n];\n\nexport interface CurrencyMegaUnitI18n {\n  Q: string;\n  T: string;\n  B: string;\n  M: string;\n  K: string;\n}\n\nexport interface CurrencyCNYOptions {\n  /**\n   * Whether to return to uppercase notation, default: `true`\n   *\n   * 是否返回大写表示法，默认：`true`\n   */\n  inWords?: boolean;\n  /**\n   * Specify negative sign, default: `negative`\n   *\n   * 指定负数符号，默认：`负`\n   */\n  minusSymbol?: string;\n  /**\n   * Starting unit, default: `yuan`\n   *\n   * 起始单位，默认：`yuan`\n   */\n  startingUnit?: CurrencyStartingUnit;\n}\n","import { Injectable } from '@angular/core';\nimport { AlainConfigService, AlainUtilCurrencyConfig } from '@delon/util/config';\nimport { CurrencyCNYOptions, CurrencyCommasOptions, CurrencyMegaOptions, CurrencyMegaResult, CurrencyMega_Powers } from './currency.types';\n\n@Injectable({ providedIn: 'root' })\nexport class CurrencyService {\n  private c: AlainUtilCurrencyConfig;\n\n  constructor(cog: AlainConfigService) {\n    this.c = cog.merge('utilCurrency', { startingUnit: 'yuan', megaUnit: { Q: '京', T: '兆', B: '亿', M: '万', K: '千' } })!;\n  }\n\n  /**\n   * Format a number with commas as thousands separators\n   *\n   * 用逗号将数字格式化为千位分隔符\n   * ```ts\n   * 10000 => `10,000`\n   * ```\n   */\n  commas(value: number | string, options?: CurrencyCommasOptions): string {\n    options = { startingUnit: this.c.startingUnit, ...options };\n    let truthValue = Number(value);\n    if (value == null || isNaN(truthValue)) {\n      return '';\n    }\n    if (options.startingUnit === 'cent') {\n      truthValue = truthValue / 100;\n    }\n    return truthValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, options?.separator ?? ',');\n  }\n\n  /**\n   * Large number format filter\n   *\n   * 大数据格式化\n   * ```ts\n   * 1000 => { value: '1', unit: 'K', unitI18n: '千' }\n   * 12456 => { value: '12.46', unit: 'K', unitI18n: '千' }\n   * ```\n   */\n  mega(value: number | string, options?: CurrencyMegaOptions): CurrencyMegaResult {\n    options = { precision: 2, unitI18n: this.c.megaUnit, startingUnit: this.c.startingUnit, ...options };\n    let num = Number(value);\n    const res: CurrencyMegaResult = { raw: value, value: '', unit: '', unitI18n: '' };\n    if (isNaN(num) || num === 0) {\n      res.value = value.toString();\n      return res;\n    }\n    if (options.startingUnit === 'cent') {\n      num = num / 100;\n    }\n    let abs = Math.abs(+num);\n    const rounder = Math.pow(10, options.precision!);\n    const isNegative = num < 0;\n    for (const p of CurrencyMega_Powers) {\n      let reduced = abs / p.value;\n\n      reduced = Math.round(reduced * rounder) / rounder;\n\n      if (reduced >= 1) {\n        abs = reduced;\n        res.unit = p.unit;\n        break;\n      }\n    }\n\n    res.value = (isNegative ? '-' : '') + abs;\n    res.unitI18n = (options.unitI18n as { [key: string]: any })[res.unit];\n    return res;\n  }\n\n  /**\n   * Converted into RMB notation.\n   *\n   * 转化成人民币表示法\n   */\n  cny(value: number | string, options?: CurrencyCNYOptions): string {\n    options = {\n      inWords: true,\n      minusSymbol: '负',\n      startingUnit: this.c.startingUnit,\n      ...options,\n    };\n\n    value = Number(value);\n    if (isNaN(value)) {\n      return '';\n    }\n    if (options.startingUnit === 'cent') {\n      value = value / 100;\n    }\n    value = value.toString();\n    let integer: number | string;\n    let decimal: number | string | null;\n    [integer, decimal] = value.split('.');\n    let symbol = '';\n    if (integer.startsWith('-')) {\n      symbol = options.minusSymbol!;\n      integer = integer.substr(1);\n    }\n    if (/^-?\\d+$/.test(value)) {\n      decimal = null;\n    }\n    integer = (+integer).toString();\n    const inWords = options.inWords;\n    const unit: { [key: string]: string[] } = {\n      num: inWords\n        ? ['', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖', '点']\n        : ['', '一', '二', '三', '四', '五', '六', '七', '八', '九', '点'],\n      radice: inWords\n        ? ['', '拾', '佰', '仟', '万', '拾', '佰', '仟', '亿', '拾', '佰', '仟', '万亿', '拾', '佰', '仟', '兆', '拾', '佰', '仟']\n        : ['', '十', '百', '千', '万', '十', '百', '千', '亿', '十', '百', '千', '万亿', '十', '百', '千', '兆', '十', '百', '千'],\n      dec: ['角', '分', '厘', '毫'],\n    };\n    if (inWords) {\n      value = (+value).toFixed(5).toString();\n    }\n    let integerRes = '';\n    const integerCount = integer.length;\n    if (integer === '0' || integerCount === 0) {\n      integerRes = '零';\n    } else {\n      let cnDesc = '';\n      for (let i = 0; i < integerCount; i++) {\n        const n = +integer[i];\n        const j = integerCount - i - 1;\n        const isZero = i > 1 && n !== 0 && integer[i - 1] === '0';\n        const cnZero = isZero ? '零' : '';\n        const isEmpptyUnit = (n === 0 && j % 4 !== 0) || integer.substr(i - 3, 4) === '0000';\n        const descMark = cnDesc;\n        let cnNum = unit.num[n];\n\n        cnDesc = isEmpptyUnit ? '' : unit.radice[j];\n        // 第一位是一十\n        if (i === 0 && cnNum === '一' && cnDesc === '十') cnNum = '';\n        const isChangeEr =\n          n > 1 &&\n          cnNum === '二' && // 去除首位\n          ['', '十', '百'].indexOf(cnDesc) === -1 && // 不读两\\两十\\两百\n          descMark !== '十'; // 不读十两\n        if (isChangeEr) cnNum = '两';\n        integerRes += cnZero + cnNum + cnDesc;\n      }\n    }\n\n    // 小数部分拼接\n    let decimalRes = '';\n    const decimalCount = decimal ? decimal.toString().length : 0;\n    if (decimal === null) {\n      decimalRes = inWords ? '整' : '';\n    } else if (decimal === '0') {\n      decimalRes = '零';\n    } else {\n      for (let i = 0; i < decimalCount; i++) {\n        if (inWords && i > unit.dec.length - 1) break;\n        const n = decimal[i];\n        const cnZero = n === '0' ? '零' : '';\n        const cnNum = unit.num[+n];\n        const cnDesc = inWords ? unit.dec[i] : '';\n        decimalRes += cnZero + cnNum + cnDesc;\n      }\n    }\n    const ret =\n      symbol +\n      (inWords\n        ? integerRes + (decimalRes === '零' ? '元整' : `元${decimalRes}`)\n        : integerRes + (decimalRes === '' ? '' : `点${decimalRes}`));\n    return ret;\n  }\n}\n"],"names":[],"mappings":"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"}