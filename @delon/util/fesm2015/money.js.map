{"version":3,"file":"money.js","sources":["../../../../packages/util/format/string.ts","../../../../packages/util/format/validate.ts","../../../../packages/util/format/currency.types.ts","../../../../packages/util/format/currency.service.ts"],"sourcesContent":["import { deepGet } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * String formatting\n *\n * 字符串格式化\n * ```\n * format('this is ${name}', { name: 'asdf' })\n * // output: this is asdf\n * format('this is ${user.name}', { user: { name: 'asdf' } }, true)\n * // output: this is asdf\n * ```\n */\nexport function format(str: string | null | undefined, obj: NzSafeAny | null | undefined, needDeepGet: boolean = false): string {\n  return (str || '').replace(/\\${([^}]+)}/g, (_work: string, key: string) =>\n    needDeepGet ? deepGet(obj, key.split('.'), '') : (obj || {})[key] || '',\n  );\n}\n","export const REGEX_STR = {\n  num: `((-?\\\\d+\\\\.\\\\d+)|(-?\\\\d+)|(-?\\\\.\\\\d+))`,\n  idCard: `(^\\\\d{15}$)|(^\\\\d{17}(?:[0-9]|X)$)`,\n  mobile: `(0|\\\\+?86|17951)?(13[0-9]|15[0-9]|17[0678]|18[0-9]|14[57])[0-9]{8}`,\n  url: `(((^https?:(?:\\/\\/)?)(?:[-;:&=\\\\+\\\\$,\\\\w]+@)?[A-Za-z0-9.-]+(?::\\\\d+)?|(?:www.|[-;:&=\\\\+\\\\$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\\\+~%\\\\/.\\\\w-_]*)?\\\\??(?:[-\\\\+=&;%@.\\\\w_]*)#?(?:[\\\\w]*))?)`,\n  ip: `(?:^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$)|(?:^(?:(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:)))(?:%[0-9a-zA-Z]{1,})?$)`,\n  color: `(?:#|0x)(?:[a-f0-9]{3}|[a-f0-9]{6})\\\\b|(?:rgb|hsl)a?\\\\([^\\\\)]*\\\\)`,\n  chinese: `[\\u4e00-\\u9fa5]+`,\n};\n\nfunction genRegex(str: string, flags?: string): RegExp {\n  return new RegExp(`^${str}$`, flags);\n}\n\nexport const REGEX = {\n  num: genRegex(REGEX_STR.num),\n  idCard: genRegex(REGEX_STR.idCard, 'i'),\n  mobile: genRegex(REGEX_STR.mobile),\n  url: genRegex(REGEX_STR.url),\n  ip: genRegex(REGEX_STR.ip),\n  color: genRegex(REGEX_STR.color),\n  chinese: genRegex(REGEX_STR.chinese),\n};\n\n/**\n * Wheter is number\n *\n * 是否为数字\n */\nexport function isNum(value: string | number): boolean {\n  return REGEX.num.test(value.toString());\n}\n\n/**\n * Wheter is integer\n *\n * 是否为整数\n */\nexport function isInt(value: string | number): boolean {\n  return isNum(value) && parseInt(value.toString(), 10).toString() === value.toString();\n}\n\n/**\n * Wheter is decimal\n *\n * 是否为小数点数值\n */\nexport function isDecimal(value: string | number): boolean {\n  return isNum(value) && !isInt(value);\n}\n\n/**\n * Wheter is People's Republic of China identity card\n *\n * 是否为中华人民共和国居民身份证\n */\nexport function isIdCard(value: string): boolean {\n  return REGEX.idCard.test(value);\n}\n\n/**\n * Wheter is china mobile (China)\n *\n * 是否为手机号（中国）\n */\nexport function isMobile(value: string): boolean {\n  return REGEX.mobile.test(value);\n}\n\n/**\n * Wheter is url address\n *\n * 是否URL地址\n */\nexport function isUrl(url: string): boolean {\n  return REGEX.url.test(url);\n}\n\n/**\n * Wheter is IPv4 address (Support v4, v6)\n *\n * 是否IP4地址（支持v4、v6）\n */\nexport function isIp(ip: string): boolean {\n  return REGEX.ip.test(ip);\n}\n\n/**\n * Wheter is color\n *\n * 是否颜色代码值\n */\nexport function isColor(color: string): boolean {\n  return REGEX.color.test(color);\n}\n\n/**\n * Wheter is chinese\n *\n * 是否中文\n */\nexport function isChinese(value: string): boolean {\n  return REGEX.chinese.test(value);\n}\n","export interface FormatCurrencyMegaOptions {\n  /**\n   * 精度，默认：`2`\n   */\n  precision?: number;\n  /**\n   * 单位国际化，默认：`{Q: '京', T: '兆', B: '亿', M: '万', K: '千',}`\n   */\n  unitI18n?: FormatCurrencyMegaUnitI18n;\n}\n\nexport interface FormatCurrencyMegaResult {\n  raw: number | string;\n  value: string;\n  unit: string;\n  unitI18n: string;\n}\n\nexport const FormatCurrencyMega_Powers = [\n  { unit: 'Q', value: Math.pow(10, 15) },\n  { unit: 'T', value: Math.pow(10, 12) },\n  { unit: 'B', value: Math.pow(10, 9) },\n  { unit: 'M', value: Math.pow(10, 6) },\n  { unit: 'K', value: 1000 },\n];\n\nexport interface FormatCurrencyMegaUnitI18n {\n  Q: string;\n  T: string;\n  B: string;\n  M: string;\n  K: string;\n}\n","import { Injectable } from '@angular/core';\nimport { AlainConfigService, AlainUtilFormatConfig } from '@delon/util/config';\nimport { FormatCurrencyMegaOptions, FormatCurrencyMegaResult, FormatCurrencyMega_Powers } from './currency.types';\n\n@Injectable({ providedIn: 'root' })\nexport class FormatCurrencyService {\n  private c: AlainUtilFormatConfig;\n\n  constructor(cog: AlainConfigService) {\n    this.c = cog.merge('utilFormat', {})!;\n  }\n\n  /**\n   * Format a number with commas as thousands separators\n   *\n   * 用逗号将数字格式化为千位分隔符\n   * ```ts\n   * 10000 => `10,000`\n   * ```\n   */\n  commas(value: number | string, options?: { separator?: string }): string {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, options?.separator ?? ',');\n  }\n\n  /**\n   * Large number format filter\n   *\n   * 大数据格式化\n   * ```ts\n   * 1000 => { value: '1', unit: 'K', unitI18n: '千' }\n   * 12456 => { value: '12.46', unit: 'K', unitI18n: '千' }\n   * ```\n   */\n  mega(value: number | string, options?: FormatCurrencyMegaOptions): FormatCurrencyMegaResult {\n    options = { precision: 2, unitI18n: { Q: '京', T: '兆', B: '亿', M: '万', K: '千' }, ...this.c.currencyMegaUnit, ...options };\n    const num = parseFloat(value.toString());\n    const res: FormatCurrencyMegaResult = { raw: value, value: '', unit: '', unitI18n: '' };\n    if (isNaN(num) || num === 0) {\n      res.value = value.toString();\n      return res;\n    }\n    let abs = Math.abs(+value);\n    const rounder = Math.pow(10, options.precision!);\n    const isNegative = num < 0;\n    for (const p of FormatCurrencyMega_Powers) {\n      let reduced = abs / p.value;\n\n      reduced = Math.round(reduced * rounder) / rounder;\n\n      if (reduced >= 1) {\n        abs = reduced;\n        res.unit = p.unit;\n        break;\n      }\n    }\n\n    res.value = (isNegative ? '-' : '') + abs;\n    res.unitI18n = (options.unitI18n as { [key: string]: any })[res.unit];\n    return res;\n  }\n}\n"],"names":[],"mappings":"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"}