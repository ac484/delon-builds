{"version":3,"file":"config.js","sources":["../../../../packages/util/config/abc/error-collect.type.ts","../../../../packages/util/config/abc/image.type.ts","../../../../packages/util/config/abc/date-picker.type.ts","../../../../packages/util/config/abc/loading.type.ts","../../../../packages/util/config/abc/lodop.type.ts","../../../../packages/util/config/abc/page-header.type.ts","../../../../packages/util/config/abc/qr.type.ts","../../../../packages/util/config/abc/se.type.ts","../../../../packages/util/config/abc/sv.type.ts","../../../../packages/util/config/abc/sg.type.ts","../../../../packages/util/config/abc/st.type.ts","../../../../packages/util/config/abc/xlsx.type.ts","../../../../packages/util/config/abc/zip.type.ts","../../../../packages/util/config/abc/media.type.ts","../../../../packages/util/config/abc/pdf.type.ts","../../../../packages/util/config/abc/onboarding.type.ts","../../../../packages/util/config/acl/acl.type.ts","../../../../packages/util/config/auth/auth.type.ts","../../../../packages/util/config/cache/cache.type.ts","../../../../packages/util/config/chart/chart.type.ts","../../../../packages/util/config/util/array.type.ts","../../../../packages/util/config/util/format.type.ts","../../../../packages/util/config/theme/http.type.ts","../../../../packages/util/config/theme/responsive.type.ts","../../../../packages/util/config/mock/mock.type.ts","../../../../packages/util/config/sf/sf.type.ts","../../../../packages/util/config/config.types.ts","../../../../packages/util/config/config.service.ts"],"sourcesContent":["export interface AlainErrorCollectConfig {\n  /**\n   * 监听频率，默认：`500`\n   */\n  freq?: number;\n  /**\n   * 顶部偏移值，默认：`145`\n   */\n  offsetTop?: number;\n}\n","export interface AlainImageConfig {\n  /**\n   * 默认大小，默认值：`64`，单位：px\n   */\n  size?: number;\n\n  /**\n   * 错误图片，默认：`./assets/img/logo.svg`\n   */\n  error?: string;\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DisabledTimeFn, NzDateMode, PresetRanges, SupportTimeOptions } from 'ng-zorro-antd/date-picker';\n\nexport interface AlainDateRangePickerConfig {\n  /**\n   * 默认：`yyyy-MM-dd`\n   */\n  nzFormat?: string;\n  nzClassName?: string;\n  nzSize?: string;\n  nzStyle?: string;\n  /**\n   * 默认：`true`\n   */\n  nzAllowClear?: boolean;\n  /**\n   * 默认：`false`\n   */\n  nzAutoFocus?: boolean;\n  nzDisabledDate?: (d: Date) => boolean;\n  nzDisabledTime?: DisabledTimeFn;\n  /**\n   * 默认：`{ position: 'relative' }`\n   */\n  nzPopupStyle?: object;\n  nzDropdownClassName?: string;\n  nzRenderExtraFooter?: string;\n  nzShowTime?: SupportTimeOptions | boolean;\n  /**\n   * 默认：`true`\n   */\n  nzShowToday?: boolean;\n  nzMode?: NzDateMode | NzDateMode[];\n  nzRanges?: PresetRanges;\n  shortcuts?: AlainDateRangePickerShortcut;\n}\n\nexport interface AlainDateRangePickerShortcut {\n  /** Whether to enable, default: `false` */\n  enabled?: boolean;\n  /** Whether to close the panel after clicking, default: `true` */\n  closed?: boolean;\n  /**\n   * Shortcut list, default: `今天`, `昨天`, `近3天`, `近7天`, `本周`, `本月`, `全年`\n   */\n  list?: AlainDateRangePickerShortcutItem[];\n}\n\nexport interface AlainDateRangePickerShortcutItem {\n  [key: string]: NzSafeAny;\n\n  text: string;\n  fn: (value: [Date, Date]) => [Date, Date];\n}\n","import { SafeHtml } from '@angular/platform-browser';\n\nexport interface AlainLoadingConfig {\n  /**\n   * 类型，默认：`spin`\n   */\n  type?: 'text' | 'icon' | 'spin' | 'custom';\n  /**\n   * 显示文本，默认：`加载中...`\n   */\n  text?: string;\n  icon?: {\n    /** `nz-icon.nzType`，默认：`loading` */\n    type?: string;\n    /** `nz-icon.nzTheme`，默认：`outline` */\n    theme?: 'fill' | 'outline' | 'twotone';\n    /** `nz-icon.nzSpin`，默认：`true` */\n    spin?: boolean;\n  };\n  custom?: {\n    html?: string | SafeHtml;\n    style?: object;\n  };\n  /**\n   * 延迟，默认：`0`\n   */\n  delay?: number;\n\n  /** 文字方向 */\n  direction?: 'ltr' | 'rtl';\n}\n","export interface AlainLodopConfig {\n  /**\n   * 注册信息：主注册号\n   */\n  license?: string;\n  /**\n   * 注册信息：附加注册号A\n   */\n  licenseA?: string;\n  /**\n   * 注册信息：附加注册号B\n   */\n  licenseB?: string;\n  /**\n   * 注册信息：注册单位名称\n   */\n  companyName?: string;\n  /**\n   * Lodop 远程脚本URL地址，**注意**务必使用 `name` 属性指定变量值\n   *\n   * - http://localhost:18000/CLodopfuncs.js\n   * - https://localhost:8443/CLodopfuncs.js [默认]\n   */\n  url?: string;\n  /**\n   * Lodop 变量名，默认：`CLODOP`\n   */\n  name?: string;\n  /**\n   * 检查次数，默认 `100`，当检查超过时视为异常，这是因为 Lodop 需要连接 WebSocket\n   */\n  checkMaxCount?: number;\n}\n","export interface AlainPageHeaderConfig {\n  /**\n   * 首页文本，若指定空表示不显示，默认：`首页`\n   */\n  home?: string;\n  /**\n   * 首页链接，默认：`/`\n   */\n  homeLink?: string;\n  /**\n   * 首页链接国际化参数\n   */\n  homeI18n?: string;\n  /**\n   * 自动生成导航，以当前路由从主菜单中定位，默认：`true`\n   */\n  autoBreadcrumb?: boolean;\n  /**\n   * 自动向上递归查找，默认：`false`\n   *  - 菜单数据源包含 `/ware`，则 `/ware/1` 也视为 `/ware` 项\n   */\n  recursiveBreadcrumb?: boolean;\n  /**\n   * 自动生成标题，以当前路由从主菜单中定位，默认：`true`\n   */\n  autoTitle?: boolean;\n  /**\n   * 是否自动将标准信息同步至 `TitleService`、`ReuseService` 下，默认：`true`\n   */\n  syncTitle?: boolean;\n  /**\n   * 是否固定模式，默认：`false`\n   */\n  fixed?: boolean;\n  /**\n   * 固定偏移值，默认：`64`\n   */\n  fixedOffsetTop?: number;\n}\n","export interface AlainQRConfig {\n  /**\n   * [qrious](https://neocotic.com/qrious) 外网地址，默认：`https://cdn.bootcdn.net/ajax/libs/qrious/4.0.2/qrious.min.js`\n   *\n   * 若在 `angular.json` 配置 `\"scripts\": [ \"node_modules/qrious/dist/qrious.min.js\" ]` 则优先使用\n   */\n  lib?: string;\n  /** 背景，默认：`white` */\n  background?: string;\n  /** 背景透明级别，范围：`0-1` 之间，默认：`1` */\n  backgroundAlpha?: number;\n  /** 前景，默认：`black` */\n  foreground?: string;\n  /** 前景透明级别，范围：`0-1` 之间，默认：`1` */\n  foregroundAlpha?: number;\n  /** 误差校正级别，默认：`L` */\n  level?: 'L' | 'M' | 'Q' | 'H';\n  /** 二维码输出图片MIME类型，默认：`image/png` */\n  mime?: string;\n  /** 内边距（单位：px），默认：`10` */\n  padding?: number;\n  /** 大小（单位：px），默认：`220` */\n  size?: number;\n  delay?: number;\n}\n","export interface AlainSEConfig {\n  /**\n   * 大小，默认：`default`\n   * - `compact` 紧凑型，强制忽略 `error`、`extra` 展示\n   */\n  size?: 'default' | 'compact';\n  /**\n   * 布局类型，等同 `nzLayout`，默认：`horizontal`\n   * - `inline` 时强制大小为 `compact`\n   */\n  nzLayout?: 'horizontal' | 'vertical' | 'inline';\n  /**\n   * 间距，当 `nzLayout:horizontal` 时有效，默认：`32`\n   */\n  gutter?: number;\n  /**\n   * 列数，默认：`2`\n   */\n  col?: number;\n  /**\n   * 标签文本宽度，单位：`px`，默认：`150`\n   */\n  labelWidth?: number;\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否忽略 `dirty` 校验，默认：`false`\n   */\n  ingoreDirty?: boolean;\n}\n","export class AlainSVConfig {\n  /** 大小，默认：`large` */\n  size?: 'small' | 'large';\n  /** 间距，默认：`32` */\n  gutter?: number;\n  /** 布局，默认：`horizontal` */\n  layout?: 'horizontal' | 'vertical';\n  /** 列数，默认：`3` */\n  col?: number;\n  /** 是否显示默认值，当内容为空值时显示 `-`，默认：`true` */\n  default?: boolean;\n  /** `label` 固定宽度，若 `null` 或 `undefined` 表示非固定，默认：`null` */\n  labelWidth?: number;\n}\n","export interface AlainSGConfig {\n  /**\n   * 间距，默认：`32`\n   */\n  gutter?: number;\n  /**\n   * 列数，默认：`2`\n   */\n  col?: number;\n}\n","import { TemplateRef, TrackByFunction } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDrawerOptions } from 'ng-zorro-antd/drawer';\nimport { ModalOptions } from 'ng-zorro-antd/modal';\nimport { PaginationItemRenderContext } from 'ng-zorro-antd/pagination';\nimport { NzTableData } from 'ng-zorro-antd/table';\n\nexport interface AlainSTConfig {\n  /**\n   * 起始页码，默认为：`1`\n   */\n  pi?: number;\n  /**\n   * 每页数量，默认：`10`\n   */\n  ps?: number;\n  /**\n   * 是否显示边框，默认：`false`\n   */\n  bordered?: boolean;\n  /**\n   * table大小，默认：`default`\n   */\n  size?: 'small' | 'middle' | 'default';\n  /**\n   * 是否开启响应式，默认：`true`\n   */\n  responsive?: boolean;\n  /**\n   * 是否在小屏幕下才显示顶部与底部，默认：`false`\n   */\n  responsiveHideHeaderFooter?: boolean;\n  /** 请求体配置 */\n  req?: {\n    /**\n     * 分页类型，默认：`page`\n     * - `page` 使用 `pi`，`ps` 组合\n     * - `skip` 使用 `skip`，`limit` 组合\n     */\n    type?: 'page' | 'skip';\n    /** 请求方法，默认：`GET` */\n    method?: string;\n    /** 请求体 `Header` */\n    headers?: NzSafeAny;\n    /**\n     * 重命名参数 `pi`、`ps`，默认：`{ pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' }`\n     * - `{ pi: 'Page' }` => `pi` 会被替换成 Page\n     */\n    reName?: {\n      pi?: string;\n      ps?: string;\n      skip?: string;\n      limit?: string;\n    };\n    /**\n     * 是否将请求所有参数数据都放入 `body` 当中（`url` 地址本身参数除外），仅当 `method: 'POST'` 时有效，默认：`false`\n     */\n    allInBody?: boolean;\n    /**\n     * 是否延迟加载数据，即渲染结束后不会主动发起请求，默认：`false`\n     */\n    lazyLoad?: boolean;\n    /**\n     * 请求前数据处理\n     */\n    process?: (requestOptions: NzSafeAny) => NzSafeAny;\n  };\n  /** 返回体配置 */\n  res?: {\n    /**\n     * 重命名返回参数 `total`、`list`，默认：`{ list: ['list'], total: ['total'] }`\n     * - `{ total: 'Total' }` => Total 会被当作 `total`\n     */\n    reName?: {\n      total?: string | string[];\n      list?: string | string[];\n    };\n    /**\n     * 数据预处理\n     */\n    process?: (data: NzSafeAny[], rawData?: NzSafeAny) => NzSafeAny[];\n  };\n  /** 返回体配置 */\n  page?: {\n    /**\n     * 前端分页，当 `data` 为`any[]` 或 `Observable<any[]>` 有效，默认：`true`\n     * - `true` 由 `st` 根据 `data` 长度受控分页，包括：排序、过滤等\n     * - `false` 由用户通过 `total` 和 `data` 参数受控分页，并维护 `(change)` 当分页变更时重新加载数据\n     */\n    front?: boolean;\n    /**\n     * 后端分页是否采用`0`基索引，只在`data`类型为`string`时有效，默认：`false`\n     */\n    zeroIndexed?: boolean;\n    /**\n     * 指定分页显示的位置，默认：`bottom`\n     */\n    position?: 'top' | 'bottom' | 'both';\n    /**\n     * 指定分页分页方向，默认：`right`\n     */\n    placement?: 'left' | 'center' | 'right';\n    /**\n     * 是否显示分页器，默认：`true`\n     */\n    show?: boolean;\n    /**\n     * 是否显示分页器中改变页数，默认：`false`\n     */\n    showSize?: boolean;\n    /**\n     * 分页器中每页显示条目数下拉框值，默认：`[10, 20, 30, 40, 50]`\n     */\n    pageSizes?: number[];\n    /**\n     * 是否显示分页器中快速跳转，默认：`false`\n     */\n    showQuickJumper?: boolean;\n    /**\n     * 是否显示总数据量，默认：`true`\n     * - `boolean` 类型显示与否，默认模板：`共 {{total}} 条`\n     * - `string` 自定义模板，模板变量：\n     *  - `{{total}}` 表示数据总量\n     *  - `{{range[0]}}` 表示当前页开始数量值\n     *  - `{{range[1]}}` 表示当前页结束数量值\n     */\n    total?: string | boolean;\n    /**\n     * 用于自定义页码的结构，用法参照 Pagination 组件\n     */\n    itemRender?: TemplateRef<PaginationItemRenderContext> | null;\n    /**\n     * 当添加该属性时，显示为简单分页，默认：`false`\n     */\n    simple?: boolean;\n    /**\n     * 切换分页时返回顶部，默认：`true`\n     */\n    toTop?: boolean;\n    /**\n     * 返回顶部偏移值，默认：`100`\n     */\n    toTopOffset?: number;\n  };\n  /**\n   * 重命名排序值，`columns` 的重命名高于属性\n   */\n  sortReName?: { ascend?: string; descend?: string };\n  /**\n   * 单排序规则\n   * - 若不指定，则返回：`columnName=ascend|descend`\n   * - 若指定，则返回：`sort=columnName.(ascend|descend)`\n   */\n  singleSort?: {\n    /** 请求参数名，默认：`sort` */\n    key?: string;\n    /** 列名与状态间分隔符，默认：`.` */\n    nameSeparator?: string;\n  };\n  /**\n   * 是否多排序，当 `sort` 多个相同值时自动合并，建议后端支持时使用\n   */\n  multiSort?: {\n    /** 请求参数名，默认：`sort` */\n    key?: string;\n    /** 不同属性间分隔符，默认：`-` */\n    separator?: string;\n    /** 列名与状态间分隔符，默认：`.` */\n    nameSeparator?: string;\n    /**\n     * 是否以数组的形式传递参数\n     * - `true` 表示使用 `url?sort=name.asc&sort=age.desc` 形式\n     * - `false` 表示使用 `url?sort=name.asc-age.desc` 形式\n     */\n    arrayParam?: boolean;\n    /**\n     * 是否全局多排序模式，默认：`true`\n     * - `true` 表示所有 `st` 默认为多排序\n     * - `false` 表示需要为每个 `st` 添加 `multiSort` 才会视为多排序模式\n     */\n    global?: boolean;\n    /**\n     * 是否保持空值的键名，默认：`true`\n     * - `true` 表示不管是否有排序都会发送 `key` 键名\n     * - `false` 表示无排序动作时不会发送 `key` 键名\n     */\n    keepEmptyKey?: boolean;\n  };\n  /**\n   * 按钮模态框配置\n   */\n  modal?: {\n    /**\n     * 指定模态框目标组件的接收参数名，默认：`record`\n     */\n    paramsName?: string;\n    /** 大小；例如：lg、600，默认：`lg` */\n    size?: 'sm' | 'md' | 'lg' | 'xl' | '' | number;\n    /** 对话框 [ModalOptions](https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/modal/modal-types.ts) 参数 */\n    modalOptions?: ModalOptions;\n    /** 是否精准（默认：`true`），若返回值非空值（`null`或`undefined`）视为成功，否则视为错误 */\n    exact?: boolean;\n  };\n  /**\n   * 按钮抽屉配置\n   */\n  drawer?: {\n    /**\n     * 抽屉目标组件的接收参数名，默认：`record`\n     */\n    paramsName?: string;\n    /**\n     * 大小；例如：lg、600，默认：`md`\n     *\n     * | 类型 | 默认大小 |\n     * | --- | ------ |\n     * | `sm` | `300` |\n     * | `md` | `600` |\n     * | `lg` | `900` |\n     * | `xl` | `1200` |\n     *\n     * > 以上值，可通过覆盖相应的LESS参数自行调整\n     */\n    size?: 'sm' | 'md' | 'lg' | 'xl' | number;\n    /**\n     * 是否包含底部工具条，默认：`true`\n     */\n    footer?: boolean;\n    /**\n     * 底部工具条高度，默认：`55`\n     */\n    footerHeight?: number;\n    /** 抽屉 [NzDrawerOptions](https://ng.ant.design/components/drawer/zh#nzdraweroptions) 参数 */\n    drawerOptions?: NzDrawerOptions;\n  };\n  /**\n   * 气泡参数\n   */\n  pop?: {\n    /**\n     * Title of the popover, default: `确认删除吗？`\n     */\n    title?: string;\n\n    /**\n     * Popover trigger mode, default: `click`\n     */\n    trigger?: 'click' | 'focus' | 'hover';\n\n    /**\n     * The position of the popover relative to the target, default: `top`\n     */\n    placement?:\n      | 'top'\n      | 'left'\n      | 'right'\n      | 'bottom'\n      | 'topLeft'\n      | 'topRight'\n      | 'bottomLeft'\n      | 'bottomRight'\n      | 'leftTop'\n      | 'leftBottom'\n      | 'rightTop'\n      | 'rightBottom';\n\n    /**\n     * Class name of the popover card\n     */\n    overlayClassName?: string;\n\n    /**\n     * Style of the popover card\n     */\n    overlayStyle?: {};\n\n    /**\n     * Text of the Cancel button\n     */\n    cancelText?: string;\n\n    /**\n     * Text of the Confirm button\n     */\n    okText?: string;\n\n    /**\n     * Button `type` of the Confirm button\n     */\n    okType?: 'primary' | 'ghost' | 'dashed' | 'danger' | 'default';\n\n    /**\n     * Customize icon of confirmation\n     */\n    icon?: string;\n  };\n  /**\n   * 行单击多少时长之类为双击（单位：毫秒），默认：`200`\n   */\n  rowClickTime?: number;\n  /**\n   * 过滤按钮确认文本\n   */\n  filterConfirmText?: string;\n  /**\n   * 过滤按钮重置文本\n   */\n  filterClearText?: string;\n  /**\n   * 按钮图标\n   */\n  btnIcon?: {\n    /** 图标主题风格，默认：`outline` */\n    theme?: 'outline' | 'twotone' | 'fill';\n    /** 是否有旋转动画，默认：`false` */\n    spin?: boolean;\n    /** 仅适用双色图标，设置双色图标的主要颜色，仅对当前 icon 生效 */\n    twoToneColor?: string;\n    /** 指定来自 IconFont 的图标类型 */\n    iconfont?: string;\n  };\n  /**\n   * 行号索引，默认：`1`\n   * - 计算规则为：`index + noIndex`\n   */\n  noIndex?: number;\n  /**\n   * 表格行的类名\n   */\n  rowClassName?: (record: NzSafeAny, index: number) => string;\n  /**\n   * 通过点击行来展开子行，Default: `false`\n   */\n  expandRowByClick?: boolean;\n  /**\n   * 手风琴模式，Default: `false`\n   */\n  expandAccordion?: boolean;\n  /**\n   * 指定 `width` 模式\n   */\n  widthMode?: {\n    /**\n     * 宽度类型，默认：`default`\n     * - `default` 默认行为\n     * - `strict` 严格模式，即强制按 `width` 指定的宽度呈现，并根据 `strictBehavior` 类型处理\n     */\n    type?: 'strict' | 'default';\n    /**\n     * 严格模式的处理行为，默认：`truncate`\n     * - `wrap` 强制换行\n     * - `truncate` 截短\n     */\n    strictBehavior?: 'wrap' | 'truncate';\n  };\n  /**\n   * Default: `54`\n   */\n  virtualItemSize?: number;\n  /**\n   * Default: `200`\n   */\n  virtualMaxBufferPx?: number;\n  /**\n   * Default: `100`\n   */\n  virtualMinBufferPx?: number;\n  /**\n   * The TrackByFunction to use for tracking changes\n   */\n  virtualForTrackBy?: TrackByFunction<NzTableData>;\n  /**\n   * Conditional expression rendering behavior, can be set to `hide` (default) or `disabled`, Default: `hide`\n   */\n  iifBehavior?: 'hide' | 'disabled';\n  /**\n   * The spinning indicator\n   */\n  loadingIndicator?: TemplateRef<void>;\n  /**\n   * Specifies a delay in milliseconds for loading state (prevent flush)\n   */\n  loadingDelay?: number;\n  /**\n   * Custom no result content\n   */\n  noResult?: string | TemplateRef<void>;\n}\n","export interface AlainXlsxConfig {\n  /**\n   * Xlsx library path, default: `//cdn.bootcss.com/xlsx/0.15.6/xlsx.full.min.js`\n   */\n  url?: string;\n  /**\n   * Defines which Xlsx optional modules should get loaded, e.g:\n   *\n   * `[ '//cdn.bootcss.com/xlsx/0.15.6/cpexcel.js' ]`\n   */\n  modules?: string[];\n}\n","export interface AlainZipConfig {\n  /**\n   * Zip library path, Default: `//cdn.bootcss.com/jszip/3.3.0/jszip.min.js`\n   */\n  url?: string;\n  /**\n   * Defines which zip optional utils should get loaded\n   */\n  utils?: string[];\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface AlainMediaConfig {\n  /**\n   * Plyr library path, default: `[\"https://cdn.bootcdn.net/ajax/libs/plyr/3.5.10/plyr.min.js\", \"https://cdn.bootcdn.net/ajax/libs/plyr/3.5.10/plyr.css\"]`\n   */\n  urls?: string[];\n  /**\n   * Please refer to [plyr options](https://github.com/sampotts/plyr#options)\n   */\n  options?: NzSafeAny;\n}\n","export interface AlainPdfConfig {\n  /**\n   * [pdf.js](https://github.com/mozilla/pdf.js) library root url, Default: `https://cdn.jsdelivr.net/npm/pdfjs-dist@2.5.207/`\n   *\n   * **Note** That only the root path, muse be ending with `/`\n   */\n  lib?: string;\n  /**\n   * Show single or all pages altogether, Default: `true`\n   */\n  showAll?: boolean;\n  /**\n   * Enable text rendering, allows to select text, Default: `true`\n   */\n  renderText?: boolean;\n  /**\n   * Show page borders, Default: `false`\n   */\n  showBorders?: boolean;\n  /**\n   * Default: `true`\n   * - if set to `true` - size will be as same as original document\n   * - if set to `false` - size will be as same as container block\n   */\n  originalSize?: boolean;\n  /**\n   * You can show your document in original size, and make sure that it's not bigger then container block. Default: `false`\n   */\n  fitToPage?: boolean;\n  /**\n   * Turn on or off auto resize, Default: `true`\n   * **Important** To make work - make sure that `[originalSize]=\"false\"` and pdf-viewer tag has `max-width` or `display` are set.\n   */\n  autoReSize?: boolean;\n}\n","export interface AlainOnboardingConfig {\n  /** 文字方向 */\n  direction?: 'ltr' | 'rtl';\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface AlainACLConfig {\n  /**\n   * Router URL when guard fail, default: `/403`\n   */\n  guard_url?: string;\n\n  /**\n   * `can` before execution callback\n   */\n  preCan?: ((roleOrAbility: number | number[] | string | string[] | AlainACLType) => AlainACLType | null) | null;\n}\n\nexport interface AlainACLType {\n  /**\n   * 角色\n   */\n  role?: string[];\n  /**\n   * 权限点\n   */\n  ability?: number[] | string[];\n\n  /**\n   * Validated against, default: `oneOf`\n   * - `allOf` the value validates against all the roles or abilities\n   * - `oneOf` the value validates against exactly one of the roles or abilities\n   */\n  mode?: 'allOf' | 'oneOf';\n\n  /**\n   * 是否取反，即结果为 `true` 时表示未授权\n   */\n  except?: boolean;\n\n  [key: string]: NzSafeAny;\n}\n","export interface AlainAuthConfig {\n  /**\n   * 存储KEY值，默认：`_token`\n   */\n  store_key?: string;\n  /**\n   * 无效时跳转至登录页，默认：`true`，包括：\n   * - 无效token值\n   * - token已过期（限JWT）\n   */\n  token_invalid_redirect?: boolean;\n  /**\n   * token过期时间偏移值，默认：`10` 秒（单位：秒）\n   */\n  token_exp_offset?: number;\n  /**\n   * 发送token参数名，默认：·\n   */\n  token_send_key?: string;\n  /**\n   * 发送token模板（默认为：`'${token}'`），使用 `${token}` 表示token点位符（**注意：**请务必使用 \\`\\` 包裹），例如：\n   *\n   * - `Bearer ${token}`\n   */\n  token_send_template?: string;\n  /**\n   * 发送token参数位置，默认：`header`\n   */\n  token_send_place?: 'header' | 'body' | 'url';\n  /**\n   * 登录页路由地址，默认：`/login`\n   */\n  login_url?: string;\n  /**\n   * 忽略TOKEN的URL地址列表，默认值为：`[/\\/login/, /assets\\//, /passport\\//]`\n   */\n  ignores?: RegExp[];\n  /**\n   * 允许匿名登录KEY，若请求参数中带有该KEY表示忽略TOKEN，默认：`_allow_anonymous`\n   */\n  allow_anonymous_key?: string;\n  /**\n   * 是否校验失效时命中后继续调用后续拦截器的 `intercept` 方法，默认：`true`\n   */\n  executeOtherInterceptors?: boolean;\n  /**\n   * 刷新间隔时长（单位：ms），默认：`3000`\n   */\n  refreshTime?: number;\n  /**\n   * 过期计算偏移值（单位：ms），默认：`6000`\n   * - **建议**根据 `refreshTime` 倍数来设置\n   */\n  refreshOffset?: number;\n}\n","export interface AlainCacheConfig {\n  /**\n   * Cache mode, default: `promise`\n   * - `promise` Convention mode, allowing `key` to get data as http\n   * - `none` Normal mode\n   */\n  mode?: 'promise' | 'none';\n  /**\n   * Rename the return parameters, default: ``, for example:\n   * - `null` The response body is content\n   * - `list` The response body should be `{ list: [] }`\n   * - `result.list` The response body should be `{ result: { list: [] } }`\n   */\n  reName?: string | string[];\n  /**\n   * Set the default storage type\n   * - `m` Storage via memory\n   * - `s` Storage via `localStorage`\n   */\n  type?: 'm' | 's';\n  /**\n   * Set the default expire time (Unit: second)\n   */\n  expire?: number;\n  /**\n   * Key prefix of persistent data, default: ``\n   */\n  prefix?: string;\n  /**\n   * Key name of persistent data metadata storage, default: `__cache_meta`\n   */\n  meta_key?: string;\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface AlainChartConfig {\n  /**\n   * [G2](https://g2.antv.vision/zh/docs/manual/getting-started) library path\n   * default: `[\n   *  \"https://gw.alipayobjects.com/os/lib/antv/g2/4.1.4/dist/g2.min.js\",\n   *  \"https://gw.alipayobjects.com/os/lib/antv/data-set/0.11.7/dist/data-set.js\",\n   * ]`\n   */\n  libs?: string[];\n\n  theme?: string | { [key: string]: NzSafeAny };\n}\n","export interface AlainUtilArrayConfig {\n  /** 深度项名，默认：`'deep'` */\n  deepMapName?: string;\n  /** 扁平后数组的父数据项名，默认：`'parent'` */\n  parentMapName?: string;\n  /** 编号项名，默认：`'id'` */\n  idMapName?: string;\n  /** 父编号项名，默认：`'parent_id'` */\n  parentIdMapName?: string;\n  /** 源数据子项名，默认：`'children'` */\n  childrenMapName?: string;\n  /** 标题项名，默认：`'title'` */\n  titleMapName?: string;\n  /** 节点 Checkbox 是否选中项名，默认：`'checked'` */\n  checkedMapname?: string;\n  /** 节点本身是否选中项名，默认：`'selected'` */\n  selectedMapname?: string;\n  /** 节点是否展开(叶子节点无效)项名，默认：`'expanded'` */\n  expandedMapname?: string;\n  /** 设置是否禁用节点(不可进行任何操作)项名，默认：`'disabled'` */\n  disabledMapname?: string;\n}\n","export interface AlainUtilFormatConfig {\n  currencyMegaUnit?: {\n    Q: string;\n    T: string;\n    B: string;\n    M: string;\n    K: string;\n  };\n}\n","export interface AlainThemeHttpClientConfig {\n  /**\n   * 空值处理，默认：`include`\n   * - include：包含\n   * - ignore：忽略\n   */\n  nullValueHandling?: 'include' | 'ignore';\n  /**\n   * 时间值处理，默认：`timestamp`\n   * - timestamp：时间戳\n   * - ignore：忽略处理，保持原始状态\n   */\n  dateValueHandling?: 'timestamp' | 'ignore';\n}\n","export interface AlainThemeResponsiveConfig {\n  rules: {\n    [key: number]: {\n      xs?: number;\n      sm?: number;\n      md?: number;\n      lg?: number;\n      xl?: number;\n      xxl?: number;\n    };\n  };\n}\n","export interface AlainMockConfig {\n  /**\n   * 规则定义数据\n   */\n  data: any;\n  /**\n   * 请求延迟，单位：毫秒，默认：`300`\n   */\n  delay?: number;\n  /**\n   * 是否强制所有请求都Mock，默认：`false`，`true` 表示当请求的URL不存在时直接返回 404 错误，`false` 表示未命中时发送真实HTTP请求\n   */\n  force?: boolean;\n  /**\n   * 是否打印 Mock 请求信息，弥补浏览器无Network信息，默认：`true`\n   */\n  log?: boolean;\n  /**\n   * 是否拦截命中后继续调用后续拦截器的 `intercept` 方法，默认：`true`\n   */\n  executeOtherInterceptors?: boolean;\n}\n","export interface AlainSFConfigFormatMap {\n  'date-time': { widget?: string; showTime?: boolean; format?: string };\n  date: { widget?: string; format?: string };\n  'full-date': { widget?: string; format?: string };\n  time: { widget?: string; format?: string };\n  'full-time': { widget?: string; format?: string };\n  week: { widget?: string; mode?: string; format?: string };\n  month: { widget?: string; mode?: string; format?: string };\n  uri: { widget?: string };\n  email: { widget?: string; type?: string };\n  color: { widget?: string; type?: string };\n  '': { widget?: string };\n}\n\nexport interface AlainSFConfig {\n  formatMap?: AlainSFConfigFormatMap;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`，默认：`[ 'type', 'enum' ]`\n   *\n   * - `type` 限定 Schema 中 `type` 类型\n   * - `enum` 限定应当是预设定的枚举值之一\n   */\n  ingoreKeywords?: string[];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) 参数\n   */\n  ajv?: any;\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 指定表单 `autocomplete` 值，默认：`on`\n   */\n  autocomplete?: 'on' | 'off' | null;\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 自定义通用错误信息，默认：`{}`\n   */\n  errors?: { [key: string]: string };\n  /**\n   * 默认全局布局，类型为：`SFUISchemaItem`，使用时加上可智能提示，例如：\n   *\n   * ```ts\n   * ui: {} as SFUISchemaItem\n   * ```\n   */\n  ui?: any;\n  /**\n   * 元素组件大小，用于 `nzSize` 值\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * 按钮风格，类型为：`SFButton`，使用时加上可智能提示，例如：\n   *\n   * ```ts\n   * button: {} as SFButton\n   * ```\n   */\n  button?: any;\n  /**\n   * date小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`yyyy-MM-dd HH:mm:ss`\n   */\n  uiDateStringFormat?: string;\n  /**\n   * date小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`T` 13位 Unix Timestamp\n   */\n  uiDateNumberFormat?: string;\n  /**\n   * time小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string;\n  /**\n   * time小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`T` 13位 Unix Timestamp，日期统一使用 `1970-01-01`\n   */\n  uiTimeNumberFormat?: string;\n  /**\n   * 指定 `format: 'email'` 的默认Email后缀，默认：`['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com']`\n   */\n  uiEmailSuffixes?: string[];\n}\n","import { InjectionToken } from '@angular/core';\nimport {\n  AlainDateRangePickerConfig,\n  AlainErrorCollectConfig,\n  AlainImageConfig,\n  AlainLoadingConfig,\n  AlainLodopConfig,\n  AlainMediaConfig,\n  AlainOnboardingConfig,\n  AlainPageHeaderConfig,\n  AlainPdfConfig,\n  AlainQRConfig,\n  AlainSEConfig,\n  AlainSGConfig,\n  AlainSTConfig,\n  AlainSVConfig,\n  AlainXlsxConfig,\n  AlainZipConfig,\n} from './abc/index';\nimport { AlainACLConfig } from './acl/acl.type';\nimport { AlainAuthConfig } from './auth/auth.type';\nimport { AlainCacheConfig } from './cache/cache.type';\nimport { AlainChartConfig } from './chart/chart.type';\nimport { AlainMockConfig } from './mock/mock.type';\nimport { AlainSFConfig } from './sf/sf.type';\nimport { AlainThemeHttpClientConfig, AlainThemeResponsiveConfig } from './theme/index';\nimport { AlainUtilArrayConfig } from './util/array.type';\nimport { AlainUtilFormatConfig } from './util/format.type';\n\nexport interface AlainConfig {\n  dataRange?: AlainDateRangePickerConfig;\n  errorCollect?: AlainErrorCollectConfig;\n  image?: AlainImageConfig;\n  loading?: AlainLoadingConfig;\n  onboarding?: AlainOnboardingConfig;\n  lodop?: AlainLodopConfig;\n  pageHeader?: AlainPageHeaderConfig;\n  qr?: AlainQRConfig;\n  se?: AlainSEConfig;\n  sg?: AlainSGConfig;\n  sv?: AlainSVConfig;\n  st?: AlainSTConfig;\n  sf?: AlainSFConfig;\n  xlsx?: AlainXlsxConfig;\n  zip?: AlainZipConfig;\n  pdf?: AlainPdfConfig;\n  media?: AlainMediaConfig;\n  acl?: AlainACLConfig;\n  auth?: AlainAuthConfig;\n  cache?: AlainCacheConfig;\n  chart?: AlainChartConfig;\n  mock?: AlainMockConfig;\n  utilArray?: AlainUtilArrayConfig;\n  utilFormat?: AlainUtilFormatConfig;\n  themeHttp?: AlainThemeHttpClientConfig;\n  themeResponsive?: AlainThemeResponsiveConfig;\n}\n\nexport type AlainConfigKey = keyof AlainConfig;\n\nexport const ALAIN_CONFIG = new InjectionToken<AlainConfig>('alain-config', {\n  providedIn: 'root',\n  factory: ALAIN_CONFIG_FACTORY,\n});\n\nexport function ALAIN_CONFIG_FACTORY(): AlainConfig {\n  return {};\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { deepMergeKey } from '@delon/util/other';\nimport { AlainConfig, AlainConfigKey, ALAIN_CONFIG } from './config.types';\n\n@Injectable({ providedIn: 'root' })\nexport class AlainConfigService {\n  private config: AlainConfig;\n\n  constructor(@Optional() @Inject(ALAIN_CONFIG) defaultConfig?: AlainConfig) {\n    this.config = { ...defaultConfig };\n  }\n\n  get<T extends AlainConfigKey>(componentName: T, key?: string): AlainConfig[T] {\n    const res = ((this.config[componentName] as { [key: string]: any }) || {}) as any;\n    return key ? { [key]: res[key] } : res;\n  }\n\n  merge<T extends AlainConfigKey>(componentName: T, ...defaultValues: AlainConfig[T][]): AlainConfig[T] {\n    return deepMergeKey({}, true, ...defaultValues, this.get(componentName));\n  }\n\n  attach<T extends AlainConfigKey>(componentThis: any, componentName: T, defaultValues: AlainConfig[T]): void {\n    Object.assign(componentThis, this.merge(componentName, defaultValues));\n  }\n\n  attachKey<T extends AlainConfigKey>(componentThis: any, componentName: T, key: string): void {\n    Object.assign(componentThis, this.get(componentName, key));\n  }\n\n  set<T extends AlainConfigKey>(componentName: T, value: AlainConfig[T]): void {\n    this.config[componentName] = { ...this.config[componentName], ...value };\n  }\n}\n"],"names":[],"mappings":"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"}