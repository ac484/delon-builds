{"version":3,"sources":["../../../../packages/util/pipes/format/mask.pipe.ts","../../../../packages/util/pipes/format/module.ts"],"names":["FormatMaskPipe","prototype","transform","value","mask","formatMask","pure","Pipe","name","PIPES","FormatPipeModule","declarations","exports","NgModule"],"mappings":"ugBAIA,SAAAA,YASEA,EAAAC,UAAAC,UAAA,SAAUC,EAAeC,GACvB,OAAOC,EAAAA,WAAWF,EAAOC,0CAVhBJ,6CAAAA,EAAcM,MAAA,oEAAdN,EAAc,CAAA,MAD1BO,EAAAA,WAAK,CAAEC,KAAM,sBCAd,IAAMC,EAAQ,CAACT,KAMf,6CAAaU,iEAAAA,uEAAAA,EAAgB,CAAAC,aAAA,CANdX,GAAcY,QAAA,CAAdZ,qEAMFU,EAAgB,CAAA,MAJ5BG,EAAAA,eAAS,CACRF,aAAcF,EACdG,QAASH","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { formatMask } from '@delon/util/format';\n\n@Pipe({ name: 'mask' })\nexport class FormatMaskPipe implements PipeTransform {\n  /**\n   * Format mask\n   *\n   * 格式化掩码\n   * ```ts\n   * formatMask('123', '(###)') => (123)\n   * ```\n   */\n  transform(value: string, mask: string): string {\n    return formatMask(value, mask);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormatMaskPipe } from './mask.pipe';\n\nconst PIPES = [FormatMaskPipe];\n\n@NgModule({\n  declarations: PIPES,\n  exports: PIPES,\n})\nexport class FormatPipeModule {}\n"]}