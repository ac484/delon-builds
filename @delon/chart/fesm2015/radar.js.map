{"version":3,"file":"radar.js","sources":["../../../../packages/chart/radar/radar.component.ts","../../../../packages/chart/radar/radar.component.html","../../../../packages/chart/radar/radar.module.ts","../../../../packages/chart/radar/radar.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { Chart, Event } from '@antv/g2';\nimport { G2BaseComponent } from '@delon/chart/core';\nimport { BooleanInput, InputBoolean, InputNumber, NumberInput } from '@delon/util/decorator';\n\nexport interface G2RadarData {\n  name: string;\n  label: string;\n  value: number;\n  [key: string]: any;\n}\n\nexport interface G2RadarClickItem {\n  item: G2RadarData;\n  ev: Event;\n}\n\n@Component({\n  selector: 'g2-radar',\n  exportAs: 'g2Radar',\n  templateUrl: './radar.component.html',\n  host: {\n    '[style.height.px]': 'height',\n    '[class.g2-radar]': 'true',\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class G2RadarComponent extends G2BaseComponent {\n  static ngAcceptInputType_height: NumberInput;\n  static ngAcceptInputType_hasLegend: BooleanInput;\n  static ngAcceptInputType_tickCount: NumberInput;\n\n  legendData: any[] = [];\n\n  // #region fields\n\n  @Input() title: string | TemplateRef<void>;\n  @Input() @InputNumber() height = 0;\n  @Input() padding: number | number[] | 'auto' = [44, 30, 16, 30];\n  @Input() @InputBoolean() hasLegend = true;\n  @Input() @InputNumber() tickCount = 4;\n  @Input() data: G2RadarData[] = [];\n  @Input() colors = ['#1890FF', '#FACC14', '#2FC25B', '#8543E0', '#F04864', '#13C2C2', '#fa8c16', '#a0d911'];\n  @Output() clickItem = new EventEmitter<G2RadarClickItem>();\n\n  // #endregion\n\n  private getHeight(): number {\n    return this.height - (this.hasLegend ? 80 : 22);\n  }\n\n  install(): void {\n    const { node, padding, theme } = this;\n\n    const chart: Chart = (this._chart = new (window as any).G2.Chart({\n      container: node.nativeElement,\n      autoFit: true,\n      height: this.getHeight(),\n      padding,\n      theme,\n    }));\n\n    chart.coordinate('polar');\n    chart.legend(false);\n    chart.axis('label', {\n      line: null,\n      label: {\n        offset: 8,\n      },\n      grid: {\n        line: {\n          style: {\n            stroke: '#e9e9e9',\n            lineWidth: 1,\n            lineDash: [0, 0],\n          },\n        },\n      },\n    });\n    chart.axis('value', {\n      grid: {\n        line: {\n          type: 'polygon',\n          style: {\n            stroke: '#e9e9e9',\n            lineWidth: 1,\n            lineDash: [0, 0],\n          },\n        },\n      },\n    });\n    chart.filter('name', (name: string) => {\n      const legendItem = this.legendData.find(w => w.name === name);\n      return legendItem ? legendItem.checked !== false : true;\n    });\n\n    chart.line().position('label*value');\n\n    chart.point().position('label*value').shape('circle').size(3);\n\n    chart.render();\n\n    chart.on(`point:click`, (ev: Event) => {\n      this.ngZone.run(() => this.clickItem.emit({ item: ev.data?.data, ev }));\n    });\n\n    this.attachChart();\n  }\n\n  attachChart(): void {\n    const { _chart, padding, data, colors, tickCount } = this;\n    if (!_chart || !data || data.length <= 0) return;\n\n    _chart.height = this.getHeight();\n    _chart.padding = padding;\n    _chart.scale({\n      value: {\n        min: 0,\n        tickCount,\n      },\n    });\n\n    _chart.geometries.forEach(g => g.color('name', colors));\n    _chart.changeData(data);\n    _chart.render();\n\n    this.ngZone.run(() => this.genLegend());\n  }\n\n  private genLegend(): void {\n    const { hasLegend, cdr, _chart } = this;\n    if (!hasLegend) return;\n\n    this.legendData = _chart.geometries[0].dataArray.map(item => {\n      const origin = item[0]._origin;\n      const result = {\n        name: origin.name,\n        color: item[0].color,\n        checked: true,\n        value: item.reduce((p, n) => p + n._origin.value, 0),\n      };\n\n      return result;\n    });\n\n    cdr.detectChanges();\n  }\n\n  _click(i: number): void {\n    const { legendData, _chart } = this;\n    legendData[i].checked = !legendData[i].checked;\n    _chart.render();\n  }\n\n  onChanges(): void {\n    this.legendData.forEach(i => (i.checked = true));\n  }\n}\n","<nz-skeleton *ngIf=\"!loaded\"></nz-skeleton>\n<ng-container *nzStringTemplateOutlet=\"title\">\n  <h4>{{ title }}</h4>\n</ng-container>\n<div #container></div>\n<div nz-row class=\"g2-radar__legend\" *ngIf=\"hasLegend\">\n  <div nz-col [nzSpan]=\"24 / legendData.length\" *ngFor=\"let i of legendData; let idx = index\" (click)=\"_click(idx)\" class=\"g2-radar__legend-item\">\n    <i class=\"g2-radar__legend-dot\" [ngStyle]=\"{ 'background-color': !i.checked ? '#aaa' : i.color }\"></i>\n    {{ i.name }}\n    <h6 class=\"g2-radar__legend-title\">{{ i.value }}</h6>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\n\nimport { G2RadarComponent } from './radar.component';\n\nconst COMPONENTS = [G2RadarComponent];\n\n@NgModule({\n  imports: [CommonModule, NzGridModule, NzOutletModule, NzSkeletonModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class G2RadarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}