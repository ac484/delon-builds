import { EventEmitter, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DomSanitizer } from '@angular/platform-browser';
import { AlainConfigService, AlainDateRangePickerShortcut, AlainDateRangePickerShortcutItem } from '@delon/util/config';
import { FunctionProp } from 'ng-zorro-antd/core/types';
import * as i0 from "@angular/core";
export declare class RangePickerComponent implements ControlValueAccessor {
    private dom;
    private onChangeFn;
    private _shortcut;
    private defaultShortcuts;
    private comp;
    value: Date[];
    ngModelEnd: Date;
    set shortcut(val: AlainDateRangePickerShortcut | null);
    get shortcut(): AlainDateRangePickerShortcut | null;
    readonly ngModelEndChange: EventEmitter<Date>;
    nzAllowClear: boolean;
    nzAutoFocus: boolean;
    nzClassName: string;
    nzDisabled: boolean;
    nzSize: string;
    nzStyle: string;
    nzDisabledDate: (d: Date) => boolean;
    nzLocale: object;
    nzPopupStyle: object;
    nzDropdownClassName: string;
    nzPlaceHolder: string | string[];
    readonly nzOnOpenChange: EventEmitter<boolean>;
    nzDateRender: any;
    nzFormat: any;
    nzDisabledTime: any;
    nzRenderExtraFooter: FunctionProp<TemplateRef<void> | string>;
    nzShowTime: any;
    nzShowToday: boolean;
    nzMode: any;
    nzRanges: any;
    readonly nzOnPanelChange: EventEmitter<any>;
    readonly nzOnOk: EventEmitter<any>;
    constructor(dom: DomSanitizer, configSrv: AlainConfigService);
    _nzOnOpenChange(e: any): void;
    _nzOnPanelChange(e: any): void;
    _nzOnOk(e: any): void;
    valueChange(e: [Date, Date]): void;
    writeValue(value: Date): void;
    registerOnChange(fn: (val: Date) => void): void;
    registerOnTouched(_fn: () => void): void;
    setDisabledState(disabled: boolean): void;
    clickShortcut(item: AlainDateRangePickerShortcutItem): void;
    static ɵfac: i0.ɵɵFactoryDef<RangePickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<RangePickerComponent, "range-picker", ["rangePicker"], { "ngModelEnd": "ngModelEnd"; "shortcut": "shortcut"; "nzAllowClear": "nzAllowClear"; "nzAutoFocus": "nzAutoFocus"; "nzClassName": "nzClassName"; "nzDisabled": "nzDisabled"; "nzSize": "nzSize"; "nzStyle": "nzStyle"; "nzDisabledDate": "nzDisabledDate"; "nzLocale": "nzLocale"; "nzPopupStyle": "nzPopupStyle"; "nzDropdownClassName": "nzDropdownClassName"; "nzPlaceHolder": "nzPlaceHolder"; "nzDateRender": "nzDateRender"; "nzFormat": "nzFormat"; "nzDisabledTime": "nzDisabledTime"; "nzRenderExtraFooter": "nzRenderExtraFooter"; "nzShowTime": "nzShowTime"; "nzShowToday": "nzShowToday"; "nzMode": "nzMode"; "nzRanges": "nzRanges"; }, { "ngModelEndChange": "ngModelEndChange"; "nzOnOpenChange": "nzOnOpenChange"; "nzOnPanelChange": "nzOnPanelChange"; "nzOnOk": "nzOnOk"; }, never, never>;
}
