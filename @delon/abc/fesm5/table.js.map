{"version":3,"file":"table.js","sources":["ng://@delon/abc/st/st.interfaces.ts","ng://@delon/abc/st/st-row.directive.ts","ng://@delon/abc/st/st-widget.ts","ng://@delon/abc/st/st-column-source.ts","ng://@delon/abc/st/st-data-source.ts","ng://@delon/abc/st/st-export.ts","ng://@delon/abc/st/st.config.ts","ng://@delon/abc/st/st.component.ts","ng://@delon/abc/st/st-widget-host.directive.ts","ng://@delon/abc/st/st.module.ts"],"sourcesContent":["import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { DrawerHelperOptions, ModalHelperOptions, YNMode } from '@delon/theme';\nimport { NzDrawerOptions } from 'ng-zorro-antd/drawer';\nimport { ModalOptions } from 'ng-zorro-antd/modal';\nimport { STComponent } from './st.component';\n\nexport interface STWidthMode {\n  /**\n   * 宽度类型\n   * - `default` 默认行为\n   * - `strict` 严格模式，即强制按 `width` 指定的宽度呈现，并根据 `strictBehavior` 类型处理\n   */\n  type?: 'strict' | 'default';\n  /**\n   * 严格模式的处理行为\n   * - `wrap` 强制换行\n   * - `truncate` 截短\n   */\n  strictBehavior?: 'wrap' | 'truncate';\n}\n\nexport interface STResetColumnsOption {\n  pi?: number;\n  ps?: number;\n  columns?: STColumn[];\n  /**\n   * Whether to trigger a data load, default: `true`\n   */\n  emitReload?: boolean;\n}\n\nexport interface STReq {\n  /**\n   * 分页类型，默认：`page`\n   * - `page` 使用 `pi`，`ps` 组合\n   * - `skip` 使用 `skip`，`limit` 组合\n   */\n  type?: 'page' | 'skip';\n  /**\n   * 额外请求参数，默认自动附加 `pi`、`ps` 至URL\n   * - `{ status: 'new' }` => `url?pi=1&ps=10&status=new`\n   */\n  params?: any;\n  /** 请求方法，默认：`GET` */\n  method?: string;\n  /** 请求体 `body` */\n  body?: any;\n  /** 请求体 `Header` */\n  headers?: any;\n  /**\n   * 重命名参数 `pi`、`ps`，默认：`{ pi: 'pi', ps: 'ps' }`\n   * - `{ pi: 'Page' }` => `pi` 会被替换成 Page\n   */\n  reName?: STReqReNameType;\n  /**\n   * 是否将请求所有参数数据都放入 `body` 当中（`url` 地址本身参数除外），仅当 `method: 'POST'` 时有效，默认：`false`\n   */\n  allInBody?: boolean;\n  /**\n   * 是否延迟加载数据，即渲染结束后不会主动发起请求，默认：`false`\n   */\n  lazyLoad?: boolean;\n  /**\n   * 请求前数据处理\n   */\n  process?: (requestOptions: STRequestOptions) => STRequestOptions;\n}\n\nexport interface STRequestOptions {\n  body?: any;\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | string[];\n      };\n  observe?: 'body' | 'events' | 'response';\n  reportProgress?: boolean;\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  withCredentials?: boolean;\n}\n\nexport interface STLoadOptions {\n  /** 是否合并，默认：`false` */\n  merge?: boolean;\n  /** 是否跳转至顶部，若不指定由 `page.toTop` 来决定 */\n  toTop?: boolean;\n}\n\nexport interface STRes {\n  /**\n   * 重命名返回参数 `total`、`list`\n   * - `{ total: 'Total' }` => Total 会被当作 `total`\n   */\n  reName?: STResReNameType;\n  /**\n   * 数据预处理\n   */\n  process?: (data: STData[], rawData?: any) => STData[];\n}\n\nexport interface STPage {\n  /**\n   * 前端分页，当 `data` 为`any[]` 或 `Observable<any[]>` 有效，默认：`true`\n   * - `true` 由 `st` 根据 `data` 长度受控分页，包括：排序、过滤等\n   * - `false` 由用户通过 `total` 和 `data` 参数受控分页，并维护 `(change)` 当分页变更时重新加载数据\n   */\n  front?: boolean;\n  /**\n   * 后端分页是否采用`0`基索引，只在`data`类型为`string`时有效，默认：`false`\n   */\n  zeroIndexed?: boolean;\n  /**\n   * 指定分页显示的位置，默认：`bottom`\n   */\n  position?: 'top' | 'bottom' | 'both';\n  /**\n   * 指定分页分页方向，默认：`right`\n   */\n  placement?: 'left' | 'center' | 'right';\n  /**\n   * 是否显示分页器，默认：`true`\n   */\n  show?: boolean;\n  /**\n   * 是否显示分页器中改变页数，默认：`false`\n   */\n  showSize?: boolean;\n  /**\n   * 分页器中每页显示条目数下拉框值，默认：`[10, 20, 30, 40, 50]`\n   */\n  pageSizes?: number[];\n  /**\n   * 是否显示分页器中快速跳转，默认：`false`\n   */\n  showQuickJumper?: boolean;\n  /**\n   * 是否显示总数据量\n   * - `boolean` 类型显示与否，默认模板：`共 {{total}} 条`\n   * - `string` 自定义模板，模板变量：\n   *  - `{{total}}` 表示数据总量\n   *  - `{{range[0]}}` 表示当前页开始数量值\n   *  - `{{range[1]}}` 表示当前页结束数量值\n   */\n  total?: string | boolean;\n  /**\n   * 切换分页时返回顶部，默认：`true`\n   */\n  toTop?: boolean;\n  /**\n   * 返回顶部偏移值，默认：`100`\n   */\n  toTopOffset?: number;\n}\n\n/**\n * 数据源\n */\nexport interface STData {\n  /**\n   * 选择框或单选框状态值\n   */\n  checked?: boolean;\n  /**\n   * 选择框或单选框 `disabled` 值\n   */\n  disabled?: boolean;\n  /**\n   * 是否展开状态\n   */\n  expand?: boolean;\n  /**\n   * 是否显示展开按钮\n   */\n  showExpand?: boolean;\n\n  [key: string]: any;\n}\n\n/**\n * 列描述\n */\nexport interface STColumn {\n  /**\n   * 用于定义数据源主键，例如：`STStatistical`\n   */\n  key?: string;\n  /**\n   * 列标题\n   */\n  title?: string | STColumnTitle;\n  /**\n   * 列数据在数据项中对应的 key，支持 `a.b.c` 的嵌套写法，例如：\n   * - `id`\n   * - `price.market`\n   * - `[ 'price', 'market' ]`\n   */\n  index?: string | string[] | null;\n  /**\n   * 类型\n   * - `no` 行号，计算规则：`index + noIndex`\n   * - `checkbox` 多选\n   * - `radio` 单选\n   * - `link` 链接，务必指定 `click`\n   * - `badge` [徽标](https://ng.ant.design/components/badge/zh)，务必指定 `badge` 参数配置徽标对应值\n   * - `tag` [标签](https://ng.ant.design/components/tag/zh)，务必指定 `tag` 参数配置标签对应值\n   * - `img` 图片且居中(若 `className` 存在则优先)\n   * - `number` 数字且居右(若 `className` 存在则优先)\n   * - `currency` 货币且居右(若 `className` 存在则优先)\n   * - `date` 日期格式且居中(若 `className` 存在则优先)，使用 `dateFormat` 自定义格式\n   * - `yn` 将`boolean`类型徽章化 [document](https://ng-alain.com/docs/data-render#yn)\n   * - `widget` 使用自定义小部件动态创建\n   */\n  type?: 'checkbox' | 'link' | 'badge' | 'tag' | 'radio' | 'img' | 'currency' | 'number' | 'date' | 'yn' | 'no' | 'widget';\n  /**\n   * 链接回调，若返回一个字符串表示导航URL会自动触发 `router.navigateByUrl`\n   */\n  click?: (record: STData, instance?: STComponent) => any;\n  /**\n   * 按钮组\n   */\n  buttons?: STColumnButton[];\n  /**\n   * 自定义渲染ID\n   * @example\n   * <ng-template st-row=\"custom\" let-item let-index=\"index\" let-column=\"column\">\n   *  {{ c.title }}\n   * </ng-template>\n   */\n  render?: string;\n  /**\n   * 标题自定义渲染ID\n   * @example\n   * <ng-template st-row=\"custom\" type=\"title\" let-c>\n   *  {{ item | json }}\n   * </ng-template>\n   */\n  renderTitle?: string;\n  /**\n   * 列宽（数字型表示 `px` 值），例如：`100`、`10%`、`100px`\n   *\n   * **注意：** 若固定列必须是数字\n   */\n  width?: string | number;\n  /**\n   * 排序配置项，远程数据配置**优先**规则：\n   * - `true` 表示允许排序\n   * - `string` 表示远程数据排序相对应 `key` 值\n   */\n  sort?: true | string | STColumnSort;\n  /**\n   * 过滤配置项\n   */\n  filter?: STColumnFilter;\n  /**\n   * 格式化列值\n   */\n  format?: (item: STData, col: STColumn, index: number) => string;\n  /**\n   * 自定义全/反选选择项\n   */\n  selections?: STColumnSelection[];\n  /**\n   * 列 `class` 属性值（注：无须 `.` 点）多个用空格隔开，例如：\n   * - `text-center` 居中\n   * - `text-right` 居右\n   * - `text-success` 成功色\n   * - `text-danger` 异常色\n   */\n  className?: string;\n  /**\n   * 合并列\n   */\n  colSpan?: number;\n  /**\n   * 数字格式，`type=number` 有效\n   */\n  numberDigits?: string;\n  /**\n   * 日期格式，`type=date` 有效，（默认：`yyyy-MM-dd HH:mm`）\n   */\n  dateFormat?: string;\n  /**\n   * 当 `type=yn` 有效\n   */\n  yn?: STColumnYn;\n  /**\n   * 是否允许导出，默认 `true`\n   */\n  exported?: boolean;\n  /**\n   * 权限，等同 [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) 参数值\n   */\n  acl?: any;\n  /** 当不存在数据时以默认值替代 */\n  default?: string;\n  /**\n   * 固定前后列，当指定时务必指定 `width` 否则视为无效，有若干 **注意：** 项：\n   *\n   * - 若列头与内容不对齐或出现列重复，请指定列的宽度 `width`\n   * - 建议指定 `scroll.x` 为大于表格宽度的固定值或百分比。注意，且非固定列宽度之和不要超过 `scroll.x`\n   */\n  fixed?: 'left' | 'right';\n  /**\n   * 徽标配置项\n   */\n  badge?: STColumnBadge | null;\n  /**\n   * 标签配置项\n   */\n  tag?: STColumnTag | null;\n  /**\n   * 行号索引，默认：`1`\n   * - 计算规则为：`index + noIndex`\n   * - 支持自定义方法\n   */\n  noIndex?: number | ((item: STData, col: STColumn, idx: number) => number);\n  /**\n   * 条件表达式\n   * - 仅赋值 `columns` 时执行一次\n   * - 可调用 `resetColumns()` 再一次触发\n   */\n  iif?: (item: STColumn) => boolean;\n\n  /**\n   * 统计\n   */\n  statistical?: STStatisticalType | STStatistical;\n\n  widget?: STWidgetColumn;\n\n  /**\n   * 分组表头\n   */\n  children?: STColumn[];\n\n  /** @ignore internal property */\n  _sort?: STSortMap;\n\n  [key: string]: any;\n}\n\nexport interface STWidgetColumn {\n  type: string;\n\n  params?: (options: { record: STData; column: STColumn }) => {};\n}\n\nexport interface STColumnTitle {\n  [key: string]: any;\n\n  /**\n   * Text of header, can be choose one of `text` or `i18n`\n   */\n  text?: string;\n\n  /**\n   * I18n key of header, can be choose one of `text` or `i18n`\n   */\n  i18n?: string;\n\n  /**\n   * Optional information of header\n   */\n  optional?: string;\n\n  /**\n   * Optional help of header\n   */\n  optionalHelp?: string;\n}\n\nexport type STStatisticalType = 'count' | 'distinctCount' | 'sum' | 'average' | 'max' | 'min';\n\nexport type STStatisticalFn = (values: number[], col: STColumn, list: STData[], rawData?: any) => STStatisticalResult;\n\nexport interface STStatistical {\n  type: STStatisticalType | STStatisticalFn;\n  /**\n   * 保留小数位数，默认：`2`\n   */\n  digits?: number;\n  /**\n   * 是否需要货币格式化，默认以下情况为 `true`\n   * - `type` 为 `STStatisticalFn`、 `sum`、`average`、`max`、`min`\n   */\n  currency?: boolean;\n}\n\nexport interface STStatisticalResults {\n  [key: string]: STStatisticalResult;\n  [index: number]: STStatisticalResult;\n}\n\nexport interface STStatisticalResult {\n  value: number;\n  text?: string;\n}\n\nexport interface STColumnSort {\n  /**\n   * 排序的默认受控属性\n   */\n  default?: 'ascend' | 'descend' | null;\n  /**\n   * 本地数据的排序函数，使用一个函数(参考 [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) 的 compareFunction)\n   * - `null` 忽略本地排序，但保持排序功能\n   */\n  compare?: ((a: STData, b: STData) => number) | null;\n  /**\n   * 远程数据的排序时后端相对应的KEY，默认使用 `index` 属性\n   * - 若 `multiSort: false` 时：`key: 'name' => ?name=1&pi=1`\n   * - 若 `multiSort: true` 允许多个排序 key 存在，或使用 `STMultiSort` 指定多列排序key合并规则\n   */\n  key?: string | null;\n  /**\n   * 远程数据的排序时后端相对应的VALUE\n   * - `{ ascend: '0', descend: '1' }` 结果 `?name=1&pi=1`\n   * - `{ ascend: 'asc', descend: 'desc' }` 结果 `?name=desc&pi=1`\n   */\n  reName?: { ascend?: string; descend?: string };\n}\n\nexport interface STSortMap extends STColumnSort {\n  [key: string]: any;\n\n  /** 是否启用排序 */\n  enabled?: boolean;\n}\n\nexport interface STColumnFilter {\n  /**\n   * 搜索方式\n   * - `defualt` 默认形式\n   * - `keyword` 文本框形式\n   */\n  type?: 'default' | 'keyword';\n  /**\n   * 表头的筛选菜单项，至少一项才会生效\n   * - 当 `type='keyword'` 时可为空\n   */\n  menus?: STColumnFilterMenu[];\n  /**\n   * 本地数据的筛选函数\n   */\n  fn?: ((filter: STColumnFilterMenu, record: STData) => boolean) | null;\n  /**\n   * 标识数据是否已过滤，筛选图标会高亮\n   */\n  default?: boolean;\n  /**\n   * 自定义 filter 图标\n   * - 当 `type='default'` 默认 `filter`\n   * - 当 `type='keyword'` 默认 `search`\n   */\n  icon?: string | STIcon;\n  /**\n   * 确认按钮文本，默认 `确认`\n   */\n  confirmText?: string;\n  /**\n   * 清除按钮文本，默认 `重置`\n   */\n  clearText?: string;\n  /**\n   * 是否多选，默认 `true`\n   */\n  multiple?: boolean;\n  /**\n   * 远程数据的过滤时后端相对应的KEY，默认使用 `index` 属性\n   * `key: 'name'` 结果 `?name=1&pi=1`\n   */\n  key?: string | null;\n  /**\n   * 远程数据的过滤时后端相对应的VALUE\n   * - 默认当 `multiple: true` 时以英文逗号拼接的字符串\n   * @return 返回为 Object 对象\n   */\n  reName?: (list: STColumnFilterMenu[], col: STColumn) => {};\n}\n\nexport interface STColumnFilterMenu {\n  /**\n   * 文本\n   * - 当 `type: 'keyword'` 时表示 `placeholder`\n   */\n  text?: string;\n  /**\n   * 值\n   */\n  value?: any;\n  /**\n   * 是否选中\n   */\n  checked?: boolean;\n  /**\n   * 权限，等同 [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) 参数值\n   */\n  acl?: any;\n\n  [key: string]: any;\n}\n\nexport interface STColumnSelection {\n  /**\n   * 选择项显示的文字\n   */\n  text: string;\n  /**\n   * 选择项点击回调，允许对参数 `data.checked` 进行操作\n   */\n  select: (data: STData[]) => void;\n  /** 权限，等同 `can()` 参数值 */\n  acl?: any;\n}\n\n/** 当 `type=yn` 有效 */\nexport interface STColumnYn {\n  /**\n   * 真值条件，（默认：`true`）\n   */\n  truth?: any;\n  /**\n   * 徽章 `true` 时文本，（默认：`是`）\n   */\n  yes?: string;\n  /**\n   * 徽章 `false` 时文本，（默认：`否`）\n   */\n  no?: string;\n  /**\n   * 徽章显示风格\n   * - `full` 图标和文本\n   * - `icon` 图标\n   * - `text` 文本\n   */\n  mode?: YNMode;\n}\n\nexport interface STIcon {\n  /** 图标类型 */\n  type: string;\n  /** 图标主题风格，默认：`outline` */\n  theme?: 'outline' | 'twotone' | 'fill';\n  /** 是否有旋转动画，默认：`false` */\n  spin?: boolean;\n  /** 仅适用双色图标，设置双色图标的主要颜色，仅对当前 icon 生效 */\n  twoToneColor?: string;\n  /** 指定来自 IconFont 的图标类型 */\n  iconfont?: string;\n}\n\n/**\n * 按钮配置\n */\nexport interface STColumnButton {\n  /**\n   * 文本\n   */\n  text?: string | ((record: STData, btn: STColumnButton) => string);\n  /**\n   * 文本 i18n\n   */\n  i18n?: string;\n  /**\n   * 图标\n   */\n  icon?: string | STIcon;\n  /**\n   * 按钮类型\n   * - `none` 无任何互动\n   * - `del` 删除，默认开启 `pop: true`\n   * - `modal` 对话框，需要指定 `component` 才会生效\n   * - `static` 静态对话框，需要指定 `component` 才会生效\n   * - `drawer` 抽屉，需要指定 `component` 才会生效\n   * - `link` 链接，当 `click` 返回字符串时自动调用 `navigateByUrl` 导航\n   * - `divider` 分割线\n   */\n  type?: 'none' | 'del' | 'modal' | 'static' | 'drawer' | 'link' | 'divider';\n  /**\n   * 点击回调\n   * - Function\n   *  - `type=modal` 只会在当有传回值时才会触发回调\n   * - reload：重新刷新当前页\n   * - load：重新加载数据，并重置页码为：`1`\n   *\n   * @todo Bad parameter design\n   */\n  click?: 'reload' | 'load' | ((record: STData, modal?: any, instance?: STComponent) => any);\n  /**\n   * 气泡确认框参数，若 `string` 类型表示标题\n   */\n  pop?: boolean | string | STColumnButtonPop;\n  /**\n   * 对话框参数\n   */\n  modal?: STColumnButtonModal;\n  /**\n   * 抽屉参数\n   */\n  drawer?: STColumnButtonDrawer;\n  /**\n   * 下拉菜单，当存在时以 `dropdown` 形式渲染\n   * - 只支持一级\n   */\n  children?: STColumnButton[];\n  /**\n   * 权限，等同 [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) 参数值\n   */\n  acl?: any;\n  /**\n   * Conditional expression\n   *\n   * @todo Bad parameter design\n   */\n  iif?: (item: STData, btn: STColumnButton, column: STColumn) => boolean;\n  /**\n   * Conditional expression rendering behavior, can be set to `hide` (default) or `disabled`\n   */\n  iifBehavior?: IifBehaviorType;\n\n  tooltip?: string;\n\n  [key: string]: any;\n}\n\nexport interface STColumnButtonOK {\n  record: STData;\n  /**\n   * Modal or drawer return value when trigger confirm.\n   */\n  ret?: any;\n  instance?: STComponent;\n  event: Event;\n}\n\nexport type IifBehaviorType = 'hide' | 'disabled';\n\nexport interface STColumnButtonModal extends ModalHelperOptions {\n  /**\n   * 对话框组件对象\n   */\n  component?: any;\n  /**\n   * 对话框参数\n   */\n  params?: (record: STData) => {};\n  /**\n   * 对话框目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n}\n\nexport interface STColumnButtonModalConfig {\n  /**\n   * 指定模态框目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n  /** 大小；例如：lg、600，默认：`lg` */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '' | number;\n  /** 对话框 [ModalOptions](https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/modal/modal-types.ts) 参数 */\n  modalOptions?: ModalOptions;\n  /** 是否精准（默认：`true`），若返回值非空值（`null`或`undefined`）视为成功，否则视为错误 */\n  exact?: boolean;\n}\n\nexport interface STColumnButtonDrawer extends DrawerHelperOptions {\n  /**\n   * 标题\n   */\n  title?: string;\n  /**\n   * 抽屉组件对象\n   */\n  component?: any;\n  /**\n   * 抽屉参数\n   */\n  params?: (record: STData) => {};\n  /**\n   * 抽屉目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n}\n\nexport interface STColumnButtonDrawerConfig {\n  /**\n   * 抽屉目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n  /**\n   * 大小；例如：lg、600，默认：`md`\n   *\n   * | 类型 | 默认大小 |\n   * | --- | ------ |\n   * | `sm` | `300` |\n   * | `md` | `600` |\n   * | `lg` | `900` |\n   * | `xl` | `1200` |\n   *\n   * > 以上值，可通过覆盖相应的LESS参数自行调整\n   */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | number;\n  /**\n   * 是否包含底部工具条，默认：`true`\n   */\n  footer?: boolean;\n  /**\n   * 底部工具条高度，默认：`55`\n   */\n  footerHeight?: number;\n  /** 抽屉 [NzDrawerOptions](https://ng.ant.design/components/drawer/zh#nzdraweroptions) 参数 */\n  drawerOptions?: NzDrawerOptions;\n}\n\nexport interface STColumnButtonPop {\n  /**\n   * Title of the popover, default: `确认删除吗？`\n   */\n  title?: string;\n\n  /**\n   * Popover trigger mode, default: `click`\n   */\n  trigger?: 'click' | 'focus' | 'hover';\n\n  /**\n   * The position of the popover relative to the target, default: `top`\n   */\n  placement?:\n    | 'top'\n    | 'left'\n    | 'right'\n    | 'bottom'\n    | 'topLeft'\n    | 'topRight'\n    | 'bottomLeft'\n    | 'bottomRight'\n    | 'leftTop'\n    | 'leftBottom'\n    | 'rightTop'\n    | 'rightBottom';\n\n  /**\n   * Class name of the popover card\n   */\n  overlayClassName?: string;\n\n  /**\n   * Style of the popover card\n   */\n  overlayStyle?: {};\n\n  /**\n   * Text of the Cancel button\n   */\n  cancelText?: string;\n\n  /**\n   * Text of the Confirm button\n   */\n  okText?: string;\n\n  /**\n   * Button `type` of the Confirm button\n   */\n  okType?: 'primary' | 'ghost' | 'dashed' | 'danger' | 'default';\n\n  /**\n   * Customize icon of confirmation\n   */\n  icon?: string;\n\n  /**\n   * Whether to directly emit `onConfirm` without showing Popconfirm, default: `() => false`\n   */\n  condition?: (item: STData) => boolean;\n}\n\nexport interface STReqReNameType {\n  pi?: string;\n  ps?: string;\n  skip?: string;\n  limit?: string;\n}\n\nexport interface STResReNameType {\n  total?: string | string[];\n  list?: string | string[];\n}\n\nexport interface STExportOptions {\n  /** @ignore internal property */\n  _d?: any[];\n  /** @ignore internal property */\n  _c?: STColumn[];\n  /** 工作溥名 */\n  sheetname?: string;\n  /** 文件名 */\n  filename?: string;\n  /** triggers when saveas */\n  callback?: (wb: any) => void;\n}\n\n/**\n * 单排序规则\n * - 若不指定，则返回：`columnName=ascend|descend`\n * - 若指定，则返回：`sort=columnName.(ascend|descend)`\n */\nexport interface STSingleSort {\n  /** 请求参数名，默认：`sort` */\n  key?: string;\n  /** 列名与状态间分隔符，默认：`.` */\n  nameSeparator?: string;\n}\n\n/**\n * 多排序相同排序 key 时合并规则\n */\nexport interface STMultiSort {\n  /** 请求参数名，默认：`sort` */\n  key?: string;\n  /** 不同属性间分隔符，默认：`-` */\n  separator?: string;\n  /** 列名与状态间分隔符，默认：`.` */\n  nameSeparator?: string;\n  /**\n   * 是否全局多排序模式，默认：`true`\n   * - `true` 表示所有 `st` 默认为多排序\n   * - `false` 表示需要为每个 `st` 添加 `multiSort` 才会视为多排序模式\n   */\n  global?: boolean;\n  /**\n   * 是否保持空值的键名，默认：`true`\n   * - `true` 表示不管是否有排序都会发送 `key` 键名\n   * - `false` 表示无排序动作时不会发送 `key` 键名\n   */\n  keepEmptyKey?: boolean;\n}\n\n/**\n * 徽标信息\n */\nexport interface STColumnBadge {\n  [key: number]: STColumnBadgeValue;\n  [key: string]: STColumnBadgeValue;\n}\n\nexport interface STColumnBadgeValue {\n  /**\n   * 文本\n   */\n  text?: string;\n  /**\n   * 徽标颜色值\n   */\n  color?: 'success' | 'processing' | 'default' | 'error' | 'warning';\n}\n\n/**\n * 标签信息\n */\nexport interface STColumnTag {\n  [key: number]: STColumnTagValue;\n  [key: string]: STColumnTagValue;\n}\n\nexport interface STColumnTagValue {\n  /**\n   * 文本\n   */\n  text?: string;\n  /**\n   * 颜色值，支持预设和色值\n   * - 预设：geekblue,blue,purple,success,red,volcano,orange,gold,lime,green,cyan\n   * - 色值：#f50,#ff0\n   */\n  color?: 'geekblue' | 'blue' | 'purple' | 'success' | 'red' | 'volcano' | 'orange' | 'gold' | 'lime' | 'green' | 'cyan' | string;\n}\n\nexport type STChangeType = 'loaded' | 'pi' | 'ps' | 'checkbox' | 'radio' | 'sort' | 'filter' | 'click' | 'dblClick' | 'expand';\n\n/**\n * 回调数据\n */\nexport interface STChange {\n  /**\n   * 回调类型\n   */\n  type: STChangeType;\n  /**\n   * 当前页码\n   */\n  pi: number;\n  /**\n   * 每页数量\n   */\n  ps: number;\n  /**\n   * 数据总量\n   */\n  total: number;\n  /**\n   * `loaded` 参数\n   */\n  loaded?: STData[];\n  /**\n   * `checkbox` 参数\n   */\n  checkbox?: STData[];\n  /**\n   * `radio` 参数\n   */\n  radio?: STData;\n  /**\n   * 排序参数\n   */\n  sort?: STChangeSort;\n  /**\n   * 过滤参数\n   */\n  filter?: STColumn;\n  /**\n   * 行点击参数\n   */\n  click?: STChangeRowClick;\n  /**\n   * 行双击参数\n   */\n  dblClick?: STChangeRowClick;\n  /**\n   * `expand` 参数\n   */\n  expand?: STData;\n}\n\n/** 行单击参数 */\nexport interface STChangeSort {\n  value?: 'ascend' | 'descend';\n  map?: { [key: string]: string };\n  column?: STColumn;\n}\n\n/** 行单击参数 */\nexport interface STChangeRowClick {\n  e?: Event;\n  item?: STData;\n  index?: number;\n}\n\nexport interface STError {\n  type?: 'req';\n  error?: any;\n}\n\nexport type STRowClassName = (record: STData, index: number) => string;\n\nexport interface STColumnGroupType {\n  column: STColumn;\n  colStart: number;\n  colEnd?: number;\n  colSpan?: number;\n  rowSpan?: number;\n  hasSubColumns?: boolean;\n}\n","import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>) {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string) {\n    return this.titles[path];\n  }\n\n  getRow(path: string) {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row') id: string;\n\n  @Input() type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class STWidgetRegistry {\n  private _widgets: { [type: string]: any } = {};\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  get(type: string): any {\n    return this._widgets[type];\n  }\n}\n","import { Host, Inject, Injectable, Optional } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { AlainSTConfig, deepCopy, warn } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STRowSource } from './st-row.directive';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STColumnButton, STColumnButtonPop, STColumnFilter, STColumnGroupType, STIcon, STSortMap } from './st.interfaces';\n\n@Injectable()\nexport class STColumnSource {\n  private cog: AlainSTConfig;\n\n  constructor(\n    private dom: DomSanitizer,\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private stWidgetRegistry: STWidgetRegistry,\n  ) {}\n\n  setCog(val: AlainSTConfig): void {\n    this.cog = val;\n  }\n\n  private fixPop(i: STColumnButton, def: STColumnButtonPop): void {\n    if (i.pop == null || i.pop === false) {\n      i.pop = false;\n      return;\n    }\n\n    let pop = {\n      ...def,\n    };\n    if (typeof i.pop === 'string') {\n      pop.title = i.pop;\n    } else if (typeof i.pop === 'object') {\n      pop = {\n        ...pop,\n        ...i.pop,\n      };\n    }\n\n    if (typeof pop.condition !== 'function') {\n      pop.condition = () => false;\n    }\n\n    i.pop = pop;\n  }\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, pop, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      // pop\n      this.fixPop(item, pop!);\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children = item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]) {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      item.iifBehavior = item.iifBehavior || this.cog.iifBehavior;\n      if (item.children && item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      } else {\n        item.children = [];\n      }\n    }\n  }\n\n  private fixedCoerce(list: STColumn[]) {\n    const countReduce = (a: number, b: STColumn) => a + +b.width!.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach((item, idx) => (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'));\n  }\n\n  private sortCoerce(item: STColumn): STSortMap {\n    const res = this.fixCoerce(item);\n    res.reName = {\n      ...this.cog.sortReName,\n      ...res.reName,\n    };\n    return res;\n  }\n\n  private fixCoerce(item: STColumn): STSortMap {\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: STColumn): STColumnFilter | null {\n    if (item.filter == null) {\n      return null;\n    }\n\n    let res: STColumnFilter | null = item.filter;\n    res.type = res.type || 'default';\n\n    let icon = 'filter';\n    let iconTheme = 'fill';\n    if (res.type === 'keyword') {\n      if (res.menus == null || res.menus!.length === 0) {\n        res.menus = [{ value: '' }];\n      }\n      icon = 'search';\n      iconTheme = 'outline';\n    }\n\n    if (res.menus!.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n\n    res.confirmText = res.confirmText || this.cog.filterConfirmText;\n    res.clearText = res.clearText || this.cog.filterClearText;\n    res.key = res.key || item.indexKey;\n    res.icon = res.icon || icon;\n\n    const baseIcon = { type: icon, theme: iconTheme } as STIcon;\n    if (typeof res.icon === 'string') {\n      res.icon = { ...baseIcon, type: res.icon } as STIcon;\n    } else {\n      res.icon = { ...baseIcon, ...res.icon };\n    }\n\n    this.updateDefault(res);\n\n    if (this.acl) {\n      res.menus = res.menus!.filter(w => this.acl.can(w.acl));\n    }\n\n    if (res.menus!.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: STColumn) {\n    if (item.renderTitle) {\n      item.__renderTitle = this.rowSource.getTitle(item.renderTitle);\n    }\n    if (item.render) {\n      item.__render = this.rowSource.getRow(item.render);\n    }\n  }\n\n  private widgetCoerce(item: STColumn): void {\n    if (item.type !== 'widget') return;\n    if (item.widget == null || !this.stWidgetRegistry.has(item.widget.type)) {\n      delete item.type;\n      warn(`st: No widget for type \"${item.widget?.type}\"`);\n    }\n  }\n\n  private genHeaders(rootColumns: STColumn[]): STColumn[][] {\n    const rows: STColumn[][] = [];\n    const fillRowCells = (columns: STColumn[], colIndex: number, rowIndex = 0): number[] => {\n      // Init rows\n      rows[rowIndex] = rows[rowIndex] || [];\n\n      let currentColIndex = colIndex;\n      const colSpans: number[] = columns.map(column => {\n        const cell: STColumnGroupType = {\n          column,\n          colStart: currentColIndex,\n        };\n\n        let colSpan: number = 1;\n\n        const subColumns = column.children;\n        if (Array.isArray(subColumns) && subColumns.length > 0) {\n          colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n          cell.hasSubColumns = true;\n        }\n\n        if ('colSpan' in column) {\n          colSpan = column.colSpan!;\n        }\n\n        if ('rowSpan' in column) {\n          cell.rowSpan = column.rowSpan;\n        }\n\n        cell.colSpan = colSpan;\n        cell.colEnd = cell.colStart + colSpan - 1;\n        rows[rowIndex].push(cell);\n\n        currentColIndex += colSpan;\n\n        return colSpan;\n      });\n\n      return colSpans;\n    };\n\n    fillRowCells(rootColumns, 0);\n\n    // Handle `rowSpan`\n    const rowCount = rows.length;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      rows[rowIndex].forEach(cell => {\n        if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n          cell.rowSpan = rowCount - rowIndex;\n        }\n      });\n    }\n\n    return rows;\n  }\n\n  process(list: STColumn[]): { columns: STColumn[]; headers: STColumn[][] } {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: STColumn[] = [];\n\n    const processItem = (item: STColumn): STColumn | null => {\n      if (item.iif && !item.iif(item)) {\n        return null;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        return null;\n      }\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n\n      // #region title\n\n      const tit = (typeof item.title === 'string' ? { text: item.title } : item.title) || {};\n      if (tit.i18n && this.i18nSrv) {\n        tit.text = this.i18nSrv.fanyi(tit.i18n);\n      }\n      if (tit.text) {\n        tit._text = this.dom.bypassSecurityTrustHtml(tit.text);\n      }\n      item.title = tit;\n\n      // #endregion\n\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null)\n      ) {\n        (item as any).type = '';\n      }\n      // className\n      if (!item.className) {\n        item.className = ({\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        } as NzSafeAny)[item.type!];\n      }\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item) as STColumnFilter;\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons!);\n      // widget\n      this.widgetCoerce(item);\n      // restore custom row\n      this.restoreRender(item);\n\n      item.__point = point++;\n\n      return item;\n    };\n\n    const processList = (data: STColumn[]): void => {\n      for (const item of data) {\n        const resItem = processItem(item);\n        if (resItem == null) continue;\n\n        if (Array.isArray(item.children)) {\n          processList(item.children);\n        } else {\n          columns.push(resItem);\n        }\n      }\n    };\n\n    const copyList = deepCopy(list);\n    processList(copyList);\n\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns);\n\n    return { columns, headers: this.genHeaders(copyList) };\n  }\n\n  restoreAllRender(columns: STColumn[]) {\n    columns.forEach(i => this.restoreRender(i));\n  }\n\n  updateDefault(filter: STColumnFilter): this {\n    if (filter.type === 'default') {\n      filter.default = filter.menus!.findIndex(w => w.checked!) !== -1;\n    } else {\n      filter.default = !!filter.menus![0].value;\n    }\n    return this;\n  }\n\n  cleanFilter(col: STColumn): this {\n    const f = col.filter!;\n    f.default = false;\n    if (f.type === 'default') {\n      f.menus!.forEach(i => (i.checked = false));\n    } else {\n      f.menus![0].value = undefined;\n    }\n    return this;\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CNCurrencyPipe, DatePipe, YNPipe, _HttpClient } from '@delon/theme';\nimport { deepCopy, deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  STColumn,\n  STColumnFilter,\n  STData,\n  STMultiSort,\n  STPage,\n  STReq,\n  STReqReNameType,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STSortMap,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './st.interfaces';\n\nexport interface STDataSourceOptions {\n  pi: number;\n  ps: number;\n  paginator: boolean;\n  data: string | STData[] | Observable<STData[]>;\n  total: number;\n  req: STReq;\n  res: STRes;\n  page: STPage;\n  columns: STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** 是否需要显示分页器 */\n  pageShow: boolean;\n  /** 新 `pi`，若返回 `undefined` 表示用户受控 */\n  pi: number;\n  /** 新 `ps`，若返回 `undefined` 表示用户受控 */\n  ps: number;\n  /** 新 `total`，若返回 `undefined` 表示用户受控 */\n  total: number;\n  /** 数据 */\n  list: STData[];\n  /** 统计数据 */\n  statistical: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private currentyPipe: CNCurrencyPipe,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Observable<STDataSourceResult> {\n    let data$: Observable<STData[]>;\n    let isRemote = false;\n    const { data, res, total, page, pi, ps, paginator, columns } = options;\n    let retTotal: number;\n    let retPs: number;\n    let retList: STData[];\n    let retPi: number;\n    let rawData: any;\n    let showPage = page.show;\n\n    if (typeof data === 'string') {\n      isRemote = true;\n      data$ = this.getByHttp(data, options).pipe(\n        map(result => {\n          rawData = result;\n          let ret: STData[];\n          if (Array.isArray(result)) {\n            ret = result;\n            retTotal = ret.length;\n            retPs = retTotal;\n            showPage = false;\n          } else {\n            // list\n            ret = deepGet(result, res.reName!.list as string[], []);\n            if (ret == null || !Array.isArray(ret)) {\n              ret = [];\n            }\n            // total\n            const resultTotal = res.reName!.total && deepGet(result, res.reName!.total as string[], null);\n            retTotal = resultTotal == null ? total || 0 : +resultTotal;\n          }\n          return deepCopy(ret);\n        }),\n      );\n    } else if (Array.isArray(data)) {\n      data$ = of(data);\n    } else {\n      // a cold observable\n      data$ = data;\n    }\n\n    if (!isRemote) {\n      data$ = data$.pipe(\n        // sort\n        map((result: STData[]) => {\n          rawData = result;\n          let copyResult = deepCopy(result);\n          const sorterFn = this.getSorterFn(columns);\n          if (sorterFn) {\n            copyResult = copyResult.sort(sorterFn);\n          }\n          return copyResult;\n        }),\n        // filter\n        map((result: STData[]) => {\n          columns\n            .filter(w => w.filter)\n            .forEach(c => {\n              const filter = c.filter!;\n              const values = this.getFilteredData(filter);\n              if (values.length === 0) return;\n              const onFilter = filter.fn;\n              if (typeof onFilter !== 'function') {\n                console.warn(`[st] Muse provide the fn function in filter`);\n                return;\n              }\n              result = result.filter(record => values.some(v => onFilter(v, record)));\n            });\n          return result;\n        }),\n        // paging\n        map((result: STData[]) => {\n          if (paginator && page.front) {\n            const maxPageIndex = Math.ceil(result.length / ps);\n            retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n            retTotal = result.length;\n            if (page.show === true) {\n              return result.slice((retPi - 1) * ps, retPi * ps);\n            }\n          }\n          return result;\n        }),\n      );\n    }\n\n    // pre-process\n    if (typeof res.process === 'function') {\n      data$ = data$.pipe(map(result => res.process!(result, rawData)));\n    }\n\n    data$ = data$.pipe(map(result => this.optimizeData({ result, columns, rowClassName: options.rowClassName })));\n\n    return data$.pipe(\n      map(result => {\n        retList = result;\n        const realTotal = retTotal || total;\n        const realPs = retPs || ps;\n\n        return {\n          pi: retPi,\n          ps: retPs,\n          total: retTotal,\n          list: retList,\n          statistical: this.genStatistical(columns, retList, rawData),\n          pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n        } as STDataSourceResult;\n      }),\n    );\n  }\n\n  private get(item: STData, col: STColumn, idx: number): { text: any; _text: SafeHtml; org?: any; color?: string } {\n    if (col.format) {\n      const formatRes = col.format(item, col, idx) || '';\n      if (formatRes && ~formatRes.indexOf('</')) {\n        return { text: formatRes, _text: this.dom.bypassSecurityTrustHtml(formatRes), org: formatRes };\n      }\n      return { text: formatRes, _text: formatRes, org: formatRes };\n    }\n\n    const value = deepGet(item, col.index as string[], col.default);\n\n    let text = value;\n    let color: string | undefined;\n    switch (col.type) {\n      case 'no':\n        text = this.getNoIndex(item, col, idx);\n        break;\n      case 'img':\n        text = value ? `<img src=\"${value}\" class=\"img\">` : '';\n        break;\n      case 'number':\n        text = this.numberPipe.transform(value, col.numberDigits);\n        break;\n      case 'currency':\n        text = this.currentyPipe.transform(value);\n        break;\n      case 'date':\n        text = value === col.default ? col.default : this.datePipe.transform(value, col.dateFormat);\n        break;\n      case 'yn':\n        text = this.ynPipe.transform(value === col.yn!.truth, col.yn!.yes!, col.yn!.no!, col.yn!.mode!, false);\n        break;\n      case 'tag':\n      case 'badge':\n        const data = col.type === 'tag' ? col.tag : col.badge;\n        if (data && data[text]) {\n          const dataItem = data[text];\n          text = dataItem.text;\n          color = dataItem.color;\n        } else {\n          text = '';\n        }\n        break;\n    }\n    if (text == null) text = '';\n    return { text, _text: this.dom.bypassSecurityTrustHtml(text), org: value, color };\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, paginator, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    const reName = req.reName as STReqReNameType;\n    if (paginator) {\n      if (req.type === 'page') {\n        params = {\n          [reName.pi as string]: page.zeroIndexed ? pi - 1 : pi,\n          [reName.ps as string]: ps,\n        };\n      } else {\n        params = {\n          [reName.skip as string]: (pi - 1) * ps,\n          [reName.limit as string]: ps,\n        };\n      }\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  optimizeData(options: { columns: STColumn[]; result: STData[]; rowClassName?: STRowClassName }): STData[] {\n    const { result, columns, rowClassName } = options;\n    for (let i = 0, len = result.length; i < len; i++) {\n      result[i]._values = columns.map(c => this.get(result[i], c, i));\n      if (rowClassName) {\n        result[i]._rowClassName = rowClassName(result[i], i);\n      }\n    }\n    return result;\n  }\n\n  getNoIndex(item: STData, col: STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex! + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: STColumn[]): STSortMap[] {\n    return columns.filter(item => item._sort && item._sort.enabled && item._sort.default).map(item => item._sort!);\n  }\n\n  private getSorterFn(columns: STColumn[]) {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    const sortItem = sortList[0];\n    if (sortItem.compare === null) {\n      return;\n    }\n    if (typeof sortItem.compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortItem.compare!(a, b);\n      if (result !== 0) {\n        return sortItem.default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(singleSort: STSingleSort | undefined, multiSort: STMultiSort | undefined, columns: STColumn[]): { [key: string]: string } {\n    let ret: { [key: string]: string } = {};\n    const sortList = this.getValidSort(columns);\n    if (!multiSort && sortList.length === 0) return ret;\n\n    if (multiSort) {\n      const ms = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        ...multiSort,\n      };\n\n      ret = {\n        [ms.key]: sortList\n          .sort((a, b) => a.tick - b.tick)\n          .map(item => item.key + ms.nameSeparator + ((item.reName || {})[item.default!] || item.default))\n          .join(ms.separator),\n      };\n      if (multiSort.keepEmptyKey === false && ret[ms.key].length === 0) {\n        ret = {};\n      }\n    } else {\n      const mapData = sortList[0];\n      let sortFiled = mapData.key;\n      let sortValue = (sortList[0].reName || {})[mapData.default!] || mapData.default;\n      if (singleSort) {\n        sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n        sortFiled = singleSort.key || 'sort';\n      }\n      ret[sortFiled as string] = sortValue as string;\n    }\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getFilteredData(filter: STColumnFilter) {\n    return filter.type === 'default' ? filter.menus!.filter(f => f.checked === true) : filter.menus!.slice(0, 1);\n  }\n\n  private getReqFilterMap(columns: STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const filter = col.filter!;\n        const values = this.getFilteredData(filter);\n        let obj: { [key: string]: NzSafeAny } = {};\n        if (filter.reName) {\n          obj = filter.reName!(filter.menus!, col);\n        } else {\n          obj[filter.key!] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res: { [key: string]: NzSafeAny } = {};\n    columns.forEach((col, index) => {\n      res[col.key ? col.key : index] = col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: undefined,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter((value, idx, self) => self.indexOf(value) === idx).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits!);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits!);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currentyPipe.transform(res.value) as string;\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STColumn, STExportOptions } from './st.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn, index: number): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col, index);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      switch (col.type) {\n        case 'currency':\n          ret.t = 'n';\n          break;\n        case 'date':\n          ret.t = 'd';\n          break;\n        case 'yn':\n          ret.v = ret.v === col.ynTruth ? col.ynYes || '是' : col.ynNo || '否';\n          break;\n      }\n    }\n\n    ret.v = ret.v || '';\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: { [key: string]: NzSafeAny } } = {};\n    const sheet: { [key: string]: NzSafeAny } = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt._c!.filter(w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0));\n    const cc = colData.length;\n    const dc = opt._d!.length;\n\n    // column\n    for (let i = 0; i < cc; i++) {\n      const tit = colData[i].title;\n      sheet[`${String.fromCharCode(i + 65)}1`] = {\n        t: 's',\n        v: typeof tit === 'object' ? tit.text : tit,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dc; i++) {\n      for (let j = 0; j < cc; j++) {\n        sheet[`${String.fromCharCode(j + 65)}${i + 2}`] = this._stGet(opt._d![i], colData[j], i);\n      }\n    }\n\n    if (cc > 0 && dc > 0) {\n      sheet['!ref'] = `A1:${String.fromCharCode(cc + 65 - 1)}${dc + 1}`;\n    }\n\n    return sheets;\n  }\n\n  export(opt: STExportOptions) {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { AlainSTConfig } from '@delon/util';\n\nexport const ST_DEFULAT_CONFIG: AlainSTConfig = {\n  pi: 1,\n  ps: 10,\n  size: 'default',\n  responsive: true,\n  responsiveHideHeaderFooter: false,\n  req: {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    lazyLoad: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  },\n  res: {\n    reName: { list: ['list'], total: ['total'] },\n  },\n  page: {\n    front: true,\n    zeroIndexed: false,\n    position: 'bottom',\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    toTop: true,\n    toTopOffset: 100,\n  },\n  modal: {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  },\n  drawer: {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  },\n  pop: {\n    title: '确认删除吗？',\n    trigger: 'click',\n    placement: 'top',\n  },\n  rowClickTime: 200,\n  btnIcon: {\n    type: '',\n    theme: 'outline',\n    spin: false,\n  },\n  noIndex: 1,\n  expandRowByClick: false,\n  expandAccordion: false,\n  widthMode: {\n    type: 'default',\n    strictBehavior: 'truncate',\n  },\n  virtualItemSize: 54,\n  virtualMaxBufferPx: 200,\n  virtualMinBufferPx: 100,\n  iifBehavior: 'hide',\n};\n","import { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  CNCurrencyPipe,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport { AlainConfigService, AlainSTConfig, deepMergeKey, InputBoolean, InputNumber, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableComponent, NzTableData } from 'ng-zorro-antd/table';\nimport { from, Observable, of, Subject, Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { STColumnSource } from './st-column-source';\nimport { STDataSource, STDataSourceOptions, STDataSourceResult } from './st-data-source';\nimport { STExport } from './st-export';\nimport { STRowSource } from './st-row.directive';\nimport { ST_DEFULAT_CONFIG } from './st.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu,\n  STColumnSelection,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STResetColumnsOption,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n} from './st.interfaces';\n\n@Component({\n  selector: 'st',\n  exportAs: 'st',\n  templateUrl: './st.component.html',\n  providers: [STDataSource, STRowSource, STColumnSource, STExport, CNCurrencyPipe, DatePipe, YNPipe, DecimalPipe],\n  host: {\n    '[class.st]': `true`,\n    '[class.st__p-left]': `page.placement === 'left'`,\n    '[class.st__p-center]': `page.placement === 'center'`,\n    '[class.st__width-strict]': `widthMode.type === 'strict'`,\n    '[class.ant-table-rep]': `responsive`,\n    '[class.ant-table-rep__hide-header-footer]': `responsiveHideHeaderFooter`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private data$: Subscription;\n  private totalTpl = ``;\n  private cog: AlainSTConfig;\n  private rowClickCount = 0;\n  private _req: STReq;\n  private _res: STRes;\n  private _page: STPage;\n  private _widthMode: STWidthMode;\n  locale: LocaleData = {};\n  _loading = false;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _headers: STColumn[][] = [];\n  _columns: STColumn[] = [];\n  @ViewChild('table', { static: false }) readonly orgTable: NzTableComponent;\n\n  @Input()\n  get req() {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMergeKey({}, true, this.cog.req, value);\n  }\n  /** 返回体配置 */\n  @Input()\n  get res() {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = (this._res = deepMergeKey({}, true, this.cog.res, value));\n    const reName = item.reName!;\n    if (!Array.isArray(reName.list)) reName.list = reName.list!.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total!.split('.');\n    this._res = item;\n  }\n  @Input()\n  get page() {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this._page = { ...this.cog.page, ...value };\n    this.updateTotalTpl();\n  }\n  @Input() data: string | STData[] | Observable<STData[]>;\n  @Input() columns: STColumn[] = [];\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  @Input() loading: boolean | null = null;\n  @Input() @InputNumber() loadingDelay = 0;\n  @Input() loadingIndicator: TemplateRef<void>;\n  @Input() @InputBoolean() bordered = false;\n  @Input() size: 'small' | 'middle' | 'default';\n  @Input() scroll: { y?: string; x?: string };\n  @Input() singleSort: STSingleSort;\n  private _multiSort?: STMultiSort;\n  @Input()\n  get multiSort() {\n    return this._multiSort;\n  }\n  set multiSort(value: NzSafeAny) {\n    if (typeof value === 'boolean' && !toBoolean(value)) {\n      this._multiSort = undefined;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { ...this.cog.widthMode, ...value };\n  }\n  get widthMode() {\n    return this._widthMode;\n  }\n  @Input() header: string | TemplateRef<void>;\n  @Input() footer: string | TemplateRef<void>;\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  @Input() @InputBoolean() expandAccordion = false;\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() widthConfig: string[];\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsive: boolean = true;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  // tslint:disable-next-line:no-output-native\n  @Output() readonly error = new EventEmitter<STError>();\n  // tslint:disable-next-line:no-output-native\n  @Output() readonly change = new EventEmitter<STChange>();\n  @Input() @InputBoolean() virtualScroll = false;\n  @Input() @InputNumber() virtualItemSize = 54;\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\n  @Input() @InputNumber() virtualMinBufferPx = 100;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n\n  /**\n   * Get the number of the current page\n   */\n  get count(): number {\n    return this._data.length;\n  }\n\n  /**\n   * Get the data of the current page\n   */\n  get list(): STData[] {\n    return this._data;\n  }\n\n  private get routerState() {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private el: ElementRef,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n    configSrv: AlainConfigService,\n  ) {\n    this.setCog(configSrv.merge<AlainSTConfig, 'st'>('st', ST_DEFULAT_CONFIG));\n\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.updateTotalTpl();\n        this.cd();\n      }\n    });\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  private setCog(cog: AlainSTConfig): void {\n    const copyMultiSort = { ...cog.multiSort };\n    // Because multiSort.global will affect the result, it should be removed first, and multiSort will be operated again after processing.\n    delete cog.multiSort;\n    this.cog = cog;\n    Object.assign(this, cog);\n\n    if (copyMultiSort.global !== false) {\n      this.multiSort = copyMultiSort;\n    }\n    this.columnSource.setCog(cog);\n  }\n\n  cd() {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]) {\n    return this.totalTpl\n      ? this.totalTpl.replace('{{total}}', total).replace('{{range[0]}}', range[0]).replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  isTruncate(column: STColumn): boolean {\n    return !!column.width && this.widthMode.strictBehavior === 'truncate' && column.type !== 'img';\n  }\n\n  columnClass(column: STColumn): string | null {\n    return column.className || (this.isTruncate(column) ? 'text-truncate' : null);\n  }\n\n  private changeEmit(type: STChangeType, data?: any) {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  // #region data\n\n  /**\n   * 获取过滤后所有数据\n   * - 本地数据：包含排序、过滤后不分页数据\n   * - 远程数据：不传递 `pi`、`ps` 两个参数\n   */\n  get filteredData(): Promise<STData[]> {\n    return this.loadData({ paginator: false } as any).then(res => res.list);\n  }\n\n  private updateTotalTpl(): void {\n    const { total } = this.page;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n  }\n\n  private setLoading(val: boolean): void {\n    if (this.loading == null) {\n      this._loading = val;\n      this.cdr.detectChanges();\n    }\n  }\n\n  private loadData(options?: STDataSourceOptions): Promise<STDataSourceResult> {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    return new Promise((resolvePromise, rejectPromise) => {\n      if (this.data$) {\n        this.data$.unsubscribe();\n      }\n\n      this.data$ = this.dataSource\n        .process({\n          pi,\n          ps,\n          total,\n          data,\n          req,\n          res,\n          page,\n          columns: this._columns,\n          singleSort,\n          multiSort,\n          rowClassName,\n          paginator: true,\n          ...options,\n        })\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          result => resolvePromise(result),\n          error => {\n            console.warn('st.loadDate', error);\n            rejectPromise(error);\n          },\n        );\n    });\n  }\n\n  private async loadPageData(): Promise<this> {\n    this.setLoading(true);\n    try {\n      const result = await this.loadData();\n      this.setLoading(false);\n      if (typeof result.pi !== 'undefined') {\n        this.pi = result.pi;\n      }\n      if (typeof result.ps !== 'undefined') {\n        this.ps = result.ps;\n      }\n      if (typeof result.total !== 'undefined') {\n        this.total = result.total;\n      }\n      if (typeof result.pageShow !== 'undefined') {\n        this._isPagination = result.pageShow;\n      }\n      this._data = result.list as STData[];\n      this._statistical = result.statistical as STStatisticalResults;\n      this.changeEmit('loaded', result.list);\n      return this._refCheck();\n    } catch (error) {\n      this.setLoading(false);\n      if (!this.unsubscribe$.isStopped) {\n        this.cdr.detectChanges();\n        this.error.emit({ type: 'req', error });\n      }\n      return this;\n    }\n  }\n\n  /** 清空所有数据 */\n  clear(cleanStatus = true): this {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** 清空所有状态 */\n  clearStatus(): this {\n    return this.clearCheck().clearRadio().clearFilter().clearSort();\n  }\n\n  /**\n   * 根据页码重新加载数据\n   *\n   * @param pi 指定当前页码，默认：`1`\n   * @param extraParams 重新指定 `extraParams` 值\n   * @param options 选项\n   */\n  load(pi = 1, extraParams?: {}, options?: STLoadOptions) {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this.req.params = options && options.merge ? { ...this.req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi', options);\n    return this;\n  }\n\n  /**\n   * 重新刷新当前页\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reload(extraParams?: {}, options?: STLoadOptions) {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * 重置且重新设置 `pi` 为 `1`，包含以下值：\n   * - `check` 数据\n   * - `radio` 数据\n   * - `sort` 数据\n   * - `fileter` 数据\n   *\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reset(extraParams?: {}, options?: STLoadOptions) {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop(enforce?: boolean) {\n    if (!(enforce == null ? this.page.toTop : enforce)) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      el.querySelector('.ant-table-body')!.scrollTo(0, 0);\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset!;\n  }\n\n  _change(type: 'pi' | 'ps', options?: STLoadOptions) {\n    if (type === 'pi' || (type === 'ps' && this.pi <= Math.ceil(this.total / this.ps))) {\n      this.loadPageData().then(() => this._toTop(options?.toTop));\n    }\n\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn) {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click!(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n  private closeOtherExpand(item: STData) {\n    if (this.expandAccordion === false) return;\n    this._data.filter(i => i !== item).forEach(i => (i.expand = false));\n  }\n  _rowClick(e: Event, item: STData, index: number) {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && item.showExpand !== false && expandRowByClick) {\n      item.expand = !item.expand;\n      this.closeOtherExpand(item);\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData, expand: boolean): void {\n    if (this.expandRowByClick) {\n      return;\n    }\n    item.expand = expand;\n    this.closeOtherExpand(item);\n    this.changeEmit('expand', item);\n  }\n\n  /**\n   * Remove a row in the table, like this:\n   *\n   * ```\n   * this.st.removeRow(0)\n   * this.st.removeRow(stDataItem)\n   * ```\n   */\n  removeRow(data: STData | STData[] | number) {\n    if (typeof data === 'number') {\n      this._data.splice(data, 1);\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      (data as STData[])\n        .map(item => this._data.indexOf(item))\n        .filter(pos => pos !== -1)\n        .forEach(pos => this._data.splice(pos, 1));\n    }\n    // recalculate no\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c => this._data.forEach((i, idx) => (i._values[c.__point] = { text: this.dataSource.getNoIndex(i, c, idx), org: idx })));\n\n    return this.cd();\n  }\n\n  /**\n   * Sets the row value for the `index` in the table, like this:\n   *\n   * - `optinos.refreshSchema` Whether to refresh of st schemas\n   * - `optinos.emitReload` Whether to trigger a reload http request when data is url\n   *\n   * ```\n   * this.st.setRow(0, { price: 100 })\n   * this.st.setRow(0, { price: 100, name: 'asdf' })\n   * ```\n   */\n  setRow(index: number, item: STData, options?: { refreshSchema?: boolean; emitReload?: boolean }): this {\n    options = { refreshSchema: false, emitReload: false, ...options };\n    this._data[index] = deepMergeKey(this._data[index], false, item);\n    this._data = this.dataSource.optimizeData({ columns: this._columns, result: this._data, rowClassName: this.rowClassName });\n    if (options.refreshSchema) {\n      this.resetColumns({ emitReload: options.emitReload });\n      return this;\n    }\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: STColumn, idx: number, value: any) {\n    if (this.multiSort) {\n      col._sort!.default = value;\n      col._sort!.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort!.default = index === idx ? value : null));\n    }\n    this.loadPageData();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort() {\n    this._columns.forEach(item => (item._sort!.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn) {\n    this.columnSource.updateDefault(col.filter!);\n    this.loadPageData();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: STColumn) {\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: STColumn, item: STColumnFilterMenu, checked: boolean) {\n    col.filter!.menus!.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  _filterClear(col: STColumn) {\n    this.columnSource.cleanFilter(col);\n    this.handleFilter(col);\n  }\n\n  clearFilter() {\n    this._columns.filter(w => w.filter && w.filter.default === true).forEach(col => this.columnSource.cleanFilter(col));\n    return this;\n  }\n\n  // #endregion\n\n  // #region checkbox\n\n  /** 清除所有 `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    return this.cd();\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean) {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** 清除所有 `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(record: STData, btn: STColumnButton, e?: Event) {\n    // should be stop propagation when expandRowByClick is true\n    if (e && this.expandRowByClick === true) {\n      e.stopPropagation();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal!.paramsName!]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal!.component,\n        { ...obj, ...(modal!.params && modal!.params!(record)) },\n        deepMergeKey({}, true, this.cog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe((res: NzSafeAny) => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer!.paramsName!]: record };\n      this.drawerHelper\n        .create(\n          drawer!.title!,\n          drawer!.component,\n          { ...obj, ...(drawer!.params && drawer!.params!(record)) },\n          deepMergeKey({}, true, this.cog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any) {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton) {\n    return typeof btn.text === 'function' ? btn.text(record, btn) : btn.text || '';\n  }\n\n  _validBtns(btns: STColumnButton[], item: STData, col: STColumn): STColumnButton[] {\n    return btns.filter(btn => {\n      const result = btn.iif!(item, btn, col);\n      const isRenderDisabled = btn.iifBehavior === 'disabled';\n      btn._result = result;\n      btn._disabled = !result && isRenderDisabled;\n      return result || isRenderDisabled;\n    });\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * 导出当前页，确保已经注册 `XlsxModule`\n   * @param newData 重新指定数据；若为 `true` 表示使用 `filteredData` 数据\n   * @param opt 额外参数\n   */\n  export(newData?: STData[] | true, opt?: STExportOptions) {\n    (newData === true ? from(this.filteredData) : of(newData || this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        _d: res,\n        _c: this._columns,\n      }),\n    );\n  }\n\n  // #endregion\n\n  get cdkVirtualScrollViewport() {\n    return this.orgTable.cdkVirtualScrollViewport;\n  }\n\n  resetColumns(options?: STResetColumnsOption): Promise<this> {\n    options = { emitReload: true, ...options };\n    if (typeof options.columns !== 'undefined') {\n      this.columns = options.columns;\n    }\n    if (typeof options.pi !== 'undefined') {\n      this.pi = options.pi;\n    }\n    if (typeof options.ps !== 'undefined') {\n      this.ps = options.ps;\n    }\n    this.refreshColumns();\n    if (options.emitReload === true) {\n      return this.loadPageData();\n    } else {\n      this.cd();\n      return Promise.resolve(this);\n    }\n  }\n\n  private refreshColumns(): this {\n    const res = this.columnSource.process(this.columns);\n    this._columns = res.columns;\n    this._headers = res.headers;\n    console.log(res);\n    return this;\n  }\n\n  ngAfterViewInit() {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns();\n    }\n    const changeData = changes.data;\n    if (changeData && changeData.currentValue && !(this.req.lazyLoad && changeData.firstChange)) {\n      this.loadPageData();\n    }\n    if (changes.loading) {\n      this._loading = changes.loading.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STData } from './st.interfaces';\n\n@Directive({ selector: '[st-widget-host]' })\nexport class STWidgetHostDirective implements OnInit {\n  @Input() record: STData;\n  @Input() column: STColumn;\n\n  constructor(\n    private stWidgetRegistry: STWidgetRegistry,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    const widget = this.column.widget!;\n    const componentType = this.stWidgetRegistry.get(widget.type);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType as any);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    const { record, column } = this;\n    const data: { [key: string]: any } = widget.params ? widget.params({ record, column }) : { record };\n    Object.keys(data).forEach(key => {\n      (componentRef.instance as any)[key] = data[key];\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonACLModule } from '@delon/acl';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { STRowDirective } from './st-row.directive';\nimport { STWidgetHostDirective } from './st-widget-host.directive';\nimport { STComponent } from './st.component';\n\nconst COMPONENTS = [STComponent];\nconst DIRECTIVES = [STRowDirective, STWidgetHostDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DelonUtilModule,\n    DelonACLModule,\n    NzPopconfirmModule,\n    NzTableModule,\n    NzIconModule,\n    NzBadgeModule,\n    NzCheckboxModule,\n    NzDividerModule,\n    NzDropDownModule,\n    NzMenuModule,\n    NzRadioModule,\n    NzTagModule,\n    NzInputModule,\n    NzToolTipModule,\n  ],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class STModule {}\n"],"names":[],"mappings":"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"}