{"version":3,"file":"loading.js","sources":["ng://@delon/abc/loading/loading.config.ts","ng://@delon/abc/loading/loading.component.ts","ng://@delon/abc/loading/loading.service.ts","ng://@delon/abc/loading/loading.module.ts","ng://@delon/abc/loading/loading.interfaces.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoadingType, LoadingIcon, LoadingCustom } from './loading.interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingConfig {\n  type?: LoadingType = 'spin';\n  text?: string = 'å è½½ä¸­...';\n  icon?: LoadingIcon = {\n    type: 'loading',\n    theme: 'outline',\n    spin: true,\n  };\n  custom?: LoadingCustom;\n  delay?: number = 0;\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { LoadingShowOptions } from './loading.interfaces';\n\n@Component({\n  selector: 'loading-default',\n  templateUrl: './loading.component.html',\n  host: {\n    '[class.loading-default]': 'true',\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LoadingDefaultComponent {\n  options: LoadingShowOptions;\n\n  get icon() {\n    return this.options.icon!;\n  }\n\n  get custom() {\n    return this.options.custom!;\n  }\n}\n","import { Injectable, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { LoadingShowOptions } from './loading.interfaces';\nimport { LoadingConfig } from './loading.config';\nimport { LoadingDefaultComponent } from './loading.component';\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingService {\n  private _overlayRef: OverlayRef;\n  private compRef: ComponentRef<LoadingDefaultComponent> | null = null;\n\n  get instance() {\n    return this.compRef!.instance;\n  }\n\n  constructor(private cog: LoadingConfig, private overlay: Overlay) {}\n\n  open(options?: LoadingShowOptions): void {\n    if (this.compRef) return;\n\n    options = { ...this.cog, ...options };\n    this._overlayRef = this.overlay.create({\n      positionStrategy: this.overlay\n        .position()\n        .global()\n        .centerHorizontally()\n        .centerVertically(),\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      hasBackdrop: true,\n      backdropClass: 'loading-backdrop',\n    });\n    const comp = new ComponentPortal(LoadingDefaultComponent);\n    this.compRef = this._overlayRef.attach(comp);\n    Object.assign(this.instance, { options });\n    this.compRef.changeDetectorRef.detectChanges();\n  }\n\n  close(): void {\n    if (!this._overlayRef) return;\n    this.compRef!.destroy();\n    this._overlayRef.detach();\n    this.compRef = null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n\nimport { LoadingDefaultComponent } from './loading.component';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule, NzIconModule, NzSpinModule],\n  declarations: [LoadingDefaultComponent],\n  entryComponents: [LoadingDefaultComponent],\n  exports: [LoadingDefaultComponent],\n})\nexport class LoadingModule {}\n","import { SafeHtml } from '@angular/platform-browser';\n\nexport type LoadingType = 'text' | 'icon' | 'spin' | 'custom';\n\nexport interface LoadingIcon {\n  type?: string;\n  theme?: 'fill' | 'outline' | 'twotone';\n  spin?: boolean;\n}\n\nexport interface LoadingCustom {\n  html?: string | SafeHtml;\n  style?: object;\n}\n\nexport interface LoadingShowOptions {\n  type?: LoadingType;\n  text?: string;\n  icon?: LoadingIcon;\n  custom?: LoadingCustom;\n  delay?: number;\n}\n"],"names":[],"mappings":"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"}