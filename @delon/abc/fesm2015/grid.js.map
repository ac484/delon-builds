{"version":3,"file":"grid.js","sources":["ng://@delon/abc/sg/sg-container.component.ts","ng://@delon/abc/sg/sg.component.ts","ng://@delon/abc/sg/sg.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { REP_TYPE } from '@delon/theme';\nimport { AlainConfigService, InputNumber } from '@delon/util';\n\n@Component({\n  selector: 'sg-container, [sg-container]',\n  exportAs: 'sgContainer',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[style.margin-left.px]': 'marginValue',\n    '[style.margin-right.px]': 'marginValue',\n    '[class.ant-row]': 'true',\n    '[class.sg__wrap]': 'true',\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SGContainerComponent {\n  // #region fields\n\n  @Input() @InputNumber() gutter: number;\n  @Input('sg-container') @InputNumber(null) colInCon: REP_TYPE;\n  @Input() @InputNumber(null) col: REP_TYPE;\n\n  // #endregion\n\n  get marginValue(): number {\n    return -(this.gutter / 2);\n  }\n\n  constructor(configSrv: AlainConfigService) {\n    configSrv.attach(this, 'sg', {\n      gutter: 32,\n      col: 2,\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Host,\n  Input,\n  OnChanges,\n  Optional,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ResponsiveService } from '@delon/theme';\nimport { InputNumber } from '@delon/util';\nimport { SGContainerComponent } from './sg-container.component';\n\nconst prefixCls = `sg`;\n\n@Component({\n  selector: 'sg',\n  exportAs: 'sg',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[style.padding-left.px]': 'paddingValue',\n    '[style.padding-right.px]': 'paddingValue',\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SGComponent implements OnChanges, AfterViewInit {\n  private el: HTMLElement;\n  private clsMap: string[] = [];\n  private inited = false;\n\n  @Input() @InputNumber(null) col: number;\n\n  get paddingValue(): number {\n    return this.parent.gutter / 2;\n  }\n\n  constructor(\n    el: ElementRef,\n    private ren: Renderer2,\n    @Optional() @Host() private parent: SGContainerComponent,\n    private rep: ResponsiveService,\n  ) {\n    if (parent == null) {\n      throw new Error(`[sg] must include 'sg-container' component`);\n    }\n    this.el = el.nativeElement;\n  }\n\n  private setClass(): this {\n    const { el, ren, clsMap, col, parent } = this;\n    clsMap.forEach(cls => ren.removeClass(el, cls));\n    clsMap.length = 0;\n    clsMap.push(...this.rep.genCls(col != null ? col : parent.colInCon || parent.col), `${prefixCls}__item`);\n    clsMap.forEach(cls => ren.addClass(el, cls));\n    return this;\n  }\n\n  ngOnChanges() {\n    if (this.inited) this.setClass();\n  }\n\n  ngAfterViewInit(): void {\n    this.setClass();\n    this.inited = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DelonUtilModule } from '@delon/util';\nimport { SGContainerComponent } from './sg-container.component';\nimport { SGComponent } from './sg.component';\n\nconst COMPONENTS = [SGContainerComponent, SGComponent];\n\n@NgModule({\n  imports: [CommonModule, DelonUtilModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class SGModule {}\n"],"names":[],"mappings":"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"}