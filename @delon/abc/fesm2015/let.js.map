{"version":3,"file":"let.js","sources":["../../../../packages/abc/let/let.directive.ts","../../../../packages/abc/let/let.module.ts","../../../../packages/abc/let/let.ts"],"sourcesContent":["import { Directive, Inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class LetContext<T> {\n  constructor(private readonly internalDirectiveInstance: LetDirective<T>) {}\n\n  get $implicit(): T {\n    return this.internalDirectiveInstance.let;\n  }\n\n  get let(): T {\n    return this.internalDirectiveInstance.let;\n  }\n}\n\n@Directive({ selector: '[let]' })\nexport class LetDirective<T> {\n  @Input() let!: T;\n\n  constructor(@Inject(ViewContainerRef) viewContainer: ViewContainerRef, @Inject(TemplateRef) ref: TemplateRef<LetContext<T>>) {\n    viewContainer.createEmbeddedView(ref, new LetContext<T>(this));\n  }\n\n  static ngTemplateContextGuard<T>(_dir: LetDirective<T>, _ctx: any): _ctx is LetDirective<T> {\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LetDirective } from './let.directive';\n\nconst DIRECTIVES = [LetDirective];\n\n@NgModule({\n  declarations: DIRECTIVES,\n  exports: DIRECTIVES,\n})\nexport class LetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;MAEa,UAAU;IACrB,YAA6B,yBAA0C;QAA1C,8BAAyB,GAAzB,yBAAyB,CAAiB;KAAI;IAE3E,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC;KAC3C;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC;KAC3C;CACF;MAGY,YAAY;IAGvB,YAAsC,aAA+B,EAAuB,GAA+B;QACzH,aAAa,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,UAAU,CAAI,IAAI,CAAC,CAAC,CAAC;KAChE;IAED,OAAO,sBAAsB,CAAI,IAAqB,EAAE,IAAS;QAC/D,OAAO,IAAI,CAAC;KACb;;;YAVF,SAAS,SAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;;;;YAdgB,gBAAgB,uBAkBjD,MAAM,SAAC,gBAAgB;YAlBH,WAAW,uBAkB4B,MAAM,SAAC,WAAW;;;kBAFzF,KAAK;;;ACbR,MAAM,UAAU,GAAG,CAAC,YAAY,CAAC,CAAC;MAMrB,SAAS;;;YAJrB,QAAQ,SAAC;gBACR,YAAY,EAAE,UAAU;gBACxB,OAAO,EAAE,UAAU;aACpB;;;ACRD;;;;;;"}