{"version":3,"file":"cell.mjs","sources":["../../../../packages/abc/cell/cell.service.ts","../../../../packages/abc/cell/cell-host.directive.ts","../../../../packages/abc/cell/cell.component.ts","../../../../packages/abc/cell/cell.module.ts","../../../../packages/abc/cell/cell.ts"],"sourcesContent":["import { Injectable, Type } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { map, Observable, of } from 'rxjs';\n\nimport { yn } from '@delon/theme';\nimport { AlainCellConfig, AlainConfigService } from '@delon/util/config';\nimport { formatDate } from '@delon/util/date-time';\nimport { CurrencyService, formatMask } from '@delon/util/format';\nimport { deepMerge } from '@delon/util/other';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport type {\n  CellFuValue,\n  CellOptions,\n  CellTextResult,\n  CellTextUnit,\n  CellType,\n  CellWidget,\n  CellWidgetFn\n} from './cell.types';\n\n@Injectable({ providedIn: 'root' })\nexport class CellService {\n  private globalOptions!: AlainCellConfig;\n  private widgets: { [key: string]: CellWidget } = {\n    date: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return { text: formatDate(value as string, opt.date!.format!, this.nzI18n.getDateLocale()) };\n      }\n    },\n    mega: {\n      type: 'fn',\n      ref: (value, opt) => {\n        const res = this.currency.mega(value as number, opt.mega);\n        return { text: res.value, unit: res.unitI18n };\n      }\n    },\n    currency: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return { text: this.currency.format(value as number, opt.currency) };\n      }\n    },\n    cny: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return { text: this.currency.cny(value as number, opt.cny) };\n      }\n    },\n    boolean: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return { text: this.dom.bypassSecurityTrustHtml(yn(value as boolean, opt.boolean)) };\n      }\n    },\n    img: {\n      type: 'fn',\n      ref: value => {\n        return { text: Array.isArray(value) ? value : [value] };\n      }\n    }\n  };\n\n  constructor(\n    configSrv: AlainConfigService,\n    private nzI18n: NzI18nService,\n    private currency: CurrencyService,\n    private dom: DomSanitizer\n  ) {\n    this.globalOptions = configSrv.merge('cell', {\n      date: { format: 'yyyy-MM-dd HH:mm:ss' },\n      img: { size: 32, big: true }\n    })!;\n  }\n\n  registerWidget(key: string, widget: Type<unknown>): void {\n    this.widgets[key] = { type: 'widget', ref: widget };\n  }\n\n  getWidget(key: string): CellWidget | undefined {\n    return this.widgets[key];\n  }\n\n  private genType(value: unknown, options: CellOptions): CellType {\n    if (options.type != null) return options.type;\n\n    const typeOf = typeof value;\n    // When is timestamp\n    if (typeOf === 'number' && /^[0-9]{13}$/g.test(value as string)) return 'date';\n    if (value instanceof Date || options.date != null) return 'date';\n\n    // Auto detection\n    if (options.widget != null) return 'widget';\n    else if (options.mega != null) return 'mega';\n    else if (options.currency != null) return 'currency';\n    else if (options.cny != null) return 'cny';\n    else if (options.img != null) return 'img';\n    else if (options.link != null) return 'link';\n    else if (options.html != null) return 'html';\n    else if (options.badge != null) return 'badge';\n    else if (options.tag != null) return 'tag';\n    else if (typeOf === 'number') return 'number';\n    else if (typeOf === 'boolean' || options.boolean != null) return 'boolean';\n    else return 'string';\n  }\n\n  fixOptions(options?: CellOptions): CellOptions {\n    return deepMerge({}, this.globalOptions, options);\n  }\n\n  get(value: unknown, options?: CellOptions): Observable<CellTextResult> {\n    const type = this.genType(value, { ...options });\n    const opt = this.fixOptions(options);\n    let res: CellTextResult = {\n      type: 'string',\n      result: typeof value === 'object' ? (value as CellTextUnit) : { text: value == null ? '' : `${value}` },\n      options: opt\n    };\n\n    const widget = this.widgets[type];\n    if (widget?.type === 'fn') {\n      res.result = (widget.ref as CellWidgetFn)(value, opt);\n    }\n\n    return (typeof value === 'function' ? (value as CellFuValue)(value, opt) : of(res.result)).pipe(\n      map(text => {\n        res.result = text;\n        res.type = type;\n        switch (type) {\n          case 'badge':\n            res.result = { color: 'default', ...(opt.badge?.data ?? {})[value as string] };\n            break;\n          case 'tag':\n            res.result = (opt.tag?.data ?? {})[value as string];\n            break;\n          case 'html':\n            res.safeHtml = opt.html?.safe;\n            break;\n        }\n        if (opt.mask != null) {\n          res.result.text = formatMask(res.result.text as string, opt.mask);\n        }\n        return res;\n      })\n    );\n  }\n}\n","import { Directive, Input, OnInit, Type, ViewContainerRef } from '@angular/core';\n\nimport { warn } from '@delon/util/other';\n\nimport { CellService } from './cell.service';\nimport { CellWidgetData } from './cell.types';\n\n@Directive({ selector: '[cell-widget-host]' })\nexport class CellHostDirective implements OnInit {\n  @Input() data!: CellWidgetData;\n\n  constructor(private srv: CellService, private viewContainerRef: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    const widget = this.data.options!.widget!;\n    const componentType = this.srv.getWidget(widget.key!)?.ref as Type<unknown>;\n    if (componentType == null) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        warn(`cell: No widget for type \"${widget.key}\"`);\n      }\n      return;\n    }\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentType);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (componentRef.instance as any).data = this.data;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { updateHostClass } from '@delon/util/browser';\nimport { BooleanInput, InputBoolean } from '@delon/util/decorator';\nimport { WINDOW } from '@delon/util/token';\nimport { NzImage, NzImageService } from 'ng-zorro-antd/image';\n\nimport { CellService } from './cell.service';\nimport type { CellOptions, CellTextResult, CellWidgetData } from './cell.types';\n\n@Component({\n  selector: 'cell, [cell]',\n  template: `\n    <ng-template #text>\n      <ng-container [ngSwitch]=\"res?.type\">\n        <a\n          *ngSwitchCase=\"'link'\"\n          (click)=\"_link($event)\"\n          [attr.target]=\"safeOpt.link?.target\"\n          [innerHTML]=\"_text\"\n          [attr.title]=\"truncate ? value : null\"\n        ></a>\n        <nz-tag *ngSwitchCase=\"'tag'\" [nzColor]=\"res?.result?.color\">\n          <span [innerHTML]=\"_text\"></span>\n        </nz-tag>\n        <nz-badge *ngSwitchCase=\"'badge'\" [nzStatus]=\"res?.result?.color\" nzText=\"{{ _text }}\"></nz-badge>\n        <ng-template *ngSwitchCase=\"'widget'\" cell-widget-host [data]=\"hostData\"></ng-template>\n        <ng-container *ngSwitchCase=\"'img'\">\n          <img\n            *ngFor=\"let i of $any(_text)\"\n            [attr.src]=\"i\"\n            [attr.height]=\"safeOpt.img?.size\"\n            [attr.width]=\"safeOpt.img?.size\"\n            (click)=\"_showImg(i)\"\n            class=\"img\"\n            [class.point]=\"safeOpt.img?.big\"\n          />\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <span *ngIf=\"!isText\" [innerHTML]=\"_text\" [attr.title]=\"truncate ? value : null\"></span>\n          <span *ngIf=\"isText\" [innerText]=\"_text\" [attr.title]=\"truncate ? value : null\"></span>\n          <span *ngIf=\"_unit\" class=\"unit\">{{ _unit }}</span>\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <ng-template #textWrap>\n      <ng-container *ngIf=\"showDefault\">{{ default }}</ng-container>\n      <ng-container *ngIf=\"!showDefault\">\n        <span *ngIf=\"safeOpt?.tooltip; else text\" nz-tooltip [nzTooltipTitle]=\"safeOpt.tooltip\">\n          <ng-template [ngTemplateOutlet]=\"text\"></ng-template>\n        </span>\n      </ng-container>\n    </ng-template>\n    <span *ngIf=\"loading; else textWrap\" nz-icon nzType=\"loading\"></span>\n  `,\n  exportAs: 'cell',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CellComponent implements OnChanges, OnDestroy {\n  static ngAcceptInputType_truncate: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n\n  private destroy$?: Subscription;\n\n  _text!: string | SafeHtml;\n  _unit?: string;\n  res?: CellTextResult;\n  showDefault = false;\n\n  @Input() value?: unknown;\n  @Input() default = '-';\n  @Input() defaultCondition?: unknown = null;\n  @Input() options?: CellOptions;\n  @Input() unit?: string;\n  @Input() @InputBoolean() truncate = false;\n  @Input() @InputBoolean() loading = false;\n  @Input() type?: 'primary' | 'success' | 'danger' | 'warning';\n  @Input() size?: 'large' | 'small';\n\n  /**\n   * 货币快捷项\n   *\n   * @example\n   * <cell [currency]=\"1000\"></cell>\n   * 等同于\n   * <cell [value]=\"1000\" [options]=\"{type: 'currency'}\"></cell>\n   */\n  @Input()\n  set currency(value: number) {\n    this.value = value;\n    this.options = { type: 'currency' };\n    this.updateValue();\n  }\n\n  get safeOpt(): CellOptions {\n    return this.res?.options!;\n  }\n  get isText(): boolean {\n    return this.res?.safeHtml === 'text';\n  }\n  get hostData(): CellWidgetData {\n    return {\n      value: this.value,\n      default: this.default,\n      defaultCondition: this.defaultCondition,\n      options: this.srv.fixOptions(this.options),\n      truncate: this.truncate\n    };\n  }\n\n  constructor(\n    private srv: CellService,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    private imgSrv: NzImageService,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    @Inject(WINDOW) private win: any\n  ) {}\n\n  private updateValue(): void {\n    this.destroy$?.unsubscribe();\n    this.destroy$ = this.srv.get(this.value, this.options).subscribe(res => {\n      this.res = res;\n      this.showDefault = this.value == this.defaultCondition;\n      this._text = res.result?.text ?? '';\n      this._unit = res.result?.unit ?? this.unit;\n      this.cdr.detectChanges();\n      this.setClass();\n    });\n  }\n\n  private setClass(): void {\n    const { el, renderer } = this;\n    updateHostClass(el.nativeElement, renderer, {\n      [`cell`]: true,\n      [`cell__${this.type}`]: this.type != null,\n      [`cell__${this.size}`]: this.size != null,\n      [`cell__has-unit`]: this._unit,\n      [`cell__has-default`]: this.showDefault\n    });\n    el.nativeElement.dataset.type = this.safeOpt.type;\n  }\n\n  ngOnChanges(): void {\n    this.updateValue();\n  }\n\n  _link(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const link = this.safeOpt.link;\n    const url = link?.url;\n    if (url == null) return;\n\n    if (url.startsWith('/')) {\n      this.router.navigateByUrl(url);\n    } else {\n      (this.win as Window).open(url, link?.target);\n    }\n  }\n\n  _showImg(img: string): void {\n    const config = this.safeOpt.img;\n    if (config == null || config.big === false) return;\n\n    let idx = -1;\n    const list = (this._text as string[]).map((p, index) => {\n      if (idx === -1 && p === img) idx = index;\n      return typeof config.big === 'function' ? config.big(p) : p;\n    });\n    this.imgSrv\n      .preview(\n        list.map(p => ({ src: p } as NzImage)),\n        config.previewOptions\n      )\n      .switchTo(idx);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzImageModule } from 'ng-zorro-antd/experimental/image';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { CellHostDirective } from './cell-host.directive';\nimport { CellComponent } from './cell.component';\n\nconst COMPS = [CellComponent];\n\n@NgModule({\n  imports: [CommonModule, NzBadgeModule, NzTagModule, NzToolTipModule, NzIconModule, NzImageModule],\n  declarations: [...COMPS, CellHostDirective],\n  exports: COMPS\n})\nexport class CellModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.CellService","i4","i9.CellHostDirective"],"mappings":"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"}