{"version":3,"file":"zip.js.map","sources":["ng://@delon/abc/zip/zip.config.ts","ng://@delon/abc/zip/zip.service.ts","ng://@delon/abc/zip/zip.module.ts"],"sourcesContent":["export class ZipConfig {\r\n  /**\r\n   * Zip library path\r\n   */\r\n  url? = '//cdn.bootcss.com/jszip/3.1.5/jszip.min.js';\r\n  /**\r\n   * Defines which zip optional utils should get loaded\r\n   */\r\n  utils?: string[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { saveAs } from 'file-saver';\r\nimport { LazyService, LazyResult } from '@delon/util';\r\n\r\nimport { ZipSaveOptions } from './zip.types';\r\nimport { ZipConfig } from './zip.config';\r\n\r\ndeclare var JSZip: any;\r\n\r\n@Injectable()\r\nexport class ZipService {\r\n  constructor(\r\n    private cog: ZipConfig,\r\n    private http: HttpClient,\r\n    private lazy: LazyService,\r\n  ) {}\r\n\r\n  private init(): Promise<LazyResult[]> {\r\n    return this.lazy.load([this.cog.url].concat(this.cog.utils));\r\n  }\r\n\r\n  private check(zip: any) {\r\n    if (!zip) throw new Error('get instance via `ZipService.create()`');\r\n  }\r\n\r\n  /** è§£å */\r\n  read(fileOrUrl: File | string, options?: any): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.init().then(() => {\r\n        // from url\r\n        if (typeof fileOrUrl === 'string') {\r\n          this.http\r\n            .request('GET', fileOrUrl, { responseType: 'arraybuffer' })\r\n            .subscribe(\r\n              (res: ArrayBuffer) => {\r\n                JSZip.loadAsync(res, options).then(ret => resolve(ret));\r\n              },\r\n              (err: any) => {\r\n                reject(err);\r\n              },\r\n            );\r\n          return;\r\n        }\r\n        // from file\r\n        const reader: FileReader = new FileReader();\r\n        reader.onload = (e: any) => {\r\n          JSZip.loadAsync(e.target.result, options).then(ret => resolve(ret));\r\n        };\r\n        reader.readAsBinaryString(<File>fileOrUrl);\r\n      });\r\n    });\r\n  }\r\n\r\n  /** åå»º Zip å®ä¾ï¼ç¨äºåå»ºåç¼©æä»¶ */\r\n  create(): Promise<any> {\r\n    return new Promise<any>(resolve => {\r\n      this.init().then(() => {\r\n        const zipFile: any = new JSZip();\r\n        resolve(zipFile);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ä¸è½½URLèµæºå¹¶åå¥ zip\r\n   * @param zip Zip å®ä¾\r\n   * @param path Zip è·¯å¾ï¼ä¾å¦ï¼ `text.txt`ã`txt/hi.txt`\r\n   * @param url URL å°å\r\n   */\r\n  pushUrl(zip: any, path: string, url: string): Promise<void> {\r\n    this.check(zip);\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.http.request('GET', url, { responseType: 'arraybuffer' }).subscribe(\r\n        (res: ArrayBuffer) => {\r\n          zip.file(path, res);\r\n          resolve();\r\n        },\r\n        (error: any) => {\r\n          reject({ url, error });\r\n        },\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ä¿å­Zipå¹¶æ§è¡æå¼ä¿å­å¯¹è¯æ¡\r\n   *\r\n   * @param zip zip å¯¹è±¡ï¼å¡å¿éè¿ `create()` æå»º\r\n   * @param options é¢å¤åæ°ï¼\r\n   */\r\n  save(zip: any, options?: ZipSaveOptions): Promise<void> {\r\n    this.check(zip);\r\n    const opt = Object.assign({}, options);\r\n    return new Promise<void>((resolve, reject) => {\r\n      zip\r\n        .generateAsync(Object.assign({ type: 'blob' }, opt.options), opt.update)\r\n        .then(\r\n          (data: Blob) => {\r\n            if (opt.callback) opt.callback(data);\r\n            saveAs(data, opt.filename || 'download.zip');\r\n            resolve();\r\n          },\r\n          err => {\r\n            reject(err);\r\n          },\r\n        );\r\n    });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DelonUtilModule } from '@delon/util';\r\n\r\nimport { ZipService } from './zip.service';\r\nimport { ZipConfig } from './zip.config';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, DelonUtilModule],\r\n})\r\nexport class ZipModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ZipModule,\r\n      providers: [ZipConfig, ZipService],\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
