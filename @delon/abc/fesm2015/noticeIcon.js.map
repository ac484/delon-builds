{"version":3,"file":"noticeIcon.js.map","sources":["ng://@delon/abc/notice-icon/notice-icon-tab.component.ts","ng://@delon/abc/notice-icon/notice-icon.component.ts","ng://@delon/abc/notice-icon/notice-icon.module.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NoticeItem, NoticeIconSelect } from './notice-icon.types';\r\n\r\n@Component({\r\n  selector: 'notice-icon-tab',\r\n  template: `\r\n  <div *ngIf=\"data.list?.length === 0; else listTpl\" class=\"notice-icon__notfound\">\r\n    <img class=\"notice-icon__notfound-img\" *ngIf=\"data.emptyImage\" src=\"{{data.emptyImage}}\" alt=\"not found\" />\r\n    <p>{{data.emptyText || locale.emptyText}}</p>\r\n  </div>\r\n  <ng-template #listTpl>\r\n    <nz-list [nzDataSource]=\"data.list\" [nzRenderItem]=\"item\">\r\n      <ng-template #item let-item>\r\n        <nz-list-item (click)=\"onClick(item)\" [ngClass]=\"{'notice-icon__item-read': item.read}\">\r\n          <nz-list-item-meta\r\n            [nzTitle]=\"nzTitle\"\r\n            [nzDescription]=\"nzDescription\"\r\n            [nzAvatar]=\"item.avatar\">\r\n            <ng-template #nzTitle>\r\n              {{item.title}}\r\n              <div class=\"notice-icon__item-extra\" *ngIf=\"item.extra\"><nz-tag [nzColor]=\"item.color\">{{item.extra}}</nz-tag></div>\r\n            </ng-template>\r\n            <ng-template #nzDescription>\r\n              <div *ngIf=\"item.description\" class=\"notice-icon__item-desc\">{{item.description}}</div>\r\n              <div *ngIf=\"item.datetime\" class=\"notice-icon__item-time\">{{item.datetime}}</div>\r\n            </ng-template>\r\n          </nz-list-item-meta>\r\n        </nz-list-item>\r\n      </ng-template>\r\n    </nz-list>\r\n    <div class=\"notice-icon__clear\" (click)=\"onClear()\">{{ data.clearText || locale.clearText }}</div>\r\n  </ng-template>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class NoticeIconTabComponent {\r\n  @Input()\r\n  locale: any = {};\r\n  @Input()\r\n  data: NoticeItem;\r\n  @Output()\r\n  select = new EventEmitter<NoticeIconSelect>();\r\n  @Output()\r\n  clear = new EventEmitter<string>();\r\n\r\n  onClick(item: NoticeItem) {\r\n    this.select.emit(<NoticeIconSelect>{\r\n      title: this.data.title,\r\n      item,\r\n    });\r\n  }\r\n\r\n  onClear() {\r\n    this.clear.emit(this.data.title);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DelonLocaleService } from '@delon/theme';\r\nimport { InputNumber, InputBoolean } from '@delon/util';\r\n\r\nimport { NoticeItem, NoticeIconSelect } from './notice-icon.types';\r\n\r\n@Component({\r\n  selector: 'notice-icon',\r\n  template: `\r\n  <nz-badge *ngIf=\"data?.length === 0\" [nzCount]=\"count\">\r\n    <i class=\"anticon anticon-bell\"></i>\r\n  </nz-badge>\r\n  <nz-popover *ngIf=\"data?.length > 0\"\r\n    [nzVisible]=\"popoverVisible\" (nzVisibleChange)=\"onVisibleChange($event)\" nzTrigger=\"click\"\r\n    nzPlacement=\"bottomRight\"\r\n    nzOverlayClassName=\"notice-icon\">\r\n    <div nz-popover class=\"alain-default__nav-item notice-icon__item\">\r\n      <nz-badge [nzCount]=\"count\">\r\n        <i class=\"anticon anticon-bell\"></i>\r\n      </nz-badge>\r\n    </div>\r\n    <ng-template #nzTemplate>\r\n      <nz-spin [nzSpinning]=\"loading\" [nzDelay]=\"0\">\r\n        <nz-tabset>\r\n          <nz-tab *ngFor=\"let i of data\" [nzTitle]=\"i.title\">\r\n            <notice-icon-tab\r\n              [locale]=\"locale\"\r\n              [data]=\"i\"\r\n              (select)=\"onSelect($event)\"\r\n              (clear)=\"onClear($event)\"></notice-icon-tab>\r\n          </nz-tab>\r\n        </nz-tabset>\r\n      </nz-spin>\r\n    </ng-template>\r\n  </nz-popover>\r\n  `,\r\n  host: { '[class.notice-icon__btn]': 'true' },\r\n  preserveWhitespaces: false,\r\n})\r\nexport class NoticeIconComponent implements OnDestroy {\r\n  private i18n$: Subscription;\r\n  locale: any = {};\r\n\r\n  @Input()\r\n  data: NoticeItem[] = [];\r\n\r\n  /** å¾æ ä¸çæ¶æ¯æ»æ° */\r\n  @Input()\r\n  @InputNumber()\r\n  count: number;\r\n\r\n  /** å¼¹åºå¡çå è½½ç¶æ */\r\n  @Input()\r\n  @InputBoolean()\r\n  loading = false;\r\n\r\n  @Output()\r\n  select = new EventEmitter<NoticeIconSelect>();\r\n  @Output()\r\n  clear = new EventEmitter<string>();\r\n\r\n  /** æå¨æ§å¶Popoveræ¾ç¤º */\r\n  @Input()\r\n  @InputBoolean()\r\n  popoverVisible = false;\r\n\r\n  @Output()\r\n  popoverVisibleChange = new EventEmitter<boolean>();\r\n\r\n  constructor(private i18n: DelonLocaleService) {\r\n    this.i18n$ = this.i18n.change.subscribe(\r\n      () => (this.locale = this.i18n.getData('noticeIcon')),\r\n    );\r\n  }\r\n\r\n  onVisibleChange(result: boolean) {\r\n    this.popoverVisibleChange.emit(result);\r\n  }\r\n\r\n  onSelect(i: any) {\r\n    this.select.emit(i);\r\n  }\r\n\r\n  onClear(title: string) {\r\n    this.clear.emit(title);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.i18n$.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { DelonLocaleModule } from '@delon/theme';\r\n\r\nimport { NoticeIconComponent } from './notice-icon.component';\r\nimport { NoticeIconTabComponent } from './notice-icon-tab.component';\r\n\r\nconst COMPONENTS = [NoticeIconComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, DelonLocaleModule, NgZorroAntdModule],\r\n  declarations: [...COMPONENTS, NoticeIconTabComponent],\r\n  exports: [...COMPONENTS],\r\n})\r\nexport class NoticeIconModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return { ngModule: NoticeIconModule, providers: [] };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;sBAqCgB,EAAE;sBAIP,IAAI,YAAY,EAAoB;qBAErC,IAAI,YAAY,EAAU;;;;;;IAElC,OAAO,CAAC,IAAgB;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,mBAAmB;YACjC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;YACtB,IAAI;SACL,EAAC,CAAC;KACJ;;;;IAED,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClC;;;YAnDF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BT;gBACD,mBAAmB,EAAE,KAAK;aAC3B;;;qBAEE,KAAK;mBAEL,KAAK;qBAEL,MAAM;oBAEN,MAAM;;;;;;;;;;;ICkCP,YAAoB,IAAwB;QAAxB,SAAI,GAAJ,IAAI,CAAoB;sBA5B9B,EAAE;oBAGK,EAAE;;;;uBAUb,KAAK;sBAGN,IAAI,YAAY,EAAoB;qBAErC,IAAI,YAAY,EAAU;;;;8BAKjB,KAAK;oCAGC,IAAI,YAAY,EAAW;QAGhD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CACrC,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CACtD,CAAC;KACH;;;;;IAED,eAAe,CAAC,MAAe;QAC7B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxC;;;;;IAED,QAAQ,CAAC,CAAM;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACrB;;;;;IAED,OAAO,CAAC,KAAa;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;;;;IAED,WAAW;QACT,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;KAC1B;;;YAnFF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BT;gBACD,IAAI,EAAE,EAAE,0BAA0B,EAAE,MAAM,EAAE;gBAC5C,mBAAmB,EAAE,KAAK;aAC3B;;;;YArCQ,kBAAkB;;;mBA0CxB,KAAK;oBAIL,KAAK;sBAKL,KAAK;qBAIL,MAAM;oBAEN,MAAM;6BAIN,KAAK;mCAIL,MAAM;;;IAlBN,WAAW,EAAE;;;;IAKb,YAAY,EAAE;;;;IAUd,YAAY,EAAE;;;;;;;;ACtEjB;AAQA,MAAM,UAAU,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAOzC;;;;IACE,OAAO,OAAO;QACZ,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KACtD;;;YARF,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;gBAC7D,YAAY,EAAE,CAAC,GAAG,UAAU,EAAE,sBAAsB,CAAC;gBACrD,OAAO,EAAE,CAAC,GAAG,UAAU,CAAC;aACzB;;;;;;;;;;;;;;;"}
