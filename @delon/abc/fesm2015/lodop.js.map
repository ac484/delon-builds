{"version":3,"file":"lodop.js","sources":["../../../../packages/abc/lodop/lodop.types.ts","../../../../packages/abc/lodop/lodop.service.ts","../../../../packages/abc/lodop/lodop.module.ts"],"sourcesContent":["export interface CLodop {\n  /**\n   * 判断是否支持https协议的属性\n   *\n   * - 0 不支持\n   * - 1 支持\n   * - 2 支持且已启动（https服务需单独启动)\n   */\n  readonly HTTPS_STATUS: number;\n\n  /** 结果回调函数保留 */\n  On_Return_Remain: boolean;\n\n  /** 结果回调函数 */\n  On_Return: ((taskID: string, value: boolean | string) => void) | null;\n\n  /** 建立打印机名单 */\n  Create_Printer_List(el: Element): void;\n\n  /** 建立纸张类型名单 */\n  Create_PageSize_List(el: Element, iPrintIndex: number): void;\n}\n\nexport interface Lodop extends CLodop {\n  [key: string]: any;\n\n  /** 获得软件版本号 */\n  VERSION: string;\n\n  /**\n   * 打印初始化。初始化运行环境，清理异常打印遗留的系统资源，设定打印任务名。\n   *\n   * **建议或要求：**该函数与PRINT_INITA都有初始化功能，每个打印事务至少初始化一次，建议打印程序首先调用该函数。任务名要尽量区别于其它打印任务，譬如用“XX单位_XX管理信息系统_XX子系统_XX模块_XX打印作业”字样。\n   * 不希望最终用户更改打印布局时，则设strTaskName空。\n   *\n   * @param strTaskName 打印任务名\n   * @returns 返回逻辑真表示初始化成功，逻辑假表示初始化失败，失败原因有：前一个打印事务没有完成；操作系统没有添加打印机(驱动)等\n   */\n  PRINT_INIT(strTaskName: string): boolean;\n\n  /** 设定纸张大小 */\n  SET_PRINT_PAGESIZE(intOrient: number, PageWidth: number | string, PageHeight: number | string, strPageName: string): void;\n\n  /** 增加超文本打印项(普通模式) */\n  ADD_PRINT_HTM(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strHtmlContent: string): void;\n\n  /**\n   * 增加表格打印项（超文本模式）\n   */\n  ADD_PRINT_TABLE(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strHtml: string): void;\n\n  /**\n   * 增加表格打印项（超文本模式）\n   */\n  ADD_PRINT_TABLE(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strHtml: string): void;\n\n  /**\n   * 增加超文本打印项（URL模式）\n   */\n  ADD_PRINT_URL(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strURL: string): void;\n\n  /** 增加纯文本打印项 */\n  ADD_PRINT_TEXT(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strContent: string): void;\n\n  /** 增加图片打印项 */\n  ADD_PRINT_IMAGE(\n    Top: number | string,\n    Left: number | string,\n    Width: number | string,\n    Height: number | string,\n    strHtmlContent: string,\n  ): void;\n\n  /** 增加矩形线 */\n  ADD_PRINT_RECT(\n    Top: number | string,\n    Left: number | string,\n    Width: number | string,\n    Height: number | string,\n    intLineStyle: number,\n    intLineWidth: number,\n  ): void;\n\n  /** 增加椭圆线 */\n  ADD_PRINT_ELLIPSE(\n    Top: number | string,\n    Left: number | string,\n    Width: number | string,\n    Height: number | string,\n    intLineStyle: number,\n    intLineWidth: number,\n  ): void;\n\n  /** 增加直线 */\n  ADD_PRINT_LINE(\n    Top1: number | string,\n    Left1: number | string,\n    Top2: number | string,\n    Left2: number | string,\n    intLineStyle: number,\n    intLineWidth: number,\n  ): void;\n\n  /** 增加条形码 */\n  ADD_PRINT_BARCODE(\n    Top: number | string,\n    Left: number | string,\n    Width: number | string,\n    Height: number | string,\n    CodeType: string,\n    CodeValue: string,\n  ): void;\n\n  /** 增加图表 */\n  ADD_PRINT_CHART(\n    Top: number | string,\n    Left: number | string,\n    Width: number | string,\n    Height: number | string,\n    ChartType: number,\n    strHtml: string,\n  ): void;\n\n  /** 装载文档式模板 */\n  ADD_PRINT_DATA(strDataStyle: string, varDataValue: any): void;\n\n  /** 设置打印项风格 */\n  SET_PRINT_STYLE(strStyleName: LodopStyleValue, varStyleValue: number | string): void;\n\n  /** 打印预览 */\n  PREVIEW(): number;\n\n  /** 直接打印 */\n  PRINT(): string;\n\n  /** 打印维护 */\n  PRINT_SETUP(): string;\n\n  /** 打印设计 */\n  PRINT_DESIGN(): string;\n\n  /** 强制分页 */\n  NEWPAGE(): boolean;\n\n  /** 获得打印设备个数 */\n  GET_PRINTER_COUNT(): number;\n\n  /** 获得打印设备名称 */\n  GET_PRINTER_NAME(strPrinterIDandType: number | string): string;\n\n  /** 指定打印设备 */\n  SET_PRINTER_INDEX(oIndexOrName: number | string): boolean;\n  /** 【CLodop】指定打印机 */\n  SET_PRINTER_INDEX(DriverIndex: number | string, PrinterIDandName: number | string, SubDevIndex: number | string): boolean;\n\n  /** 选择打印设备 */\n  SELECT_PRINTER(): number;\n\n  /** 设置显示模式 */\n  SET_SHOW_MODE(strModeType: string, varModeValue: number | string): boolean;\n\n  /** 设置打印模式 */\n  SET_PRINT_MODE(strModeType: string, varModeValue: number | string): boolean | string;\n\n  /** 设置打印份数 */\n  SET_PRINT_COPIES(intCopies: number): boolean;\n\n  /** 设置预览窗口 */\n  SET_PREVIEW_WINDOW(\n    intDispMode: number,\n    intToolMode: number,\n    blDirectPrint: number,\n    inWidth: number,\n    intHeight: number,\n    strTitleButtonCaptoin: string,\n  ): void;\n\n  /** 指定背景图 */\n  ADD_PRINT_SETUP_BKIMG(strImgHtml: string): void;\n\n  /** 发送原始数据 */\n  SEND_PRINT_RAWDATA(strRawData: string): boolean;\n\n  /** 写端口数据 */\n  WRITE_PORT_DATA(strPortName: string, strData: string): boolean;\n\n  /** 读端口数据 */\n  READ_PORT_DATA(strPortName: string): string;\n\n  /** 获得配置文件名 */\n  GET_PRINT_INIFFNAME(strPrintTask: string): string;\n\n  /** 获得纸张类型名清单 */\n  GET_PAGESIZES_LIST(oPrinterName: number | string, strSplit: string): string;\n\n  /** 写本地文件内容 */\n  WRITE_FILE_TEXT(intWriteMode: number | string, strFileName: string, strText: string): string;\n\n  /** 读本地文件内容 */\n  GET_FILE_TEXT(strFileName: string): string | null;\n\n  /** 读本地文件时间 */\n  GET_FILE_TIME(strFileName: string): string | null;\n\n  /** 判断本地文件是否存在 */\n  IS_FILE_EXIST(strFileName: string): boolean;\n\n  /** 获得系统信息 */\n  GET_SYSTEM_INFO(strInfoType: string): boolean;\n\n  /** 获得数据值 */\n  GET_VALUE(ValueType: string, ValueIndex: number | string): any;\n\n  /** 数据格式转换 */\n  FORMAT(oType: string, oValue: any): any;\n\n  /** 获得对话框结果值 */\n  GET_DIALOG_VALUE(oType: string, oPreValue: string): string;\n\n  /** (增强型)打印初始化 */\n  PRINT_INITA(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strPrintName: string): boolean;\n\n  /** (增强型)增加超文本打印项(图形模式) */\n  ADD_PRINT_HTML(\n    Top: number | string,\n    Left: number | string,\n    Width: number | string,\n    Height: number | string,\n    strHtmlContent: string,\n  ): void;\n\n  /** (增强型)增加表格打印项（URL模式） */\n  ADD_PRINT_TBURL(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strURL: string): void;\n\n  /** (增强型)增加纯文本打印项 */\n  ADD_PRINT_TEXTA(Top: number | string, Left: number | string, Width: number | string, Height: number | string, strContent: string): void;\n\n  /** (增强型)设置打印项风格A, 继承 `SET_PRINT_STYLE` 的所有属性 */\n  SET_PRINT_STYLEA(varItemNameID: number | string, strStyleName: string, varStyleValue: number | string): void;\n\n  /** (增强型)导出数据到文件 */\n  SAVE_TO_FILE(strFileName: string): boolean;\n\n  /** (增强型)设置保存模式 */\n  SET_SAVE_MODE(varModeName: string, varModeValue: number | string): boolean;\n\n  /** (增强型)增加图形 */\n  ADD_PRINT_SHAPE(\n    intShapeType: number,\n    Top: number | string,\n    Left: number | string,\n    Width: number | string,\n    Height: number | string,\n    intLineStyle: number,\n    intLineWidth: number,\n    varColor: number | string,\n  ): void;\n\n  /** (增强型)指定打印设备 */\n  SET_PRINTER_INDEXA(oIndexOrName: number | string): boolean;\n\n  /** (增强型)强制分页 */\n  NEWPAGEA(): boolean;\n\n  /** (增强型)打印预览A */\n  PREVIEWA(): number;\n\n  /** (增强型)打印预览B */\n  PREVIEWB(): number;\n\n  /** 直接打印A */\n  PRINTA(): boolean;\n\n  /** 直接打印B */\n  PRINTB(): boolean;\n\n  /** 显示图表 */\n  SHOW_CHART(): void;\n\n  /** 控制界面动作 */\n  DO_ACTION(ActName: string, ActValue: number | string): void;\n\n  /**\n   * 设置软件产品注册信息\n   *\n   * @param  strCompanyName 注册单位名称，用途与控件参数CompanyName一样。\n   * @param  strLicense 主注册号，用途与控件参数License一样。\n   * @param  strLicenseA 附加注册号A，用途与控件参数LicenseA一样。\n   * @param  strLicenseB 附加注册号B，用途与控件参数LicenseB一样。\n   */\n  SET_LICENSES(strCompanyName: string, strLicense: string, strLicenseA?: string, strLicenseB?: string): void;\n\n  // tslint:disable-next-line: member-ordering\n  webskt: WebSocket;\n}\n\nexport type LodopStyleValue =\n  | 'FontName'\n  | 'FontSize'\n  | 'FontColor'\n  | 'Bold'\n  | 'Italic'\n  | 'Underline'\n  | 'Alignment'\n  | 'Angle'\n  | 'ItemType'\n  | 'HOrient'\n  | 'VOrient'\n  | 'PenWidth'\n  | 'PenStyle'\n  | 'Stretch'\n  | 'PreviewOnly'\n  | 'ReadOnly';\n\nexport interface LodopResult {\n  /** 是否成功 */\n  ok: boolean;\n  /** 错误码 */\n  status?: string;\n  /** 成功时携带 LODOP 对象 */\n  lodop?: Lodop;\n  /** 错误信息 */\n  error?: any;\n}\n\nexport interface LodopPrintResult {\n  /** 是否成功 */\n  ok: boolean;\n  /** 错误信息 */\n  error?: string;\n  /** 代码 */\n  code: string;\n  /** 动态参数上下文对象 */\n  item: any;\n  /** 代码解析表达式 */\n  parser?: RegExp;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { AlainConfigService, AlainLodopConfig } from '@delon/util/config';\nimport { LazyService } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Lodop, LodopPrintResult, LodopResult } from './lodop.types';\n\n@Injectable({ providedIn: 'root' })\nexport class LodopService implements OnDestroy {\n  private defaultConfig: AlainLodopConfig;\n  private _cog: AlainLodopConfig;\n  private pending = false;\n  private _lodop: Lodop | null = null;\n  private _init = new Subject<LodopResult>();\n  private _events = new Subject<LodopPrintResult>();\n  private printBuffer: any[] = [];\n\n  constructor(private scriptSrv: LazyService, configSrv: AlainConfigService) {\n    this.defaultConfig = configSrv.merge('lodop', {\n      url: '//localhost:8443/CLodopfuncs.js',\n      name: 'CLODOP',\n      companyName: '',\n      checkMaxCount: 100,\n    })!;\n    this.cog = this.defaultConfig;\n  }\n\n  /**\n   * Get or set configuration, **Note:** Resetting will invert and reload script resources\n   *\n   * 获取或重新设置配置，**注：**重新设置会倒置重新加载脚本资源\n   */\n  get cog(): AlainLodopConfig {\n    return this._cog;\n  }\n  set cog(value: AlainLodopConfig) {\n    this._cog = {\n      ...this.defaultConfig,\n      ...value,\n    };\n  }\n\n  /**\n   * Event change notification\n   *\n   * 事件变更通知\n   */\n  get events(): Observable<LodopPrintResult> {\n    return this._events.asObservable();\n  }\n\n  /**\n   * Get lodop object\n   *\n   * 获取 lodop 对象\n   */\n  get lodop(): Observable<LodopResult> {\n    if (this._lodop) return of({ ok: true, lodop: this._lodop } as LodopResult);\n    if (this.pending) return this._init.asObservable();\n\n    this.request();\n\n    return this._init.asObservable();\n  }\n\n  /**\n   * Get printer list\n   *\n   * 获取打印机列表\n   */\n  get printer(): string[] {\n    this.check();\n    const ret: string[] = [];\n    const count = this._lodop!.GET_PRINTER_COUNT();\n    for (let index = 0; index < count; index++) {\n      ret.push(this._lodop!.GET_PRINTER_NAME(index));\n    }\n    return ret;\n  }\n\n  private check(): void {\n    if (!this._lodop) throw new Error(`请务必先调用 lodop 获取对象`);\n  }\n\n  private request(): void {\n    this.pending = true;\n\n    const url = `${this.cog.url}?name=${this.cog.name}`;\n    let checkMaxCount = this.cog.checkMaxCount as number;\n    const onResolve = (status: NzSafeAny, error?: {}) => {\n      this._init.next({\n        ok: status === 'ok',\n        status,\n        error,\n        lodop: this._lodop!,\n      });\n    };\n    const checkStatus = () => {\n      --checkMaxCount;\n      if (this._lodop!.webskt && this._lodop!.webskt.readyState === 1) {\n        onResolve('ok');\n      } else {\n        if (checkMaxCount < 0) {\n          onResolve('check-limit');\n          return;\n        }\n        setTimeout(() => checkStatus(), 100);\n      }\n    };\n\n    this.scriptSrv.loadScript(url).then((res: NzSafeAny) => {\n      if (res.status !== 'ok') {\n        this.pending = false;\n        onResolve('script-load-error', res[0]);\n        return;\n      }\n      const win = window as NzSafeAny;\n      if (win.hasOwnProperty(this.cog.name!)) {\n        this._lodop = win[this.cog.name!] as Lodop;\n      }\n      if (this._lodop === null) {\n        onResolve('load-variable-name-error', { name: this.cog.name });\n        return;\n      }\n      this._lodop.SET_LICENSES(this.cog.companyName!, this.cog.license!, this.cog.licenseA, this.cog.licenseB);\n      checkStatus();\n    });\n  }\n\n  /**\n   * Reset lodop object\n   *\n   * 重置 lodop 对象\n   */\n  reset(): void {\n    this._lodop = null;\n    this.pending = false;\n    this.request();\n  }\n\n  /**\n   * Attach code to the `lodop` object, the string class supports dynamic parameters of `{{key}}`,\n   * **Note:** The code refers to the string data generated by the print design\n   *\n   * 附加代码至 `lodop` 对象上，字符串类支持 `{{key}}` 的动态参数，**注：** 代码是指打印设计所产生字符串数据\n   */\n  attachCode(code: string, contextObj?: NzSafeAny, parser?: RegExp): void {\n    this.check();\n    if (!parser) parser = /LODOP\\.([^(]+)\\(([^\\n]+)?\\);/i;\n    code.split('\\n').forEach(line => {\n      const res = parser!.exec(line.trim());\n      if (!res) return;\n      const fn = this._lodop![res[1]];\n      if (fn) {\n        let arr: any[] | null = null;\n        try {\n          // tslint:disable-next-line: function-constructor\n          const fakeFn = new Function(`return [${res[2]}]`);\n          arr = fakeFn();\n        } catch {}\n\n        if (arr != null && Array.isArray(arr) && contextObj) {\n          for (let i = 0; i < arr.length; i++) {\n            if (typeof arr[i] === 'string') {\n              arr[i] = (arr[i] as string).replace(/{{(.*?)}}/g, (_match, key) => contextObj[key.trim()] || '');\n            }\n          }\n        }\n        fn.apply(this._lodop, arr!);\n      }\n    });\n  }\n\n  /**\n   * The code is automatically returned after opening the print design and closing,\n   * **Note:** Automatically listen for the `On_Return` event, and it will be removed after running\n   *\n   * 打开打印设计关闭后自动返回代码，**注：** 自动监听 `On_Return` 事件，运行后会移除\n   */\n  design(): Promise<string> {\n    this.check();\n    const tid = this._lodop!.PRINT_DESIGN();\n    return new Promise(resolve => {\n      this._lodop!.On_Return = (taskID: string, value: boolean | string) => {\n        if (tid !== taskID) return;\n        this._lodop!.On_Return = null;\n        resolve('' + value);\n      };\n    });\n  }\n  private printDo(): void {\n    const data = this.printBuffer.shift();\n    if (!data) return;\n    this.attachCode(data.code, data.item, data.parser);\n    const tid = this._lodop!.PRINT();\n    this._lodop!.On_Return = (taskID: string, value: boolean | string) => {\n      if (tid !== taskID) return;\n      this._lodop!.On_Return = null;\n      this._events.next({\n        ok: value === true,\n        error: value === true ? null : value,\n        ...data,\n      });\n      this.printDo();\n    };\n  }\n\n  /**\n   * Print immediately, generally used for batch printing\n   *\n   * 立即打印，一般用于批量套打\n   */\n  print(code: string, contextObj: {} | Array<{}>, parser?: RegExp): void {\n    this.check();\n    if (contextObj) {\n      this.printBuffer.push(\n        ...(Array.isArray(contextObj) ? contextObj : [contextObj]).map(item => {\n          return { code, parser, item };\n        }),\n      );\n    }\n    this.printDo();\n  }\n\n  ngOnDestroy(): void {\n    this._init.unsubscribe();\n    this._events.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class LodopModule {}\n"],"names":[],"mappings":"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"}