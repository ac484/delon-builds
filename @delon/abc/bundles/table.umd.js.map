{"version":3,"file":"table.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/abc/st/st.interfaces.ts","ng://@delon/abc/st/st-row.directive.ts","ng://@delon/abc/st/st-widget.ts","ng://@delon/abc/st/st-column-source.ts","ng://@delon/abc/st/st-data-source.ts","ng://@delon/abc/st/st-export.ts","ng://@delon/abc/st/st.config.ts","ng://@delon/abc/st/st.component.ts","ng://@delon/abc/st/st-widget-host.directive.ts","ng://@delon/abc/st/st.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { DrawerHelperOptions, ModalHelperOptions, YNMode } from '@delon/theme';\nimport { NzDrawerOptions } from 'ng-zorro-antd/drawer';\nimport { ModalOptions } from 'ng-zorro-antd/modal';\nimport { STComponent } from './st.component';\n\nexport interface STWidthMode {\n  /**\n   * 宽度类型\n   * - `default` 默认行为\n   * - `strict` 严格模式，即强制按 `width` 指定的宽度呈现，并根据 `strictBehavior` 类型处理\n   */\n  type?: 'strict' | 'default';\n  /**\n   * 严格模式的处理行为\n   * - `wrap` 强制换行\n   * - `truncate` 截短\n   */\n  strictBehavior?: 'wrap' | 'truncate';\n}\n\nexport interface STResetColumnsOption {\n  pi?: number;\n  ps?: number;\n  columns?: STColumn[];\n  /**\n   * Whether to trigger a data load, default: `true`\n   */\n  emitReload?: boolean;\n}\n\nexport interface STReq {\n  /**\n   * 分页类型，默认：`page`\n   * - `page` 使用 `pi`，`ps` 组合\n   * - `skip` 使用 `skip`，`limit` 组合\n   */\n  type?: 'page' | 'skip';\n  /**\n   * 额外请求参数，默认自动附加 `pi`、`ps` 至URL\n   * - `{ status: 'new' }` => `url?pi=1&ps=10&status=new`\n   */\n  params?: any;\n  /** 请求方法，默认：`GET` */\n  method?: string;\n  /** 请求体 `body` */\n  body?: any;\n  /** 请求体 `Header` */\n  headers?: any;\n  /**\n   * 重命名参数 `pi`、`ps`，默认：`{ pi: 'pi', ps: 'ps' }`\n   * - `{ pi: 'Page' }` => `pi` 会被替换成 Page\n   */\n  reName?: STReqReNameType;\n  /**\n   * 是否将请求所有参数数据都放入 `body` 当中（`url` 地址本身参数除外），仅当 `method: 'POST'` 时有效，默认：`false`\n   */\n  allInBody?: boolean;\n  /**\n   * 是否延迟加载数据，即渲染结束后不会主动发起请求，默认：`false`\n   */\n  lazyLoad?: boolean;\n  /**\n   * 请求前数据处理\n   */\n  process?: (requestOptions: STRequestOptions) => STRequestOptions;\n}\n\nexport interface STRequestOptions {\n  body?: any;\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | string[];\n      };\n  observe?: 'body' | 'events' | 'response';\n  reportProgress?: boolean;\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  withCredentials?: boolean;\n}\n\nexport interface STLoadOptions {\n  /** 是否合并，默认：`false` */\n  merge?: boolean;\n  /** 是否跳转至顶部，若不指定由 `page.toTop` 来决定 */\n  toTop?: boolean;\n}\n\nexport interface STRes {\n  /**\n   * 重命名返回参数 `total`、`list`\n   * - `{ total: 'Total' }` => Total 会被当作 `total`\n   */\n  reName?: STResReNameType;\n  /**\n   * 数据预处理\n   */\n  process?: (data: STData[], rawData?: any) => STData[];\n}\n\nexport interface STPage {\n  /**\n   * 前端分页，当 `data` 为`any[]` 或 `Observable<any[]>` 有效，默认：`true`\n   * - `true` 由 `st` 根据 `data` 长度受控分页，包括：排序、过滤等\n   * - `false` 由用户通过 `total` 和 `data` 参数受控分页，并维护 `(change)` 当分页变更时重新加载数据\n   */\n  front?: boolean;\n  /**\n   * 后端分页是否采用`0`基索引，只在`data`类型为`string`时有效，默认：`false`\n   */\n  zeroIndexed?: boolean;\n  /**\n   * 指定分页显示的位置，默认：`bottom`\n   */\n  position?: 'top' | 'bottom' | 'both';\n  /**\n   * 指定分页分页方向，默认：`right`\n   */\n  placement?: 'left' | 'center' | 'right';\n  /**\n   * 是否显示分页器，默认：`true`\n   */\n  show?: boolean;\n  /**\n   * 是否显示分页器中改变页数，默认：`false`\n   */\n  showSize?: boolean;\n  /**\n   * 分页器中每页显示条目数下拉框值，默认：`[10, 20, 30, 40, 50]`\n   */\n  pageSizes?: number[];\n  /**\n   * 是否显示分页器中快速跳转，默认：`false`\n   */\n  showQuickJumper?: boolean;\n  /**\n   * 是否显示总数据量\n   * - `boolean` 类型显示与否，默认模板：`共 {{total}} 条`\n   * - `string` 自定义模板，模板变量：\n   *  - `{{total}}` 表示数据总量\n   *  - `{{range[0]}}` 表示当前页开始数量值\n   *  - `{{range[1]}}` 表示当前页结束数量值\n   */\n  total?: string | boolean;\n  /**\n   * 切换分页时返回顶部，默认：`true`\n   */\n  toTop?: boolean;\n  /**\n   * 返回顶部偏移值，默认：`100`\n   */\n  toTopOffset?: number;\n}\n\n/**\n * 数据源\n */\nexport interface STData {\n  /**\n   * 选择框或单选框状态值\n   */\n  checked?: boolean;\n  /**\n   * 选择框或单选框 `disabled` 值\n   */\n  disabled?: boolean;\n  /**\n   * 是否展开状态\n   */\n  expand?: boolean;\n  /**\n   * 是否显示展开按钮\n   */\n  showExpand?: boolean;\n\n  [key: string]: any;\n}\n\n/**\n * 列描述\n */\nexport interface STColumn {\n  /**\n   * 用于定义数据源主键，例如：`STStatistical`\n   */\n  key?: string;\n  /**\n   * 列标题\n   */\n  title?: string | STColumnTitle;\n  /**\n   * 列数据在数据项中对应的 key，支持 `a.b.c` 的嵌套写法，例如：\n   * - `id`\n   * - `price.market`\n   * - `[ 'price', 'market' ]`\n   */\n  index?: string | string[] | null;\n  /**\n   * 类型\n   * - `no` 行号，计算规则：`index + noIndex`\n   * - `checkbox` 多选\n   * - `radio` 单选\n   * - `link` 链接，务必指定 `click`\n   * - `badge` [徽标](https://ng.ant.design/components/badge/zh)，务必指定 `badge` 参数配置徽标对应值\n   * - `tag` [标签](https://ng.ant.design/components/tag/zh)，务必指定 `tag` 参数配置标签对应值\n   * - `img` 图片且居中(若 `className` 存在则优先)\n   * - `number` 数字且居右(若 `className` 存在则优先)\n   * - `currency` 货币且居右(若 `className` 存在则优先)\n   * - `date` 日期格式且居中(若 `className` 存在则优先)，使用 `dateFormat` 自定义格式\n   * - `yn` 将`boolean`类型徽章化 [document](https://ng-alain.com/docs/data-render#yn)\n   * - `widget` 使用自定义小部件动态创建\n   */\n  type?: 'checkbox' | 'link' | 'badge' | 'tag' | 'radio' | 'img' | 'currency' | 'number' | 'date' | 'yn' | 'no' | 'widget';\n  /**\n   * 链接回调，若返回一个字符串表示导航URL会自动触发 `router.navigateByUrl`\n   */\n  click?: (record: STData, instance?: STComponent) => any;\n  /**\n   * 按钮组\n   */\n  buttons?: STColumnButton[];\n  /**\n   * 自定义渲染ID\n   * @example\n   * <ng-template st-row=\"custom\" let-item let-index=\"index\" let-column=\"column\">\n   *  {{ c.title }}\n   * </ng-template>\n   */\n  render?: string;\n  /**\n   * 标题自定义渲染ID\n   * @example\n   * <ng-template st-row=\"custom\" type=\"title\" let-c>\n   *  {{ item | json }}\n   * </ng-template>\n   */\n  renderTitle?: string;\n  /**\n   * 列宽（数字型表示 `px` 值），例如：`100`、`10%`、`100px`\n   *\n   * **注意：** 若固定列必须是数字\n   */\n  width?: string | number;\n  /**\n   * 排序配置项，远程数据配置**优先**规则：\n   * - `true` 表示允许排序\n   * - `string` 表示远程数据排序相对应 `key` 值\n   */\n  sort?: true | string | STColumnSort;\n  /**\n   * 过滤配置项\n   */\n  filter?: STColumnFilter;\n  /**\n   * 格式化列值\n   */\n  format?: (item: STData, col: STColumn, index: number) => string;\n  /**\n   * 自定义全/反选选择项\n   */\n  selections?: STColumnSelection[];\n  /**\n   * 列 `class` 属性值（注：无须 `.` 点）多个用空格隔开，例如：\n   * - `text-center` 居中\n   * - `text-right` 居右\n   * - `text-success` 成功色\n   * - `text-danger` 异常色\n   */\n  className?: string;\n  /**\n   * 合并列\n   */\n  colSpan?: number;\n  /**\n   * 数字格式，`type=number` 有效\n   */\n  numberDigits?: string;\n  /**\n   * 日期格式，`type=date` 有效，（默认：`yyyy-MM-dd HH:mm`）\n   */\n  dateFormat?: string;\n  /**\n   * 当 `type=yn` 有效\n   */\n  yn?: STColumnYn;\n  /**\n   * 是否允许导出，默认 `true`\n   */\n  exported?: boolean;\n  /**\n   * 权限，等同 [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) 参数值\n   */\n  acl?: any;\n  /** 当不存在数据时以默认值替代 */\n  default?: string;\n  /**\n   * 固定前后列，当指定时务必指定 `width` 否则视为无效，有若干 **注意：** 项：\n   *\n   * - 若列头与内容不对齐或出现列重复，请指定列的宽度 `width`\n   * - 建议指定 `scroll.x` 为大于表格宽度的固定值或百分比。注意，且非固定列宽度之和不要超过 `scroll.x`\n   */\n  fixed?: 'left' | 'right';\n  /**\n   * 徽标配置项\n   */\n  badge?: STColumnBadge | null;\n  /**\n   * 标签配置项\n   */\n  tag?: STColumnTag | null;\n  /**\n   * 行号索引，默认：`1`\n   * - 计算规则为：`index + noIndex`\n   * - 支持自定义方法\n   */\n  noIndex?: number | ((item: STData, col: STColumn, idx: number) => number);\n  /**\n   * 条件表达式\n   * - 仅赋值 `columns` 时执行一次\n   * - 可调用 `resetColumns()` 再一次触发\n   */\n  iif?: (item: STColumn) => boolean;\n\n  /**\n   * 统计\n   */\n  statistical?: STStatisticalType | STStatistical;\n\n  widget?: STWidgetColumn;\n\n  /**\n   * 分组表头\n   */\n  children?: STColumn[];\n\n  /** @ignore internal property */\n  _sort?: STSortMap;\n\n  [key: string]: any;\n}\n\nexport interface STWidgetColumn {\n  type: string;\n\n  params?: (options: { record: STData; column: STColumn }) => {};\n}\n\nexport interface STColumnTitle {\n  [key: string]: any;\n\n  /**\n   * Text of header, can be choose one of `text` or `i18n`\n   */\n  text?: string;\n\n  /**\n   * I18n key of header, can be choose one of `text` or `i18n`\n   */\n  i18n?: string;\n\n  /**\n   * Optional information of header\n   */\n  optional?: string;\n\n  /**\n   * Optional help of header\n   */\n  optionalHelp?: string;\n}\n\nexport type STStatisticalType = 'count' | 'distinctCount' | 'sum' | 'average' | 'max' | 'min';\n\nexport type STStatisticalFn = (values: number[], col: STColumn, list: STData[], rawData?: any) => STStatisticalResult;\n\nexport interface STStatistical {\n  type: STStatisticalType | STStatisticalFn;\n  /**\n   * 保留小数位数，默认：`2`\n   */\n  digits?: number;\n  /**\n   * 是否需要货币格式化，默认以下情况为 `true`\n   * - `type` 为 `STStatisticalFn`、 `sum`、`average`、`max`、`min`\n   */\n  currency?: boolean;\n}\n\nexport interface STStatisticalResults {\n  [key: string]: STStatisticalResult;\n  [index: number]: STStatisticalResult;\n}\n\nexport interface STStatisticalResult {\n  value: number;\n  text?: string;\n}\n\nexport interface STColumnSort {\n  /**\n   * 排序的默认受控属性\n   */\n  default?: 'ascend' | 'descend' | null;\n  /**\n   * 本地数据的排序函数，使用一个函数(参考 [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) 的 compareFunction)\n   * - `null` 忽略本地排序，但保持排序功能\n   */\n  compare?: ((a: STData, b: STData) => number) | null;\n  /**\n   * 远程数据的排序时后端相对应的KEY，默认使用 `index` 属性\n   * - 若 `multiSort: false` 时：`key: 'name' => ?name=1&pi=1`\n   * - 若 `multiSort: true` 允许多个排序 key 存在，或使用 `STMultiSort` 指定多列排序key合并规则\n   */\n  key?: string | null;\n  /**\n   * 远程数据的排序时后端相对应的VALUE\n   * - `{ ascend: '0', descend: '1' }` 结果 `?name=1&pi=1`\n   * - `{ ascend: 'asc', descend: 'desc' }` 结果 `?name=desc&pi=1`\n   */\n  reName?: { ascend?: string; descend?: string };\n}\n\nexport interface STSortMap extends STColumnSort {\n  [key: string]: any;\n\n  /** 是否启用排序 */\n  enabled?: boolean;\n}\n\nexport interface STColumnFilter {\n  /**\n   * 搜索方式\n   * - `defualt` 默认形式\n   * - `keyword` 文本框形式\n   */\n  type?: 'default' | 'keyword';\n  /**\n   * 表头的筛选菜单项，至少一项才会生效\n   * - 当 `type='keyword'` 时可为空\n   */\n  menus?: STColumnFilterMenu[];\n  /**\n   * 本地数据的筛选函数\n   */\n  fn?: ((filter: STColumnFilterMenu, record: STData) => boolean) | null;\n  /**\n   * 标识数据是否已过滤，筛选图标会高亮\n   */\n  default?: boolean;\n  /**\n   * 自定义 filter 图标\n   * - 当 `type='default'` 默认 `filter`\n   * - 当 `type='keyword'` 默认 `search`\n   */\n  icon?: string | STIcon;\n  /**\n   * 确认按钮文本，默认 `确认`\n   */\n  confirmText?: string;\n  /**\n   * 清除按钮文本，默认 `重置`\n   */\n  clearText?: string;\n  /**\n   * 是否多选，默认 `true`\n   */\n  multiple?: boolean;\n  /**\n   * 远程数据的过滤时后端相对应的KEY，默认使用 `index` 属性\n   * `key: 'name'` 结果 `?name=1&pi=1`\n   */\n  key?: string | null;\n  /**\n   * 远程数据的过滤时后端相对应的VALUE\n   * - 默认当 `multiple: true` 时以英文逗号拼接的字符串\n   * @return 返回为 Object 对象\n   */\n  reName?: (list: STColumnFilterMenu[], col: STColumn) => {};\n}\n\nexport interface STColumnFilterMenu {\n  /**\n   * 文本\n   * - 当 `type: 'keyword'` 时表示 `placeholder`\n   */\n  text?: string;\n  /**\n   * 值\n   */\n  value?: any;\n  /**\n   * 是否选中\n   */\n  checked?: boolean;\n  /**\n   * 权限，等同 [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) 参数值\n   */\n  acl?: any;\n\n  [key: string]: any;\n}\n\nexport interface STColumnSelection {\n  /**\n   * 选择项显示的文字\n   */\n  text: string;\n  /**\n   * 选择项点击回调，允许对参数 `data.checked` 进行操作\n   */\n  select: (data: STData[]) => void;\n  /** 权限，等同 `can()` 参数值 */\n  acl?: any;\n}\n\n/** 当 `type=yn` 有效 */\nexport interface STColumnYn {\n  /**\n   * 真值条件，（默认：`true`）\n   */\n  truth?: any;\n  /**\n   * 徽章 `true` 时文本，（默认：`是`）\n   */\n  yes?: string;\n  /**\n   * 徽章 `false` 时文本，（默认：`否`）\n   */\n  no?: string;\n  /**\n   * 徽章显示风格\n   * - `full` 图标和文本\n   * - `icon` 图标\n   * - `text` 文本\n   */\n  mode?: YNMode;\n}\n\nexport interface STIcon {\n  /** 图标类型 */\n  type: string;\n  /** 图标主题风格，默认：`outline` */\n  theme?: 'outline' | 'twotone' | 'fill';\n  /** 是否有旋转动画，默认：`false` */\n  spin?: boolean;\n  /** 仅适用双色图标，设置双色图标的主要颜色，仅对当前 icon 生效 */\n  twoToneColor?: string;\n  /** 指定来自 IconFont 的图标类型 */\n  iconfont?: string;\n}\n\n/**\n * 按钮配置\n */\nexport interface STColumnButton {\n  /**\n   * 文本\n   */\n  text?: string | ((record: STData, btn: STColumnButton) => string);\n  /**\n   * 文本 i18n\n   */\n  i18n?: string;\n  /**\n   * 图标\n   */\n  icon?: string | STIcon;\n  /**\n   * 按钮类型\n   * - `none` 无任何互动\n   * - `del` 删除，默认开启 `pop: true`\n   * - `modal` 对话框，需要指定 `component` 才会生效\n   * - `static` 静态对话框，需要指定 `component` 才会生效\n   * - `drawer` 抽屉，需要指定 `component` 才会生效\n   * - `link` 链接，当 `click` 返回字符串时自动调用 `navigateByUrl` 导航\n   * - `divider` 分割线\n   */\n  type?: 'none' | 'del' | 'modal' | 'static' | 'drawer' | 'link' | 'divider';\n  /**\n   * 点击回调\n   * - Function\n   *  - `type=modal` 只会在当有传回值时才会触发回调\n   * - reload：重新刷新当前页\n   * - load：重新加载数据，并重置页码为：`1`\n   *\n   * @todo Bad parameter design\n   */\n  click?: 'reload' | 'load' | ((record: STData, modal?: any, instance?: STComponent) => any);\n  /**\n   * 气泡确认框参数，若 `string` 类型表示标题\n   */\n  pop?: boolean | string | STColumnButtonPop;\n  /**\n   * 对话框参数\n   */\n  modal?: STColumnButtonModal;\n  /**\n   * 抽屉参数\n   */\n  drawer?: STColumnButtonDrawer;\n  /**\n   * 下拉菜单，当存在时以 `dropdown` 形式渲染\n   * - 只支持一级\n   */\n  children?: STColumnButton[];\n  /**\n   * 权限，等同 [ACLCanType](https://ng-alain.com/acl/getting-started/#ACLCanType) 参数值\n   */\n  acl?: any;\n  /**\n   * Conditional expression\n   *\n   * @todo Bad parameter design\n   */\n  iif?: (item: STData, btn: STColumnButton, column: STColumn) => boolean;\n  /**\n   * Conditional expression rendering behavior, can be set to `hide` (default) or `disabled`\n   */\n  iifBehavior?: IifBehaviorType;\n\n  tooltip?: string;\n\n  [key: string]: any;\n}\n\nexport interface STColumnButtonOK {\n  record: STData;\n  /**\n   * Modal or drawer return value when trigger confirm.\n   */\n  ret?: any;\n  instance?: STComponent;\n  event: Event;\n}\n\nexport type IifBehaviorType = 'hide' | 'disabled';\n\nexport interface STColumnButtonModal extends ModalHelperOptions {\n  /**\n   * 对话框组件对象\n   */\n  component?: any;\n  /**\n   * 对话框参数\n   */\n  params?: (record: STData) => {};\n  /**\n   * 对话框目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n}\n\nexport interface STColumnButtonModalConfig {\n  /**\n   * 指定模态框目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n  /** 大小；例如：lg、600，默认：`lg` */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '' | number;\n  /** 对话框 [ModalOptions](https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/modal/modal-types.ts) 参数 */\n  modalOptions?: ModalOptions;\n  /** 是否精准（默认：`true`），若返回值非空值（`null`或`undefined`）视为成功，否则视为错误 */\n  exact?: boolean;\n}\n\nexport interface STColumnButtonDrawer extends DrawerHelperOptions {\n  /**\n   * 标题\n   */\n  title?: string;\n  /**\n   * 抽屉组件对象\n   */\n  component?: any;\n  /**\n   * 抽屉参数\n   */\n  params?: (record: STData) => {};\n  /**\n   * 抽屉目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n}\n\nexport interface STColumnButtonDrawerConfig {\n  /**\n   * 抽屉目标组件的接收参数名，默认：`record`\n   */\n  paramsName?: string;\n  /**\n   * 大小；例如：lg、600，默认：`md`\n   *\n   * | 类型 | 默认大小 |\n   * | --- | ------ |\n   * | `sm` | `300` |\n   * | `md` | `600` |\n   * | `lg` | `900` |\n   * | `xl` | `1200` |\n   *\n   * > 以上值，可通过覆盖相应的LESS参数自行调整\n   */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | number;\n  /**\n   * 是否包含底部工具条，默认：`true`\n   */\n  footer?: boolean;\n  /**\n   * 底部工具条高度，默认：`55`\n   */\n  footerHeight?: number;\n  /** 抽屉 [NzDrawerOptions](https://ng.ant.design/components/drawer/zh#nzdraweroptions) 参数 */\n  drawerOptions?: NzDrawerOptions;\n}\n\nexport interface STColumnButtonPop {\n  /**\n   * Title of the popover, default: `确认删除吗？`\n   */\n  title?: string;\n\n  /**\n   * Popover trigger mode, default: `click`\n   */\n  trigger?: 'click' | 'focus' | 'hover';\n\n  /**\n   * The position of the popover relative to the target, default: `top`\n   */\n  placement?:\n    | 'top'\n    | 'left'\n    | 'right'\n    | 'bottom'\n    | 'topLeft'\n    | 'topRight'\n    | 'bottomLeft'\n    | 'bottomRight'\n    | 'leftTop'\n    | 'leftBottom'\n    | 'rightTop'\n    | 'rightBottom';\n\n  /**\n   * Class name of the popover card\n   */\n  overlayClassName?: string;\n\n  /**\n   * Style of the popover card\n   */\n  overlayStyle?: {};\n\n  /**\n   * Text of the Cancel button\n   */\n  cancelText?: string;\n\n  /**\n   * Text of the Confirm button\n   */\n  okText?: string;\n\n  /**\n   * Button `type` of the Confirm button\n   */\n  okType?: 'primary' | 'ghost' | 'dashed' | 'danger' | 'default';\n\n  /**\n   * Customize icon of confirmation\n   */\n  icon?: string;\n\n  /**\n   * Whether to directly emit `onConfirm` without showing Popconfirm, default: `() => false`\n   */\n  condition?: (item: STData) => boolean;\n}\n\nexport interface STReqReNameType {\n  pi?: string;\n  ps?: string;\n  skip?: string;\n  limit?: string;\n}\n\nexport interface STResReNameType {\n  total?: string | string[];\n  list?: string | string[];\n}\n\nexport interface STExportOptions {\n  /** @ignore internal property */\n  _d?: any[];\n  /** @ignore internal property */\n  _c?: STColumn[];\n  /** 工作溥名 */\n  sheetname?: string;\n  /** 文件名 */\n  filename?: string;\n  /** triggers when saveas */\n  callback?: (wb: any) => void;\n}\n\n/**\n * 单排序规则\n * - 若不指定，则返回：`columnName=ascend|descend`\n * - 若指定，则返回：`sort=columnName.(ascend|descend)`\n */\nexport interface STSingleSort {\n  /** 请求参数名，默认：`sort` */\n  key?: string;\n  /** 列名与状态间分隔符，默认：`.` */\n  nameSeparator?: string;\n}\n\n/**\n * 多排序相同排序 key 时合并规则\n */\nexport interface STMultiSort {\n  /** 请求参数名，默认：`sort` */\n  key?: string;\n  /** 不同属性间分隔符，默认：`-` */\n  separator?: string;\n  /** 列名与状态间分隔符，默认：`.` */\n  nameSeparator?: string;\n  /**\n   * 是否全局多排序模式，默认：`true`\n   * - `true` 表示所有 `st` 默认为多排序\n   * - `false` 表示需要为每个 `st` 添加 `multiSort` 才会视为多排序模式\n   */\n  global?: boolean;\n  /**\n   * 是否保持空值的键名，默认：`true`\n   * - `true` 表示不管是否有排序都会发送 `key` 键名\n   * - `false` 表示无排序动作时不会发送 `key` 键名\n   */\n  keepEmptyKey?: boolean;\n}\n\n/**\n * 徽标信息\n */\nexport interface STColumnBadge {\n  [key: number]: STColumnBadgeValue;\n  [key: string]: STColumnBadgeValue;\n}\n\nexport interface STColumnBadgeValue {\n  /**\n   * 文本\n   */\n  text?: string;\n  /**\n   * 徽标颜色值\n   */\n  color?: 'success' | 'processing' | 'default' | 'error' | 'warning';\n}\n\n/**\n * 标签信息\n */\nexport interface STColumnTag {\n  [key: number]: STColumnTagValue;\n  [key: string]: STColumnTagValue;\n}\n\nexport interface STColumnTagValue {\n  /**\n   * 文本\n   */\n  text?: string;\n  /**\n   * 颜色值，支持预设和色值\n   * - 预设：geekblue,blue,purple,success,red,volcano,orange,gold,lime,green,cyan\n   * - 色值：#f50,#ff0\n   */\n  color?: 'geekblue' | 'blue' | 'purple' | 'success' | 'red' | 'volcano' | 'orange' | 'gold' | 'lime' | 'green' | 'cyan' | string;\n}\n\nexport type STChangeType = 'loaded' | 'pi' | 'ps' | 'checkbox' | 'radio' | 'sort' | 'filter' | 'click' | 'dblClick' | 'expand';\n\n/**\n * 回调数据\n */\nexport interface STChange {\n  /**\n   * 回调类型\n   */\n  type: STChangeType;\n  /**\n   * 当前页码\n   */\n  pi: number;\n  /**\n   * 每页数量\n   */\n  ps: number;\n  /**\n   * 数据总量\n   */\n  total: number;\n  /**\n   * `loaded` 参数\n   */\n  loaded?: STData[];\n  /**\n   * `checkbox` 参数\n   */\n  checkbox?: STData[];\n  /**\n   * `radio` 参数\n   */\n  radio?: STData;\n  /**\n   * 排序参数\n   */\n  sort?: STChangeSort;\n  /**\n   * 过滤参数\n   */\n  filter?: STColumn;\n  /**\n   * 行点击参数\n   */\n  click?: STChangeRowClick;\n  /**\n   * 行双击参数\n   */\n  dblClick?: STChangeRowClick;\n  /**\n   * `expand` 参数\n   */\n  expand?: STData;\n}\n\n/** 行单击参数 */\nexport interface STChangeSort {\n  value?: 'ascend' | 'descend';\n  map?: { [key: string]: string };\n  column?: STColumn;\n}\n\n/** 行单击参数 */\nexport interface STChangeRowClick {\n  e?: Event;\n  item?: STData;\n  index?: number;\n}\n\nexport interface STError {\n  type?: 'req';\n  error?: any;\n}\n\nexport type STRowClassName = (record: STData, index: number) => string;\n\nexport interface STColumnGroupType {\n  column: STColumn;\n  colStart: number;\n  colEnd?: number;\n  colSpan?: number;\n  rowSpan?: number;\n  hasSubColumns?: boolean;\n}\n","import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>) {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string) {\n    return this.titles[path];\n  }\n\n  getRow(path: string) {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row') id: string;\n\n  @Input() type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class STWidgetRegistry {\n  private _widgets: { [type: string]: any } = {};\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  get(type: string): any {\n    return this._widgets[type];\n  }\n}\n","import { Host, Inject, Injectable, Optional } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { AlainSTConfig, deepCopy, warn } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STRowSource } from './st-row.directive';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STColumnButton, STColumnButtonPop, STColumnFilter, STColumnGroupType, STIcon, STSortMap } from './st.interfaces';\n\n@Injectable()\nexport class STColumnSource {\n  private cog: AlainSTConfig;\n\n  constructor(\n    private dom: DomSanitizer,\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private stWidgetRegistry: STWidgetRegistry,\n  ) {}\n\n  setCog(val: AlainSTConfig): void {\n    this.cog = val;\n  }\n\n  private fixPop(i: STColumnButton, def: STColumnButtonPop): void {\n    if (i.pop == null || i.pop === false) {\n      i.pop = false;\n      return;\n    }\n\n    let pop = {\n      ...def,\n    };\n    if (typeof i.pop === 'string') {\n      pop.title = i.pop;\n    } else if (typeof i.pop === 'object') {\n      pop = {\n        ...pop,\n        ...i.pop,\n      };\n    }\n\n    if (typeof pop.condition !== 'function') {\n      pop.condition = () => false;\n    }\n\n    i.pop = pop;\n  }\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, pop, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      // pop\n      this.fixPop(item, pop!);\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children = item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]) {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      item.iifBehavior = item.iifBehavior || this.cog.iifBehavior;\n      if (item.children && item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      } else {\n        item.children = [];\n      }\n    }\n  }\n\n  private fixedCoerce(list: STColumn[]) {\n    const countReduce = (a: number, b: STColumn) => a + +b.width!.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach((item, idx) => (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'));\n  }\n\n  private sortCoerce(item: STColumn): STSortMap {\n    const res = this.fixCoerce(item);\n    res.reName = {\n      ...this.cog.sortReName,\n      ...res.reName,\n    };\n    return res;\n  }\n\n  private fixCoerce(item: STColumn): STSortMap {\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: STColumn): STColumnFilter | null {\n    if (item.filter == null) {\n      return null;\n    }\n\n    let res: STColumnFilter | null = item.filter;\n    res.type = res.type || 'default';\n\n    let icon = 'filter';\n    let iconTheme = 'fill';\n    if (res.type === 'keyword') {\n      if (res.menus == null || res.menus!.length === 0) {\n        res.menus = [{ value: '' }];\n      }\n      icon = 'search';\n      iconTheme = 'outline';\n    }\n\n    if (res.menus!.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n\n    res.confirmText = res.confirmText || this.cog.filterConfirmText;\n    res.clearText = res.clearText || this.cog.filterClearText;\n    res.key = res.key || item.indexKey;\n    res.icon = res.icon || icon;\n\n    const baseIcon = { type: icon, theme: iconTheme } as STIcon;\n    if (typeof res.icon === 'string') {\n      res.icon = { ...baseIcon, type: res.icon } as STIcon;\n    } else {\n      res.icon = { ...baseIcon, ...res.icon };\n    }\n\n    this.updateDefault(res);\n\n    if (this.acl) {\n      res.menus = res.menus!.filter(w => this.acl.can(w.acl));\n    }\n\n    if (res.menus!.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: STColumn) {\n    if (item.renderTitle) {\n      item.__renderTitle = this.rowSource.getTitle(item.renderTitle);\n    }\n    if (item.render) {\n      item.__render = this.rowSource.getRow(item.render);\n    }\n  }\n\n  private widgetCoerce(item: STColumn): void {\n    if (item.type !== 'widget') return;\n    if (item.widget == null || !this.stWidgetRegistry.has(item.widget.type)) {\n      delete item.type;\n      warn(`st: No widget for type \"${item.widget?.type}\"`);\n    }\n  }\n\n  private genHeaders(rootColumns: STColumn[]): STColumn[][] {\n    const rows: STColumn[][] = [];\n    const fillRowCells = (columns: STColumn[], colIndex: number, rowIndex = 0): number[] => {\n      // Init rows\n      rows[rowIndex] = rows[rowIndex] || [];\n\n      let currentColIndex = colIndex;\n      const colSpans: number[] = columns.map(column => {\n        const cell: STColumnGroupType = {\n          column,\n          colStart: currentColIndex,\n        };\n\n        let colSpan: number = 1;\n\n        const subColumns = column.children;\n        if (Array.isArray(subColumns) && subColumns.length > 0) {\n          colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n          cell.hasSubColumns = true;\n        }\n\n        if ('colSpan' in column) {\n          colSpan = column.colSpan!;\n        }\n\n        if ('rowSpan' in column) {\n          cell.rowSpan = column.rowSpan;\n        }\n\n        cell.colSpan = colSpan;\n        cell.colEnd = cell.colStart + colSpan - 1;\n        rows[rowIndex].push(cell);\n\n        currentColIndex += colSpan;\n\n        return colSpan;\n      });\n\n      return colSpans;\n    };\n\n    fillRowCells(rootColumns, 0);\n\n    // Handle `rowSpan`\n    const rowCount = rows.length;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      rows[rowIndex].forEach(cell => {\n        if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n          cell.rowSpan = rowCount - rowIndex;\n        }\n      });\n    }\n\n    return rows;\n  }\n\n  private cleanCond(list: STColumn[]): STColumn[] {\n    const res: STColumn[] = [];\n    const copyList = deepCopy(list);\n    for (const item of copyList) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      res.push(item);\n    }\n    return res;\n  }\n\n  process(list: STColumn[]): { columns: STColumn[]; headers: STColumn[][] } {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: STColumn[] = [];\n\n    const processItem = (item: STColumn): STColumn => {\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n\n      // #region title\n\n      const tit = (typeof item.title === 'string' ? { text: item.title } : item.title) || {};\n      if (tit.i18n && this.i18nSrv) {\n        tit.text = this.i18nSrv.fanyi(tit.i18n);\n      }\n      if (tit.text) {\n        tit._text = this.dom.bypassSecurityTrustHtml(tit.text);\n      }\n      item.title = tit;\n\n      // #endregion\n\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null)\n      ) {\n        (item as any).type = '';\n      }\n      // className\n      if (!item.className) {\n        item.className = ({\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        } as NzSafeAny)[item.type!];\n      }\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item) as STColumnFilter;\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons!);\n      // widget\n      this.widgetCoerce(item);\n      // restore custom row\n      this.restoreRender(item);\n\n      item.__point = point++;\n\n      return item;\n    };\n\n    const processList = (data: STColumn[]): void => {\n      for (const item of data) {\n        columns.push(processItem(item));\n        if (Array.isArray(item.children)) {\n          processList(item.children);\n        }\n      }\n    };\n\n    const copyList = this.cleanCond(list);\n    processList(copyList);\n\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns);\n\n    return { columns: columns.filter(w => !Array.isArray(w.children)), headers: this.genHeaders(copyList) };\n  }\n\n  restoreAllRender(columns: STColumn[]) {\n    columns.forEach(i => this.restoreRender(i));\n  }\n\n  updateDefault(filter: STColumnFilter): this {\n    if (filter.type === 'default') {\n      filter.default = filter.menus!.findIndex(w => w.checked!) !== -1;\n    } else {\n      filter.default = !!filter.menus![0].value;\n    }\n    return this;\n  }\n\n  cleanFilter(col: STColumn): this {\n    const f = col.filter!;\n    f.default = false;\n    if (f.type === 'default') {\n      f.menus!.forEach(i => (i.checked = false));\n    } else {\n      f.menus![0].value = undefined;\n    }\n    return this;\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CNCurrencyPipe, DatePipe, YNPipe, _HttpClient } from '@delon/theme';\nimport { deepCopy, deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  STColumn,\n  STColumnFilter,\n  STData,\n  STMultiSort,\n  STPage,\n  STReq,\n  STReqReNameType,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STSortMap,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './st.interfaces';\n\nexport interface STDataSourceOptions {\n  pi: number;\n  ps: number;\n  paginator: boolean;\n  data: string | STData[] | Observable<STData[]>;\n  total: number;\n  req: STReq;\n  res: STRes;\n  page: STPage;\n  columns: STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** 是否需要显示分页器 */\n  pageShow: boolean;\n  /** 新 `pi`，若返回 `undefined` 表示用户受控 */\n  pi: number;\n  /** 新 `ps`，若返回 `undefined` 表示用户受控 */\n  ps: number;\n  /** 新 `total`，若返回 `undefined` 表示用户受控 */\n  total: number;\n  /** 数据 */\n  list: STData[];\n  /** 统计数据 */\n  statistical: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private currentyPipe: CNCurrencyPipe,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Observable<STDataSourceResult> {\n    let data$: Observable<STData[]>;\n    let isRemote = false;\n    const { data, res, total, page, pi, ps, paginator, columns } = options;\n    let retTotal: number;\n    let retPs: number;\n    let retList: STData[];\n    let retPi: number;\n    let rawData: any;\n    let showPage = page.show;\n\n    if (typeof data === 'string') {\n      isRemote = true;\n      data$ = this.getByHttp(data, options).pipe(\n        map(result => {\n          rawData = result;\n          let ret: STData[];\n          if (Array.isArray(result)) {\n            ret = result;\n            retTotal = ret.length;\n            retPs = retTotal;\n            showPage = false;\n          } else {\n            // list\n            ret = deepGet(result, res.reName!.list as string[], []);\n            if (ret == null || !Array.isArray(ret)) {\n              ret = [];\n            }\n            // total\n            const resultTotal = res.reName!.total && deepGet(result, res.reName!.total as string[], null);\n            retTotal = resultTotal == null ? total || 0 : +resultTotal;\n          }\n          return deepCopy(ret);\n        }),\n      );\n    } else if (Array.isArray(data)) {\n      data$ = of(data);\n    } else {\n      // a cold observable\n      data$ = data;\n    }\n\n    if (!isRemote) {\n      data$ = data$.pipe(\n        // sort\n        map((result: STData[]) => {\n          rawData = result;\n          let copyResult = deepCopy(result);\n          const sorterFn = this.getSorterFn(columns);\n          if (sorterFn) {\n            copyResult = copyResult.sort(sorterFn);\n          }\n          return copyResult;\n        }),\n        // filter\n        map((result: STData[]) => {\n          columns\n            .filter(w => w.filter)\n            .forEach(c => {\n              const filter = c.filter!;\n              const values = this.getFilteredData(filter);\n              if (values.length === 0) return;\n              const onFilter = filter.fn;\n              if (typeof onFilter !== 'function') {\n                console.warn(`[st] Muse provide the fn function in filter`);\n                return;\n              }\n              result = result.filter(record => values.some(v => onFilter(v, record)));\n            });\n          return result;\n        }),\n        // paging\n        map((result: STData[]) => {\n          if (paginator && page.front) {\n            const maxPageIndex = Math.ceil(result.length / ps);\n            retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n            retTotal = result.length;\n            if (page.show === true) {\n              return result.slice((retPi - 1) * ps, retPi * ps);\n            }\n          }\n          return result;\n        }),\n      );\n    }\n\n    // pre-process\n    if (typeof res.process === 'function') {\n      data$ = data$.pipe(map(result => res.process!(result, rawData)));\n    }\n\n    data$ = data$.pipe(map(result => this.optimizeData({ result, columns, rowClassName: options.rowClassName })));\n\n    return data$.pipe(\n      map(result => {\n        retList = result;\n        const realTotal = retTotal || total;\n        const realPs = retPs || ps;\n\n        return {\n          pi: retPi,\n          ps: retPs,\n          total: retTotal,\n          list: retList,\n          statistical: this.genStatistical(columns, retList, rawData),\n          pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n        } as STDataSourceResult;\n      }),\n    );\n  }\n\n  private get(item: STData, col: STColumn, idx: number): { text: any; _text: SafeHtml; org?: any; color?: string } {\n    if (col.format) {\n      const formatRes = col.format(item, col, idx) || '';\n      if (formatRes && ~formatRes.indexOf('</')) {\n        return { text: formatRes, _text: this.dom.bypassSecurityTrustHtml(formatRes), org: formatRes };\n      }\n      return { text: formatRes, _text: formatRes, org: formatRes };\n    }\n\n    const value = deepGet(item, col.index as string[], col.default);\n\n    let text = value;\n    let color: string | undefined;\n    switch (col.type) {\n      case 'no':\n        text = this.getNoIndex(item, col, idx);\n        break;\n      case 'img':\n        text = value ? `<img src=\"${value}\" class=\"img\">` : '';\n        break;\n      case 'number':\n        text = this.numberPipe.transform(value, col.numberDigits);\n        break;\n      case 'currency':\n        text = this.currentyPipe.transform(value);\n        break;\n      case 'date':\n        text = value === col.default ? col.default : this.datePipe.transform(value, col.dateFormat);\n        break;\n      case 'yn':\n        text = this.ynPipe.transform(value === col.yn!.truth, col.yn!.yes!, col.yn!.no!, col.yn!.mode!, false);\n        break;\n      case 'tag':\n      case 'badge':\n        const data = col.type === 'tag' ? col.tag : col.badge;\n        if (data && data[text]) {\n          const dataItem = data[text];\n          text = dataItem.text;\n          color = dataItem.color;\n        } else {\n          text = '';\n        }\n        break;\n    }\n    if (text == null) text = '';\n    return { text, _text: this.dom.bypassSecurityTrustHtml(text), org: value, color };\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, paginator, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    const reName = req.reName as STReqReNameType;\n    if (paginator) {\n      if (req.type === 'page') {\n        params = {\n          [reName.pi as string]: page.zeroIndexed ? pi - 1 : pi,\n          [reName.ps as string]: ps,\n        };\n      } else {\n        params = {\n          [reName.skip as string]: (pi - 1) * ps,\n          [reName.limit as string]: ps,\n        };\n      }\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  optimizeData(options: { columns: STColumn[]; result: STData[]; rowClassName?: STRowClassName }): STData[] {\n    const { result, columns, rowClassName } = options;\n    for (let i = 0, len = result.length; i < len; i++) {\n      result[i]._values = columns.map(c => this.get(result[i], c, i));\n      if (rowClassName) {\n        result[i]._rowClassName = rowClassName(result[i], i);\n      }\n    }\n    return result;\n  }\n\n  getNoIndex(item: STData, col: STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex! + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: STColumn[]): STSortMap[] {\n    return columns.filter(item => item._sort && item._sort.enabled && item._sort.default).map(item => item._sort!);\n  }\n\n  private getSorterFn(columns: STColumn[]) {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    const sortItem = sortList[0];\n    if (sortItem.compare === null) {\n      return;\n    }\n    if (typeof sortItem.compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortItem.compare!(a, b);\n      if (result !== 0) {\n        return sortItem.default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(singleSort: STSingleSort | undefined, multiSort: STMultiSort | undefined, columns: STColumn[]): { [key: string]: string } {\n    let ret: { [key: string]: string } = {};\n    const sortList = this.getValidSort(columns);\n    if (!multiSort && sortList.length === 0) return ret;\n\n    if (multiSort) {\n      const ms = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        ...multiSort,\n      };\n\n      ret = {\n        [ms.key]: sortList\n          .sort((a, b) => a.tick - b.tick)\n          .map(item => item.key + ms.nameSeparator + ((item.reName || {})[item.default!] || item.default))\n          .join(ms.separator),\n      };\n      if (multiSort.keepEmptyKey === false && ret[ms.key].length === 0) {\n        ret = {};\n      }\n    } else {\n      const mapData = sortList[0];\n      let sortFiled = mapData.key;\n      let sortValue = (sortList[0].reName || {})[mapData.default!] || mapData.default;\n      if (singleSort) {\n        sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n        sortFiled = singleSort.key || 'sort';\n      }\n      ret[sortFiled as string] = sortValue as string;\n    }\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getFilteredData(filter: STColumnFilter) {\n    return filter.type === 'default' ? filter.menus!.filter(f => f.checked === true) : filter.menus!.slice(0, 1);\n  }\n\n  private getReqFilterMap(columns: STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const filter = col.filter!;\n        const values = this.getFilteredData(filter);\n        let obj: { [key: string]: NzSafeAny } = {};\n        if (filter.reName) {\n          obj = filter.reName!(filter.menus!, col);\n        } else {\n          obj[filter.key!] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res: { [key: string]: NzSafeAny } = {};\n    columns.forEach((col, index) => {\n      res[col.key ? col.key : index] = col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: undefined,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter((value, idx, self) => self.indexOf(value) === idx).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits!);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits!);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currentyPipe.transform(res.value) as string;\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STColumn, STExportOptions } from './st.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn, index: number): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col, index);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      switch (col.type) {\n        case 'currency':\n          ret.t = 'n';\n          break;\n        case 'date':\n          ret.t = 'd';\n          break;\n        case 'yn':\n          ret.v = ret.v === col.ynTruth ? col.ynYes || '是' : col.ynNo || '否';\n          break;\n      }\n    }\n\n    ret.v = ret.v || '';\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: { [key: string]: NzSafeAny } } = {};\n    const sheet: { [key: string]: NzSafeAny } = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt._c!.filter(w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0));\n    const cc = colData.length;\n    const dc = opt._d!.length;\n\n    // column\n    for (let i = 0; i < cc; i++) {\n      const tit = colData[i].title;\n      sheet[`${String.fromCharCode(i + 65)}1`] = {\n        t: 's',\n        v: typeof tit === 'object' ? tit.text : tit,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dc; i++) {\n      for (let j = 0; j < cc; j++) {\n        sheet[`${String.fromCharCode(j + 65)}${i + 2}`] = this._stGet(opt._d![i], colData[j], i);\n      }\n    }\n\n    if (cc > 0 && dc > 0) {\n      sheet['!ref'] = `A1:${String.fromCharCode(cc + 65 - 1)}${dc + 1}`;\n    }\n\n    return sheets;\n  }\n\n  export(opt: STExportOptions) {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { AlainSTConfig } from '@delon/util';\n\nexport const ST_DEFULAT_CONFIG: AlainSTConfig = {\n  pi: 1,\n  ps: 10,\n  size: 'default',\n  responsive: true,\n  responsiveHideHeaderFooter: false,\n  req: {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    lazyLoad: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  },\n  res: {\n    reName: { list: ['list'], total: ['total'] },\n  },\n  page: {\n    front: true,\n    zeroIndexed: false,\n    position: 'bottom',\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    toTop: true,\n    toTopOffset: 100,\n  },\n  modal: {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  },\n  drawer: {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  },\n  pop: {\n    title: '确认删除吗？',\n    trigger: 'click',\n    placement: 'top',\n  },\n  rowClickTime: 200,\n  btnIcon: {\n    type: '',\n    theme: 'outline',\n    spin: false,\n  },\n  noIndex: 1,\n  expandRowByClick: false,\n  expandAccordion: false,\n  widthMode: {\n    type: 'default',\n    strictBehavior: 'truncate',\n  },\n  virtualItemSize: 54,\n  virtualMaxBufferPx: 200,\n  virtualMinBufferPx: 100,\n  iifBehavior: 'hide',\n};\n","import { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  CNCurrencyPipe,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport { AlainConfigService, AlainSTConfig, deepMergeKey, InputBoolean, InputNumber, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableComponent, NzTableData } from 'ng-zorro-antd/table';\nimport { from, Observable, of, Subject, Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { STColumnSource } from './st-column-source';\nimport { STDataSource, STDataSourceOptions, STDataSourceResult } from './st-data-source';\nimport { STExport } from './st-export';\nimport { STRowSource } from './st-row.directive';\nimport { ST_DEFULAT_CONFIG } from './st.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu,\n  STColumnSelection,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STResetColumnsOption,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n} from './st.interfaces';\n\n@Component({\n  selector: 'st',\n  exportAs: 'st',\n  templateUrl: './st.component.html',\n  providers: [STDataSource, STRowSource, STColumnSource, STExport, CNCurrencyPipe, DatePipe, YNPipe, DecimalPipe],\n  host: {\n    '[class.st]': `true`,\n    '[class.st__p-left]': `page.placement === 'left'`,\n    '[class.st__p-center]': `page.placement === 'center'`,\n    '[class.st__width-strict]': `widthMode.type === 'strict'`,\n    '[class.ant-table-rep]': `responsive`,\n    '[class.ant-table-rep__hide-header-footer]': `responsiveHideHeaderFooter`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private data$: Subscription;\n  private totalTpl = ``;\n  private cog: AlainSTConfig;\n  private rowClickCount = 0;\n  private _req: STReq;\n  private _res: STRes;\n  private _page: STPage;\n  private _widthMode: STWidthMode;\n  locale: LocaleData = {};\n  _loading = false;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _headers: STColumn[][] = [];\n  _columns: STColumn[] = [];\n  @ViewChild('table', { static: false }) readonly orgTable: NzTableComponent;\n\n  @Input()\n  get req() {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMergeKey({}, true, this.cog.req, value);\n  }\n  /** 返回体配置 */\n  @Input()\n  get res() {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = (this._res = deepMergeKey({}, true, this.cog.res, value));\n    const reName = item.reName!;\n    if (!Array.isArray(reName.list)) reName.list = reName.list!.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total!.split('.');\n    this._res = item;\n  }\n  @Input()\n  get page() {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this._page = { ...this.cog.page, ...value };\n    this.updateTotalTpl();\n  }\n  @Input() data: string | STData[] | Observable<STData[]>;\n  @Input() columns: STColumn[] = [];\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  @Input() loading: boolean | null = null;\n  @Input() @InputNumber() loadingDelay = 0;\n  @Input() loadingIndicator: TemplateRef<void>;\n  @Input() @InputBoolean() bordered = false;\n  @Input() size: 'small' | 'middle' | 'default';\n  @Input() scroll: { y?: string; x?: string };\n  @Input() singleSort: STSingleSort;\n  private _multiSort?: STMultiSort;\n  @Input()\n  get multiSort() {\n    return this._multiSort;\n  }\n  set multiSort(value: NzSafeAny) {\n    if (typeof value === 'boolean' && !toBoolean(value)) {\n      this._multiSort = undefined;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { ...this.cog.widthMode, ...value };\n  }\n  get widthMode() {\n    return this._widthMode;\n  }\n  @Input() header: string | TemplateRef<void>;\n  @Input() footer: string | TemplateRef<void>;\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  @Input() @InputBoolean() expandAccordion = false;\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() widthConfig: string[];\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsive: boolean = true;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  // tslint:disable-next-line:no-output-native\n  @Output() readonly error = new EventEmitter<STError>();\n  // tslint:disable-next-line:no-output-native\n  @Output() readonly change = new EventEmitter<STChange>();\n  @Input() @InputBoolean() virtualScroll = false;\n  @Input() @InputNumber() virtualItemSize = 54;\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\n  @Input() @InputNumber() virtualMinBufferPx = 100;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n\n  /**\n   * Get the number of the current page\n   */\n  get count(): number {\n    return this._data.length;\n  }\n\n  /**\n   * Get the data of the current page\n   */\n  get list(): STData[] {\n    return this._data;\n  }\n\n  private get routerState() {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private el: ElementRef,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n    configSrv: AlainConfigService,\n  ) {\n    this.setCog(configSrv.merge<AlainSTConfig, 'st'>('st', ST_DEFULAT_CONFIG));\n\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.updateTotalTpl();\n        this.cd();\n      }\n    });\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  private setCog(cog: AlainSTConfig): void {\n    const copyMultiSort = { ...cog.multiSort };\n    // Because multiSort.global will affect the result, it should be removed first, and multiSort will be operated again after processing.\n    delete cog.multiSort;\n    this.cog = cog;\n    Object.assign(this, cog);\n\n    if (copyMultiSort.global !== false) {\n      this.multiSort = copyMultiSort;\n    }\n    this.columnSource.setCog(cog);\n  }\n\n  cd() {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]) {\n    return this.totalTpl\n      ? this.totalTpl.replace('{{total}}', total).replace('{{range[0]}}', range[0]).replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  isTruncate(column: STColumn): boolean {\n    return !!column.width && this.widthMode.strictBehavior === 'truncate' && column.type !== 'img';\n  }\n\n  columnClass(column: STColumn): string | null {\n    return column.className || (this.isTruncate(column) ? 'text-truncate' : null);\n  }\n\n  private changeEmit(type: STChangeType, data?: any) {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  // #region data\n\n  /**\n   * 获取过滤后所有数据\n   * - 本地数据：包含排序、过滤后不分页数据\n   * - 远程数据：不传递 `pi`、`ps` 两个参数\n   */\n  get filteredData(): Promise<STData[]> {\n    return this.loadData({ paginator: false } as any).then(res => res.list);\n  }\n\n  private updateTotalTpl(): void {\n    const { total } = this.page;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n  }\n\n  private setLoading(val: boolean): void {\n    if (this.loading == null) {\n      this._loading = val;\n      this.cdr.detectChanges();\n    }\n  }\n\n  private loadData(options?: STDataSourceOptions): Promise<STDataSourceResult> {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    return new Promise((resolvePromise, rejectPromise) => {\n      if (this.data$) {\n        this.data$.unsubscribe();\n      }\n\n      this.data$ = this.dataSource\n        .process({\n          pi,\n          ps,\n          total,\n          data,\n          req,\n          res,\n          page,\n          columns: this._columns,\n          singleSort,\n          multiSort,\n          rowClassName,\n          paginator: true,\n          ...options,\n        })\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          result => resolvePromise(result),\n          error => {\n            console.warn('st.loadDate', error);\n            rejectPromise(error);\n          },\n        );\n    });\n  }\n\n  private async loadPageData(): Promise<this> {\n    this.setLoading(true);\n    try {\n      const result = await this.loadData();\n      this.setLoading(false);\n      if (typeof result.pi !== 'undefined') {\n        this.pi = result.pi;\n      }\n      if (typeof result.ps !== 'undefined') {\n        this.ps = result.ps;\n      }\n      if (typeof result.total !== 'undefined') {\n        this.total = result.total;\n      }\n      if (typeof result.pageShow !== 'undefined') {\n        this._isPagination = result.pageShow;\n      }\n      this._data = result.list as STData[];\n      this._statistical = result.statistical as STStatisticalResults;\n      this.changeEmit('loaded', result.list);\n      return this._refCheck();\n    } catch (error) {\n      this.setLoading(false);\n      if (!this.unsubscribe$.isStopped) {\n        this.cdr.detectChanges();\n        this.error.emit({ type: 'req', error });\n      }\n      return this;\n    }\n  }\n\n  /** 清空所有数据 */\n  clear(cleanStatus = true): this {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** 清空所有状态 */\n  clearStatus(): this {\n    return this.clearCheck().clearRadio().clearFilter().clearSort();\n  }\n\n  /**\n   * 根据页码重新加载数据\n   *\n   * @param pi 指定当前页码，默认：`1`\n   * @param extraParams 重新指定 `extraParams` 值\n   * @param options 选项\n   */\n  load(pi = 1, extraParams?: {}, options?: STLoadOptions) {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this.req.params = options && options.merge ? { ...this.req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi', options);\n    return this;\n  }\n\n  /**\n   * 重新刷新当前页\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reload(extraParams?: {}, options?: STLoadOptions) {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * 重置且重新设置 `pi` 为 `1`，包含以下值：\n   * - `check` 数据\n   * - `radio` 数据\n   * - `sort` 数据\n   * - `fileter` 数据\n   *\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reset(extraParams?: {}, options?: STLoadOptions) {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop(enforce?: boolean) {\n    if (!(enforce == null ? this.page.toTop : enforce)) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      el.querySelector('.ant-table-body')!.scrollTo(0, 0);\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset!;\n  }\n\n  _change(type: 'pi' | 'ps', options?: STLoadOptions) {\n    if (type === 'pi' || (type === 'ps' && this.pi <= Math.ceil(this.total / this.ps))) {\n      this.loadPageData().then(() => this._toTop(options?.toTop));\n    }\n\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn) {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click!(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n  private closeOtherExpand(item: STData) {\n    if (this.expandAccordion === false) return;\n    this._data.filter(i => i !== item).forEach(i => (i.expand = false));\n  }\n  _rowClick(e: Event, item: STData, index: number) {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && item.showExpand !== false && expandRowByClick) {\n      item.expand = !item.expand;\n      this.closeOtherExpand(item);\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData, expand: boolean): void {\n    if (this.expandRowByClick) {\n      return;\n    }\n    item.expand = expand;\n    this.closeOtherExpand(item);\n    this.changeEmit('expand', item);\n  }\n\n  /**\n   * Remove a row in the table, like this:\n   *\n   * ```\n   * this.st.removeRow(0)\n   * this.st.removeRow(stDataItem)\n   * ```\n   */\n  removeRow(data: STData | STData[] | number) {\n    if (typeof data === 'number') {\n      this._data.splice(data, 1);\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      (data as STData[])\n        .map(item => this._data.indexOf(item))\n        .filter(pos => pos !== -1)\n        .forEach(pos => this._data.splice(pos, 1));\n    }\n    // recalculate no\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c => this._data.forEach((i, idx) => (i._values[c.__point] = { text: this.dataSource.getNoIndex(i, c, idx), org: idx })));\n\n    return this.cd();\n  }\n\n  /**\n   * Sets the row value for the `index` in the table, like this:\n   *\n   * - `optinos.refreshSchema` Whether to refresh of st schemas\n   * - `optinos.emitReload` Whether to trigger a reload http request when data is url\n   *\n   * ```\n   * this.st.setRow(0, { price: 100 })\n   * this.st.setRow(0, { price: 100, name: 'asdf' })\n   * ```\n   */\n  setRow(index: number, item: STData, options?: { refreshSchema?: boolean; emitReload?: boolean }): this {\n    options = { refreshSchema: false, emitReload: false, ...options };\n    this._data[index] = deepMergeKey(this._data[index], false, item);\n    this._data = this.dataSource.optimizeData({ columns: this._columns, result: this._data, rowClassName: this.rowClassName });\n    if (options.refreshSchema) {\n      this.resetColumns({ emitReload: options.emitReload });\n      return this;\n    }\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: STColumn, idx: number, value: any) {\n    if (this.multiSort) {\n      col._sort!.default = value;\n      col._sort!.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort!.default = index === idx ? value : null));\n    }\n    this.loadPageData();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort() {\n    this._columns.forEach(item => (item._sort!.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn) {\n    this.columnSource.updateDefault(col.filter!);\n    this.loadPageData();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: STColumn) {\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: STColumn, item: STColumnFilterMenu, checked: boolean) {\n    col.filter!.menus!.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  _filterClear(col: STColumn) {\n    this.columnSource.cleanFilter(col);\n    this.handleFilter(col);\n  }\n\n  clearFilter() {\n    this._columns.filter(w => w.filter && w.filter.default === true).forEach(col => this.columnSource.cleanFilter(col));\n    return this;\n  }\n\n  // #endregion\n\n  // #region checkbox\n\n  /** 清除所有 `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    return this.cd();\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean) {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** 清除所有 `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(record: STData, btn: STColumnButton, e?: Event) {\n    // should be stop propagation when expandRowByClick is true\n    if (e && this.expandRowByClick === true) {\n      e.stopPropagation();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal!.paramsName!]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal!.component,\n        { ...obj, ...(modal!.params && modal!.params!(record)) },\n        deepMergeKey({}, true, this.cog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe((res: NzSafeAny) => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer!.paramsName!]: record };\n      this.drawerHelper\n        .create(\n          drawer!.title!,\n          drawer!.component,\n          { ...obj, ...(drawer!.params && drawer!.params!(record)) },\n          deepMergeKey({}, true, this.cog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any) {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton) {\n    return typeof btn.text === 'function' ? btn.text(record, btn) : btn.text || '';\n  }\n\n  _validBtns(btns: STColumnButton[], item: STData, col: STColumn): STColumnButton[] {\n    return btns.filter(btn => {\n      const result = btn.iif!(item, btn, col);\n      const isRenderDisabled = btn.iifBehavior === 'disabled';\n      btn._result = result;\n      btn._disabled = !result && isRenderDisabled;\n      return result || isRenderDisabled;\n    });\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * 导出当前页，确保已经注册 `XlsxModule`\n   * @param newData 重新指定数据；若为 `true` 表示使用 `filteredData` 数据\n   * @param opt 额外参数\n   */\n  export(newData?: STData[] | true, opt?: STExportOptions) {\n    (newData === true ? from(this.filteredData) : of(newData || this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        _d: res,\n        _c: this._columns,\n      }),\n    );\n  }\n\n  // #endregion\n\n  get cdkVirtualScrollViewport() {\n    return this.orgTable.cdkVirtualScrollViewport;\n  }\n\n  resetColumns(options?: STResetColumnsOption): Promise<this> {\n    options = { emitReload: true, ...options };\n    if (typeof options.columns !== 'undefined') {\n      this.columns = options.columns;\n    }\n    if (typeof options.pi !== 'undefined') {\n      this.pi = options.pi;\n    }\n    if (typeof options.ps !== 'undefined') {\n      this.ps = options.ps;\n    }\n    this.refreshColumns();\n    if (options.emitReload === true) {\n      return this.loadPageData();\n    } else {\n      this.cd();\n      return Promise.resolve(this);\n    }\n  }\n\n  private refreshColumns(): this {\n    const res = this.columnSource.process(this.columns);\n    this._columns = res.columns;\n    this._headers = res.headers;\n    return this;\n  }\n\n  ngAfterViewInit() {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns();\n    }\n    const changeData = changes.data;\n    if (changeData && changeData.currentValue && !(this.req.lazyLoad && changeData.firstChange)) {\n      this.loadPageData();\n    }\n    if (changes.loading) {\n      this._loading = changes.loading.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STData } from './st.interfaces';\n\n@Directive({ selector: '[st-widget-host]' })\nexport class STWidgetHostDirective implements OnInit {\n  @Input() record: STData;\n  @Input() column: STColumn;\n\n  constructor(\n    private stWidgetRegistry: STWidgetRegistry,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    const widget = this.column.widget!;\n    const componentType = this.stWidgetRegistry.get(widget.type);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType as any);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    const { record, column } = this;\n    const data: { [key: string]: any } = widget.params ? widget.params({ record, column }) : { record };\n    Object.keys(data).forEach(key => {\n      (componentRef.instance as any)[key] = data[key];\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonACLModule } from '@delon/acl';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { STRowDirective } from './st-row.directive';\nimport { STWidgetHostDirective } from './st-widget-host.directive';\nimport { STComponent } from './st.component';\n\nconst COMPONENTS = [STComponent];\nconst DIRECTIVES = [STRowDirective, STWidgetHostDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DelonUtilModule,\n    DelonACLModule,\n    NzPopconfirmModule,\n    NzTableModule,\n    NzIconModule,\n    NzBadgeModule,\n    NzCheckboxModule,\n    NzDividerModule,\n    NzDropDownModule,\n    NzMenuModule,\n    NzRadioModule,\n    NzTagModule,\n    NzInputModule,\n    NzToolTipModule,\n  ],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class STModule {}\n"],"names":["Injectable","Directive","TemplateRef","Host","Input","warn","deepCopy","DomSanitizer","ACLService","Optional","Inject","ALAIN_I18N_TOKEN","map","deepGet","of","_HttpClient","CNCurrencyPipe","DatePipe","YNPipe","DecimalPipe","XlsxService","Subject","EventEmitter","takeUntil","filter","deepMergeKey","toBoolean","from","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","Router","ElementRef","ModalHelper","DrawerHelper","DOCUMENT","DelonLocaleService","AlainConfigService","ViewChild","Output","InputNumber","InputBoolean","ViewContainerRef","ComponentFactoryResolver","NgModule","CommonModule","FormsModule","DelonUtilModule","DelonACLModule","NzPopconfirmModule","NzTableModule","NzIconModule","NzBadgeModule","NzCheckboxModule","NzDividerModule","NzDropDownModule","NzMenuModule","NzRadioModule","NzTagModule","NzInputModule","NzToolTipModule"],"mappings":"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"}