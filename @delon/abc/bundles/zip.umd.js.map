{"version":3,"file":"zip.umd.js","sources":["../../../../packages/abc/zip/zip.service.ts","../../../../packages/abc/zip/zip.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgZone } from '@angular/core';\nimport { AlainConfigService, AlainZipConfig, LazyResult, LazyService } from '@delon/util';\nimport { saveAs } from 'file-saver';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ZipSaveOptions } from './zip.types';\n\ndeclare var JSZip: any;\n\n@Injectable({ providedIn: 'root' })\nexport class ZipService {\n  private cog: AlainZipConfig;\n\n  constructor(private http: HttpClient, private lazy: LazyService, configSrv: AlainConfigService, private ngZone: NgZone) {\n    this.cog = configSrv.merge('zip', {\n      url: '//cdn.bootcss.com/jszip/3.3.0/jszip.min.js',\n      utils: [],\n    })!;\n  }\n\n  private init(): Promise<LazyResult[]> {\n    return this.lazy.load([this.cog.url!].concat(this.cog.utils!));\n  }\n\n  private check(zip: any) {\n    if (!zip) throw new Error('get instance via `ZipService.create()`');\n  }\n\n  /** 解压 */\n  read(fileOrUrl: File | string, options?: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      const resolveCallback = (data: NzSafeAny) => {\n        this.ngZone.run(() => resolve(data));\n      };\n      this.init().then(() => {\n        this.ngZone.runOutsideAngular(() => {\n          // from url\n          if (typeof fileOrUrl === 'string') {\n            this.http.request('GET', fileOrUrl, { responseType: 'arraybuffer' }).subscribe(\n              (res: ArrayBuffer) => {\n                JSZip.loadAsync(res, options).then((ret: NzSafeAny) => resolveCallback(ret));\n              },\n              (err: any) => {\n                reject(err);\n              },\n            );\n            return;\n          }\n          // from file\n          const reader: FileReader = new FileReader();\n          reader.onload = (e: any) => {\n            JSZip.loadAsync(e.target.result, options).then((ret: NzSafeAny) => resolveCallback(ret));\n          };\n          reader.readAsBinaryString(fileOrUrl as File);\n        });\n      });\n    });\n  }\n\n  /** 创建 Zip 实例，用于创建压缩文件 */\n  create(): Promise<any> {\n    return new Promise<any>(resolve => {\n      this.init().then(() => {\n        const zipFile: any = new JSZip();\n        resolve(zipFile);\n      });\n    });\n  }\n\n  /**\n   * 下载URL资源并写入 zip\n   * @param zip Zip 实例\n   * @param path Zip 路径，例如： `text.txt`、`txt/hi.txt`\n   * @param url URL 地址\n   */\n  pushUrl(zip: any, path: string, url: string): Promise<void> {\n    this.check(zip);\n    return new Promise<void>((resolve, reject) => {\n      this.http.request('GET', url, { responseType: 'arraybuffer' }).subscribe(\n        (res: ArrayBuffer) => {\n          zip.file(path, res);\n          resolve();\n        },\n        (error: any) => {\n          reject({ url, error });\n        },\n      );\n    });\n  }\n\n  /**\n   * 保存Zip并执行打开保存对话框\n   *\n   * @param zip zip 对象，务必通过 `create()` 构建\n   * @param options 额外参数，\n   */\n  save(zip: any, options?: ZipSaveOptions): Promise<void> {\n    this.check(zip);\n    const opt = { ...options } as ZipSaveOptions;\n    return new Promise<void>((resolve, reject) => {\n      zip.generateAsync({ type: 'blob', ...opt.options }, opt.update).then(\n        (data: Blob) => {\n          if (opt.callback) opt.callback(data);\n          saveAs(data, opt.filename || 'download.zip');\n          resolve();\n        },\n        (err: NzSafeAny) => {\n          reject(err);\n        },\n      );\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DelonUtilModule } from '@delon/util';\n\n@NgModule({\n  imports: [CommonModule, DelonUtilModule],\n})\nexport class ZipModule {}\n"],"names":["saveAs","Injectable","HttpClient","LazyService","AlainConfigService","NgZone","NgModule","CommonModule","DelonUtilModule"],"mappings":"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"}