{"version":3,"sources":["../../../../packages/abc/loading/loading.component.ts","../../../../packages/abc/loading/loading.service.ts","../../../../packages/abc/loading/loading.module.ts"],"names":["LoadingDefaultComponent","this","dir","Object","defineProperty","prototype","options","icon","custom","Component","args","selector","template","host","[class.loading-default]","[class.loading-default-rtl]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","LoadingService","overlay","configSrv","directionality","_this","compRef","opt","n$","Subject","cog","merge","type","text","theme","spin","delay","loading$","asObservable","pipe","debounce","timer","subscribe","create","instance","_close","_overlayRef","positionStrategy","position","global","centerHorizontally","centerVertically","scrollStrategy","scrollStrategies","block","hasBackdrop","backdropClass","attach","ComponentPortal","get","direction","value","assign","changeDetectorRef","markForCheck","open","next","cleanOpt","detach","close","ngOnDestroy","unsubscribe","Injectable","providedIn","Overlay","AlainConfigService","Directionality","decorators","Optional","COMPONENTS","NgModule","imports","CommonModule","OverlayModule","PortalModule","NzIconModule","NzSpinModule","declarations","entryComponents","exports"],"mappings":"q8BAIA,SAAAA,IAaEC,KAAAC,IAAiB,aAEjBC,OAAAC,eAAIJ,EAAAK,UAAA,OAAI,KAAR,WACE,OAAOJ,KAAKK,QAAQC,sCAGtBJ,OAAAC,eAAIJ,EAAAK,UAAA,SAAM,KAAV,WACE,OAAOJ,KAAKK,QAAQE,iEApBvBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,SAAA,ugBACAC,KAAM,CACJC,0BAA2B,OAC3BC,8BAA+B,iBAEjCC,qBAAqB,EACrBC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,0BCUjC,SAAAC,EAAoBC,EAA0BC,EAAmDC,GAAjG,IAAAC,EAAA1B,KAAoBA,KAAAuB,QAAAA,EAA0BvB,KAAAwB,UAAAA,EAAmDxB,KAAAyB,eAAAA,EAVzFzB,KAAA2B,QAAwD,KACxD3B,KAAA4B,IAAiC,KAEjC5B,KAAA6B,GAAK,IAAIC,EAAAA,QAQf9B,KAAK+B,IAAMP,EAAUQ,MAAM,UAAW,CACpCC,KAAM,OACNC,KAAM,SACN5B,KAAM,CACJ2B,KAAM,UACNE,MAAO,UACPC,MAAM,GAERC,MAAO,IAETrC,KAAKsC,SAAWtC,KAAK6B,GAClBU,eACAC,KAAKC,EAAAA,UAAS,WAAM,OAAAC,EAAAA,MAAMhB,EAAKE,IAAKS,WACpCM,WAAU,WAAM,OAAAjB,EAAKkB,mBAlB1B1C,OAAAC,eAAImB,EAAAlB,UAAA,WAAQ,KAAZ,WACE,OAAuB,MAAhBJ,KAAK2B,QAAkB3B,KAAK2B,QAAQkB,SAAW,sCAoBhDvB,EAAAlB,UAAAwC,OAAA,WACN,GAAgB,MAAZ5C,KAAK4B,IAAT,CAEA5B,KAAK8C,QAAO,GAEZ9C,KAAK+C,YAAc/C,KAAKuB,QAAQqB,OAAO,CACrCI,iBAAkBhD,KAAKuB,QAAQ0B,WAAWC,SAASC,qBAAqBC,mBACxEC,eAAgBrD,KAAKuB,QAAQ+B,iBAAiBC,QAC9CC,aAAa,EACbC,cAAe,qBAEjBzD,KAAK2B,QAAU3B,KAAK+C,YAAYW,OAAO,IAAIC,EAAAA,gBAAgB5D,IAC3D,IAAME,EAAMD,KAAKwB,UAAUoC,IAAI,WAAYC,WAAa7D,KAAKyB,eAAeqC,MAC5E5D,OAAO6D,OAAO/D,KAAK6C,SAAU,CAAExC,QAASL,KAAK4B,IAAK3B,IAAGA,IACrDD,KAAK2B,QAAQqC,kBAAkBC,iBAQjC3C,EAAAlB,UAAA8D,KAAA,SAAK7D,GACHL,KAAK4B,IAAG1B,OAAA6D,OAAA7D,OAAA6D,OAAA,GAAQ/D,KAAK+B,KAAQ1B,GAC7BL,KAAK6B,GAAGsC,QAGF7C,EAAAlB,UAAA0C,OAAA,SAAOsB,GACTA,IAAUpE,KAAK4B,IAAM,MACpB5B,KAAK+C,cACV/C,KAAK+C,YAAYsB,SACjBrE,KAAK2B,QAAU,OAQjBL,EAAAlB,UAAAkE,MAAA,WACEtE,KAAK8C,QAAO,IAGdxB,EAAAlB,UAAAmE,YAAA,WACEvE,KAAKsC,SAASkC,0NA1EjBC,EAAAA,WAAUhE,KAAA,CAAC,CAAEiE,WAAY,oDATjBC,EAAAA,eAGAC,EAAAA,0BAJAC,EAAAA,eAAcC,WAAA,CAAA,CAAA7C,KAuByD8C,EAAAA,cCfhF,IAAMC,EAAa,CAACjF,KAQpB,iCANCkF,EAAAA,SAAQxE,KAAA,CAAC,CACRyE,QAAS,CAACC,EAAAA,aAAcC,EAAAA,cAAeC,EAAAA,aAAcC,EAAAA,aAAcC,EAAAA,cACnEC,aAAcR,EACdS,gBAAiBT,EACjBU,QAASV","sourcesContent":["import { Direction } from '@angular/cdk/bidi';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { LoadingCustom, LoadingIcon, LoadingShowOptions } from './loading.types';\n\n@Component({\n  selector: 'loading-default',\n  templateUrl: './loading.component.html',\n  host: {\n    '[class.loading-default]': 'true',\n    '[class.loading-default-rtl]': `dir === 'rtl'`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LoadingDefaultComponent {\n  options: LoadingShowOptions;\n  dir: Direction = 'ltr';\n\n  get icon(): LoadingIcon {\n    return this.options.icon!;\n  }\n\n  get custom(): LoadingCustom {\n    return this.options.custom!;\n  }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { AlainConfigService, AlainLoadingConfig } from '@delon/util/config';\nimport { Subject, Subscription, timer } from 'rxjs';\nimport { debounce } from 'rxjs/operators';\nimport { LoadingDefaultComponent } from './loading.component';\nimport { LoadingShowOptions } from './loading.types';\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingService implements OnDestroy {\n  private _overlayRef: OverlayRef;\n  private compRef: ComponentRef<LoadingDefaultComponent> | null = null;\n  private opt: LoadingShowOptions | null = null;\n  private cog: AlainLoadingConfig;\n  private n$ = new Subject();\n  private loading$: Subscription;\n\n  get instance(): LoadingDefaultComponent | null {\n    return this.compRef != null ? this.compRef.instance : null;\n  }\n\n  constructor(private overlay: Overlay, private configSrv: AlainConfigService, @Optional() private directionality: Directionality) {\n    this.cog = configSrv.merge('loading', {\n      type: 'spin',\n      text: '加载中...',\n      icon: {\n        type: 'loading',\n        theme: 'outline',\n        spin: true,\n      },\n      delay: 0,\n    })!;\n    this.loading$ = this.n$\n      .asObservable()\n      .pipe(debounce(() => timer(this.opt!.delay)))\n      .subscribe(() => this.create());\n  }\n\n  private create(): void {\n    if (this.opt == null) return;\n\n    this._close(false);\n\n    this._overlayRef = this.overlay.create({\n      positionStrategy: this.overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      hasBackdrop: true,\n      backdropClass: 'loading-backdrop',\n    });\n    this.compRef = this._overlayRef.attach(new ComponentPortal(LoadingDefaultComponent));\n    const dir = this.configSrv.get('loading')!.direction || this.directionality.value;\n    Object.assign(this.instance, { options: this.opt, dir });\n    this.compRef.changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Open a new loading indicator\n   *\n   * 打开一个新加载指示符\n   */\n  open(options?: LoadingShowOptions): void {\n    this.opt = { ...this.cog, ...options };\n    this.n$.next();\n  }\n\n  private _close(cleanOpt: boolean): void {\n    if (cleanOpt) this.opt = null;\n    if (!this._overlayRef) return;\n    this._overlayRef.detach();\n    this.compRef = null;\n  }\n\n  /**\n   * Turn off a loading indicator\n   *\n   * 关闭一个加载指示符\n   */\n  close(): void {\n    this._close(true);\n  }\n\n  ngOnDestroy(): void {\n    this.loading$.unsubscribe();\n  }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { LoadingDefaultComponent } from './loading.component';\n\nconst COMPONENTS = [LoadingDefaultComponent];\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule, NzIconModule, NzSpinModule],\n  declarations: COMPONENTS,\n  entryComponents: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class LoadingModule {}\n"]}