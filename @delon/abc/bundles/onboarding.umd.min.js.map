{"version":3,"sources":["../../../../packages/abc/onboarding/onboarding.component.ts","../../../../packages/abc/onboarding/onboarding.service.ts","../../../../packages/abc/onboarding/onboarding.module.ts"],"names":["OnboardingComponent","el","doc","platform","cdr","this","active","max","op","EventEmitter","running","Object","defineProperty","prototype","_getDoc","_getWin","defaultView","window","getLightData","win","querySelector","item","selectors","scrollTop","pageYOffset","documentElement","body","scrollLeft","pageXOffset","rect","getBoundingClientRect","top","left","needPadding","offsetPos","offsetWH","padding","width","height","clientWidth","clientHeight","scroll","pos","prevSelectorEl","scrollY","scrollTo","updatePrevElStatus","updateRunning","status","detectChanges","updatePosition","isBrowser","lightStyle","nativeElement","style","console","warn","classList","to","type","emit","handleMask","config","maskClosable","ngOnDestroy","clearTimeout","time","Component","args","selector","template","host","[class.onboarding]","[attr.data-onboarding-active]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Optional","Inject","DOCUMENT","Platform","ChangeDetectorRef","OnboardingService","i18n","appRef","resolver","router","injector","running$","_running","attach","_this","compRef","resolveComponentFactory","create","attachView","hostView","compNode","rootNodes","cdk","insertBefore","appendChild","op$","instance","subscribe","next","prev","done","cancelRunning","unsubscribe","destroy","detachView","showItem","isStart","items","assign","position","before","of","after","getData","length","pipes","switchMap","url","navigateByUrl","obs","pipe","delay","push","apply","start","mask","showTotal","Injectable","providedIn","DelonLocaleService","ApplicationRef","ComponentFactoryResolver","Router","Injector","COMPONENTS","NgModule","imports","CommonModule","DelonLocaleModule","DelonUtilModule","NzPopoverModule","NzOutletModule","NzButtonModule","NzNoAnimationModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  OnDestroy,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { OnboardingConfig, OnboardingItem, OnboardingOpType } from './onboarding.types';\n\ninterface OnboardingLightData {\n  el: HTMLElement;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  clientHeight: number;\n  clientWidth: number;\n}\n\n@Component({\n  selector: 'onboarding',\n  templateUrl: './onboarding.component.html',\n  host: {\n    '[class.onboarding]': `true`,\n    '[attr.data-onboarding-active]': `active`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class OnboardingComponent implements OnDestroy {\n  private time: any;\n  private prevSelectorEl: HTMLElement;\n  config: OnboardingConfig;\n  item: OnboardingItem;\n  active = 0;\n  max = 0;\n  readonly op = new EventEmitter<OnboardingOpType>();\n  running = false;\n\n  get first(): boolean {\n    return this.active === 0;\n  }\n\n  get last(): boolean {\n    return this.active === this.max - 1;\n  }\n\n  private _getDoc(): Document {\n    return this.doc;\n  }\n\n  private _getWin(): Window {\n    return this._getDoc().defaultView || window;\n  }\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    @Optional() @Inject(DOCUMENT) private doc: any,\n    private platform: Platform,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  private getLightData(): OnboardingLightData | null {\n    const doc = this._getDoc();\n    const win = this._getWin();\n    const el = doc.querySelector(this.item.selectors) as HTMLElement;\n    if (!el) {\n      return null;\n    }\n\n    const scrollTop = win.pageYOffset || doc.documentElement.scrollTop || doc.body.scrollTop;\n    const scrollLeft = win.pageXOffset || doc.documentElement.scrollLeft || doc.body.scrollLeft;\n    const rect = el.getBoundingClientRect();\n    const top = rect.top + scrollTop;\n    const left = rect.left + scrollLeft;\n    const padding = 8;\n    const needPadding = top > padding && left > padding;\n    const offsetPos = needPadding ? padding : 0;\n    const offsetWH = needPadding ? padding * 2 : 0;\n    return {\n      top: top - offsetPos,\n      left: left - offsetPos,\n      width: rect.width + offsetWH,\n      height: rect.height + offsetWH,\n      el,\n      clientWidth: doc.body.clientWidth,\n      clientHeight: doc.body.clientHeight,\n    };\n  }\n\n  private scroll(pos: OnboardingLightData): void {\n    this.prevSelectorEl = pos.el;\n    const scrollY = pos.top - (pos.clientHeight - pos.height) / 2;\n    this._getWin().scrollTo({ top: scrollY });\n    this.updatePrevElStatus(true);\n  }\n\n  updateRunning(status: boolean): void {\n    this.running = status;\n    this.cdr.detectChanges();\n    if (!status) {\n      this.updatePosition();\n    }\n  }\n\n  private updatePosition(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n\n    const pos = this.getLightData();\n    if (pos == null) {\n      console.warn(`Did not matches selectors [${this.item.selectors}]`);\n      return;\n    }\n\n    const lightStyle = (this.el.nativeElement.querySelector('.onboarding__light') as HTMLElement).style;\n    lightStyle.top = `${pos.top}px`;\n    lightStyle.left = `${pos.left}px`;\n    lightStyle.width = `${pos.width}px`;\n    lightStyle.height = `${pos.height}px`;\n\n    this.updatePrevElStatus(false);\n    this.scroll(pos);\n  }\n\n  private updatePrevElStatus(status: boolean): void {\n    if (this.prevSelectorEl) {\n      this.prevSelectorEl.classList[status ? 'add' : 'remove']('onboarding__light-el');\n    }\n  }\n\n  to(type: OnboardingOpType): void {\n    this.op.emit(type);\n  }\n\n  handleMask(): void {\n    if (this.config.maskClosable === true) {\n      this.to('done');\n    }\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.time);\n    this.updatePrevElStatus(false);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  Injector,\n  OnDestroy,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DelonLocaleService } from '@delon/theme';\nimport { of, pipe, Subscription } from 'rxjs';\nimport { delay, switchMap } from 'rxjs/operators';\nimport { OnboardingComponent } from './onboarding.component';\nimport { OnboardingConfig, OnboardingItem, OnboardingOpType } from './onboarding.types';\n\n@Injectable({ providedIn: 'root' })\nexport class OnboardingService implements OnDestroy {\n  private compRef: ComponentRef<OnboardingComponent>;\n  private op$: Subscription;\n  private config: OnboardingConfig;\n  private active = 0;\n  private running$: Subscription | null = null;\n  private _running = false;\n  private type: OnboardingOpType | null = null;\n\n  private _getDoc(): Document {\n    return this.doc;\n  }\n\n  /**\n   * Get whether it is booting\n   *\n   * 获取是否正在引导中\n   */\n  get running(): boolean {\n    return this._running;\n  }\n\n  constructor(\n    private i18n: DelonLocaleService,\n    private appRef: ApplicationRef,\n    private resolver: ComponentFactoryResolver,\n    private router: Router,\n    private injector: Injector,\n    @Inject(DOCUMENT) private doc: any,\n  ) {}\n\n  private attach(): void {\n    const compRef = (this.compRef = this.resolver.resolveComponentFactory(OnboardingComponent).create(this.injector));\n    this.appRef.attachView(compRef.hostView);\n    const compNode = (compRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\n    const doc = this._getDoc();\n    const cdk = doc.querySelector('.cdk-overlay-container') as HTMLElement;\n    if (cdk) {\n      doc.body.insertBefore(compNode, cdk);\n    } else {\n      doc.body.appendChild(compNode);\n    }\n    this.op$ = this.compRef.instance.op.subscribe((type: OnboardingOpType) => {\n      switch (type) {\n        case 'next':\n          this.next();\n          break;\n        case 'prev':\n          this.prev();\n          break;\n        default:\n          this.done();\n          break;\n      }\n    });\n  }\n\n  private cancelRunning(): this {\n    if (this.running$) {\n      this.running$.unsubscribe();\n      this.running$ = null;\n    }\n    return this;\n  }\n\n  private updateRunning(status: boolean): this {\n    this._running = status;\n    this.compRef!.instance.updateRunning(status);\n    return this;\n  }\n\n  private destroy(): void {\n    this.cancelRunning();\n    if (this.compRef) {\n      this.appRef.detachView(this.compRef.hostView);\n      this.compRef.destroy();\n      this.op$.unsubscribe();\n    }\n  }\n\n  private showItem(isStart: boolean = false): void {\n    const items = this.config.items!;\n    const item = {\n      position: 'bottomLeft',\n      before: of(true),\n      after: of(true),\n      ...this.i18n.getData('onboarding'),\n      ...items[this.active],\n    } as OnboardingItem;\n    Object.assign(this.compRef.instance, { item, config: this.config, active: this.active, max: items.length });\n    const pipes = [\n      switchMap(() => (item.url ? this.router.navigateByUrl(item.url) : of(true))),\n      switchMap(() => {\n        const obs = this.type === 'prev' ? item.after! : item.before!;\n        return typeof obs === 'number' ? of(true).pipe(delay(obs)) : obs;\n      }),\n    ];\n    if (!isStart) {\n      pipes.push(delay(1));\n    }\n\n    this.updateRunning(true);\n\n    this.running$ = of(true)\n      .pipe(pipe.apply(this, pipes))\n      .subscribe(\n        () => this.cancelRunning().updateRunning(false),\n        () => this.done(),\n      );\n  }\n\n  /**\n   * Start a new user guidance\n   *\n   * 开启新的用户引导流程\n   */\n  start(config: OnboardingConfig): void {\n    if (this.running) {\n      return;\n    }\n    this.destroy();\n    this.config = {\n      items: [],\n      mask: true,\n      maskClosable: true,\n      showTotal: false,\n      ...config,\n    };\n    this.active = 0;\n    this.type = null;\n    this.attach();\n    this.showItem(true);\n  }\n\n  /**\n   * Next\n   *\n   * 下一步\n   */\n  next(): void {\n    if (this._running || this.active + 1 >= this.config.items!.length) {\n      this.done();\n      return;\n    }\n    this.type = 'next';\n    ++this.active;\n    this.showItem();\n  }\n\n  /**\n   * Prev\n   *\n   * 上一步\n   */\n  prev(): void {\n    if (this._running || this.active - 1 < 0) {\n      return;\n    }\n    this.type = 'prev';\n    --this.active;\n    this.showItem();\n  }\n\n  /**\n   * Done\n   *\n   * 完成\n   */\n  done(): void {\n    this.type = 'done';\n    this.destroy();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\n\nimport { OnboardingComponent } from './onboarding.component';\n\nconst COMPONENTS = [OnboardingComponent];\n\n@NgModule({\n  imports: [CommonModule, DelonLocaleModule, DelonUtilModule, NzPopoverModule, NzOutletModule, NzButtonModule, NzNoAnimationModule],\n  declarations: COMPONENTS,\n  entryComponents: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class OnboardingModule {}\n"]}