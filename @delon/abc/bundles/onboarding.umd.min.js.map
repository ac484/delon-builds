{"version":3,"sources":["../../../../packages/abc/onboarding/onboarding.component.ts","../../../../packages/abc/onboarding/onboarding.service.ts","../../../../packages/abc/onboarding/onboarding.module.ts"],"names":["OnboardingComponent","el","doc","platform","cdr","this","active","max","op","EventEmitter","running","dir","Object","defineProperty","prototype","_getDoc","_getWin","defaultView","window","getLightData","win","querySelector","item","selectors","scrollTop","pageYOffset","documentElement","body","scrollLeft","pageXOffset","rect","getBoundingClientRect","top","left","needPadding","offsetPos","offsetWH","padding","width","height","clientWidth","clientHeight","ngAfterViewInit","popover","component","onClickOutside","scroll","pos","prevSelectorEl","scrollY","scrollTo","updatePrevElStatus","updateRunning","status","detectChanges","updatePosition","isBrowser","lightStyle","nativeElement","style","console","warn","classList","to","type","emit","handleMask","config","maskClosable","hide","ngOnDestroy","clearTimeout","time","Component","args","selector","template","host","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Optional","Inject","DOCUMENT","Platform","ChangeDetectorRef","ViewChild","static","OnboardingService","i18n","appRef","resolver","router","injector","configSrv","directionality","running$","_running","attach","_this","compRef","resolveComponentFactory","create","attachView","hostView","compNode","rootNodes","cdk","insertBefore","appendChild","op$","instance","subscribe","next","prev","done","cancelRunning","unsubscribe","destroy","detachView","showItem","isStart","items","assign","position","before","of","after","getData","get","direction","value","length","pipes","switchMap","url","navigateByUrl","obs","pipe","delay","push","apply","start","mask","showTotal","Injectable","providedIn","DelonLocaleService","ApplicationRef","ComponentFactoryResolver","Router","Injector","AlainConfigService","Directionality","decorators","COMPONENTS","NgModule","imports","CommonModule","DelonLocaleModule","NzPopoverModule","NzOutletModule","NzButtonModule","NzNoAnimationModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Direction } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  OnDestroy,\n  Optional,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NzPopoverDirective } from 'ng-zorro-antd/popover';\nimport { OnboardingConfig, OnboardingItem, OnboardingOpType } from './onboarding.types';\n\ninterface OnboardingLightData {\n  el: HTMLElement;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  clientHeight: number;\n  clientWidth: number;\n}\n\n@Component({\n  selector: 'onboarding',\n  templateUrl: './onboarding.component.html',\n  host: {\n    '[class.onboarding]': `true`,\n    '[class.onboarding-rtl]': `dir === 'rtl'`,\n    '[attr.data-onboarding-active]': `active`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class OnboardingComponent implements OnDestroy, AfterViewInit {\n  private time: any;\n  private prevSelectorEl: HTMLElement;\n  config: OnboardingConfig;\n  item: OnboardingItem;\n  active = 0;\n  max = 0;\n  readonly op = new EventEmitter<OnboardingOpType>();\n  running = false;\n  dir: Direction = 'ltr';\n  @ViewChild('popover', { static: false }) private popover!: NzPopoverDirective;\n\n  get first(): boolean {\n    return this.active === 0;\n  }\n\n  get last(): boolean {\n    return this.active === this.max - 1;\n  }\n\n  private _getDoc(): Document {\n    return this.doc;\n  }\n\n  private _getWin(): Window {\n    return this._getDoc().defaultView || window;\n  }\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    @Optional() @Inject(DOCUMENT) private doc: any,\n    private platform: Platform,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  private getLightData(): OnboardingLightData | null {\n    const doc = this._getDoc();\n    const win = this._getWin();\n    const el = doc.querySelector(this.item.selectors) as HTMLElement;\n    if (!el) {\n      return null;\n    }\n\n    const scrollTop = win.pageYOffset || doc.documentElement.scrollTop || doc.body.scrollTop;\n    const scrollLeft = win.pageXOffset || doc.documentElement.scrollLeft || doc.body.scrollLeft;\n    const rect = el.getBoundingClientRect();\n    const top = rect.top + scrollTop;\n    const left = rect.left + scrollLeft;\n    const padding = 8;\n    const needPadding = top > padding && left > padding;\n    const offsetPos = needPadding ? padding : 0;\n    const offsetWH = needPadding ? padding * 2 : 0;\n    return {\n      top: top - offsetPos,\n      left: left - offsetPos,\n      width: rect.width + offsetWH,\n      height: rect.height + offsetWH,\n      el,\n      clientWidth: doc.body.clientWidth,\n      clientHeight: doc.body.clientHeight,\n    };\n  }\n\n  ngAfterViewInit(): void {\n    // Waiting https://github.com/NG-ZORRO/ng-zorro-antd/issues/6491\n    this.popover.component!.onClickOutside = () => {};\n  }\n\n  private scroll(pos: OnboardingLightData): void {\n    this.prevSelectorEl = pos.el;\n    const scrollY = pos.top - (pos.clientHeight - pos.height) / 2;\n    this._getWin().scrollTo({ top: scrollY });\n    this.updatePrevElStatus(true);\n  }\n\n  updateRunning(status: boolean): void {\n    this.running = status;\n    this.cdr.detectChanges();\n    if (!status) {\n      this.updatePosition();\n    }\n  }\n\n  private updatePosition(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n\n    const pos = this.getLightData();\n    if (pos == null) {\n      console.warn(`Did not matches selectors [${this.item.selectors}]`);\n      return;\n    }\n\n    const lightStyle = (this.el.nativeElement.querySelector('.onboarding__light') as HTMLElement).style;\n    lightStyle.top = `${pos.top}px`;\n    lightStyle.left = `${pos.left}px`;\n    lightStyle.width = `${pos.width}px`;\n    lightStyle.height = `${pos.height}px`;\n\n    this.updatePrevElStatus(false);\n    this.scroll(pos);\n  }\n\n  private updatePrevElStatus(status: boolean): void {\n    if (this.prevSelectorEl) {\n      this.prevSelectorEl.classList[status ? 'add' : 'remove']('onboarding__light-el');\n    }\n  }\n\n  to(type: OnboardingOpType): void {\n    this.op.emit(type);\n  }\n\n  handleMask(): void {\n    if (this.config.maskClosable === true) {\n      this.popover.component!.hide();\n      this.to('done');\n    }\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.time);\n    this.updatePrevElStatus(false);\n  }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DelonLocaleService } from '@delon/theme';\nimport { AlainConfigService } from '@delon/util/config';\nimport { of, pipe, Subscription } from 'rxjs';\nimport { delay, switchMap } from 'rxjs/operators';\nimport { OnboardingComponent } from './onboarding.component';\nimport { OnboardingConfig, OnboardingItem, OnboardingOpType } from './onboarding.types';\n\n@Injectable({ providedIn: 'root' })\nexport class OnboardingService implements OnDestroy {\n  private compRef: ComponentRef<OnboardingComponent>;\n  private op$: Subscription;\n  private config: OnboardingConfig;\n  private active = 0;\n  private running$: Subscription | null = null;\n  private _running = false;\n  private type: OnboardingOpType | null = null;\n\n  private _getDoc(): Document {\n    return this.doc;\n  }\n\n  /**\n   * Get whether it is booting\n   *\n   * 获取是否正在引导中\n   */\n  get running(): boolean {\n    return this._running;\n  }\n\n  constructor(\n    private i18n: DelonLocaleService,\n    private appRef: ApplicationRef,\n    private resolver: ComponentFactoryResolver,\n    private router: Router,\n    private injector: Injector,\n    @Inject(DOCUMENT) private doc: any,\n    private configSrv: AlainConfigService,\n    @Optional() private directionality: Directionality,\n  ) {}\n\n  private attach(): void {\n    const compRef = (this.compRef = this.resolver.resolveComponentFactory(OnboardingComponent).create(this.injector));\n    this.appRef.attachView(compRef.hostView);\n    const compNode = (compRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\n    const doc = this._getDoc();\n    const cdk = doc.querySelector('.cdk-overlay-container') as HTMLElement;\n    if (cdk) {\n      doc.body.insertBefore(compNode, cdk);\n    } else {\n      doc.body.appendChild(compNode);\n    }\n    this.op$ = this.compRef.instance.op.subscribe((type: OnboardingOpType) => {\n      switch (type) {\n        case 'next':\n          this.next();\n          break;\n        case 'prev':\n          this.prev();\n          break;\n        default:\n          this.done();\n          break;\n      }\n    });\n  }\n\n  private cancelRunning(): this {\n    if (this.running$) {\n      this.running$.unsubscribe();\n      this.running$ = null;\n    }\n    return this;\n  }\n\n  private updateRunning(status: boolean): this {\n    this._running = status;\n    this.compRef!.instance.updateRunning(status);\n    return this;\n  }\n\n  private destroy(): void {\n    this.cancelRunning();\n    if (this.compRef) {\n      this.appRef.detachView(this.compRef.hostView);\n      this.compRef.destroy();\n      this.op$.unsubscribe();\n    }\n  }\n\n  private showItem(isStart: boolean = false): void {\n    const items = this.config.items!;\n    const item = {\n      position: 'bottomLeft',\n      before: of(true),\n      after: of(true),\n      ...this.i18n.getData('onboarding'),\n      ...items[this.active],\n    } as OnboardingItem;\n    const dir = this.configSrv.get('onboarding')!.direction || this.directionality.value;\n    Object.assign(this.compRef.instance, { item, config: this.config, active: this.active, max: items.length, dir });\n    const pipes = [\n      switchMap(() => (item.url ? this.router.navigateByUrl(item.url) : of(true))),\n      switchMap(() => {\n        const obs = this.type === 'prev' ? item.after! : item.before!;\n        return typeof obs === 'number' ? of(true).pipe(delay(obs)) : obs;\n      }),\n    ];\n    if (!isStart) {\n      pipes.push(delay(1));\n    }\n\n    this.updateRunning(true);\n\n    this.running$ = of(true)\n      .pipe(pipe.apply(this, pipes))\n      .subscribe(\n        () => this.cancelRunning().updateRunning(false),\n        () => this.done(),\n      );\n  }\n\n  /**\n   * Start a new user guidance\n   *\n   * 开启新的用户引导流程\n   */\n  start(config: OnboardingConfig): void {\n    if (this.running) {\n      return;\n    }\n    this.destroy();\n    this.config = {\n      items: [],\n      mask: true,\n      maskClosable: true,\n      showTotal: false,\n      ...config,\n    };\n    this.active = 0;\n    this.type = null;\n    this.attach();\n    this.showItem(true);\n  }\n\n  /**\n   * Next\n   *\n   * 下一步\n   */\n  next(): void {\n    if (this._running || this.active + 1 >= this.config.items!.length) {\n      this.done();\n      return;\n    }\n    this.type = 'next';\n    ++this.active;\n    this.showItem();\n  }\n\n  /**\n   * Prev\n   *\n   * 上一步\n   */\n  prev(): void {\n    if (this._running || this.active - 1 < 0) {\n      return;\n    }\n    this.type = 'prev';\n    --this.active;\n    this.showItem();\n  }\n\n  /**\n   * Done\n   *\n   * 完成\n   */\n  done(): void {\n    this.type = 'done';\n    this.destroy();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\n\nimport { OnboardingComponent } from './onboarding.component';\n\nconst COMPONENTS = [OnboardingComponent];\n\n@NgModule({\n  imports: [CommonModule, DelonLocaleModule, NzPopoverModule, NzOutletModule, NzButtonModule, NzNoAnimationModule],\n  declarations: COMPONENTS,\n  entryComponents: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class OnboardingModule {}\n"]}