{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/abc/st/st-row.directive.ts","ng://@delon/abc/st/st-widget.ts","ng://@delon/abc/st/st-column-source.ts","ng://@delon/abc/st/st-data-source.ts","ng://@delon/abc/st/st-export.ts","ng://@delon/abc/st/st.config.ts","ng://@delon/abc/st/st.component.ts","ng://@delon/abc/st/st-widget-host.directive.ts","ng://@delon/abc/st/st.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","ar","error","__spread","concat","STRowSource","titles","rows","add","type","path","ref","getTitle","getRow","Injectable","STRowDirective","source","ngOnInit","id","Directive","args","selector","TemplateRef","Host","Input","STWidgetRegistry","_widgets","register","widget","has","get","providedIn","STColumnSource","dom","rowSource","acl","i18nSrv","stWidgetRegistry","setCog","val","cog","fixPop","def","title","condition","btnCoerce","list","ret","_b","modal","drawer","btnIcon","list_1","list_1_1","item","can","component","console","warn","paramsName","size","icon","children","i18n","text","fanyi","btnCoerceIf","list_2","list_2_1","iif","iifBehavior","fixedCoerce","countReduce","a","b","toString","replace","filter","w","fixed","width","forEach","idx","_left","slice","reduce","reverse","_right","sortCoerce","res","fixCoerce","reName","sortReName","sort","enabled","indexKey","filterCoerce","_this","iconTheme","menus","multiple","confirmText","filterConfirmText","clearText","filterClearText","baseIcon","theme","updateDefault","restoreRender","renderTitle","__renderTitle","render","__render","widgetCoerce","_a","genHeaders","rootColumns","fillRowCells","columns","colIndex","rowIndex","currentColIndex","map","column","cell","colStart","colSpan","subColumns","Array","isArray","total","count","hasSubColumns","rowSpan","colEnd","rowCount","cleanCond","copyList","deepCopy","copyList_1","copyList_1_1","process","Error","noIndex","checkboxCount","radioCount","point","processItem","index","split","join","tit","_text","bypassSecurityTrustHtml","selections","yn","truth","click","badge","tag","className","number","currency","date","_sort","buttons","__point","processList","data","data_1","data_1_1","headers","restoreAllRender","default","findIndex","cleanFilter","col","checked","undefined","DomSanitizer","ACLService","Optional","Inject","ALAIN_I18N_TOKEN","STDataSource","http","currentyPipe","datePipe","ynPipe","numberPipe","sortTick","options","data$","retTotal","retPs","retList","retPi","rawData","isRemote","page","pi","ps","paginator","showPage","show","getByHttp","pipe","deepGet","resultTotal","of","copyResult","sorterFn","getSorterFn","values","getFilteredData","onFilter","fn","record","some","front","maxPageIndex","Math","ceil","max","optimizeData","rowClassName","realTotal","realPs","statistical","genStatistical","pageShow","format","formatRes","indexOf","org","color","getNoIndex","transform","numberDigits","dateFormat","dataItem","url","req","singleSort","multiSort","method","toUpperCase","params","zeroIndexed","reqOptions","getReqSortMap","getReqFilterMap","allInBody","request","len","_values","_rowClassName","getValidSort","sortList","sortItem","compare","ms_1","separator","nameSeparator","tick","keepEmptyKey","mapData","sortFiled","sortValue","obj","getStatistical","digits","getValues","self","toFixed","getSum","min","String","isNaN","isFinite","parseFloat","_HttpClient","CNCurrencyPipe","DatePipe","YNPipe","DecimalPipe","STExport","xlsxSrv","_stGet","ynTruth","ynYes","ynNo","genSheet","opt","sheets","sheet","sheetname","colData","exported","cc","dc","fromCharCode","j","export","filename","callback","XlsxService","ST_DEFULAT_CONFIG","responsive","responsiveHideHeaderFooter","lazyLoad","skip","limit","position","placement","showSize","pageSizes","showQuickJumper","toTop","toTopOffset","exact","footer","footerHeight","trigger","rowClickTime","spin","expandRowByClick","expandAccordion","widthMode","strictBehavior","virtualItemSize","virtualMaxBufferPx","virtualMinBufferPx","STComponent","cdr","router","el","exportSrv","modalHelper","drawerHelper","doc","columnSource","dataSource","delonI18n","configSrv","unsubscribe$","Subject","totalTpl","rowClickCount","locale","_loading","_data","_statistical","_isPagination","_allChecked","_allCheckedDisabled","_indeterminate","_headers","_columns","loading","loadingDelay","bordered","EventEmitter","change","virtualScroll","virtualForTrackBy","merge","takeUntil","subscribe","getData","updateTotalTpl","cd","refreshColumns","_req","deepMergeKey","_res","_page","_multiSort","toBoolean","_widthMode","copyMultiSort","global","detectChanges","renderTotal","range","isTruncate","columnClass","changeEmit","emit","loadData","setLoading","resolvePromise","rejectPromise","unsubscribe","loadPageData","_refCheck","isStopped","error_1","clear","cleanStatus","clearStatus","clearCheck","clearRadio","clearFilter","clearSort","load","extraParams","_change","reload","reset","_toTop","enforce","scroll","querySelector","scrollTo","scrollIntoView","documentElement","scrollTop","_click","preventDefault","stopPropagation","navigateByUrl","state","routerState","closeOtherExpand","expand","_rowClick","nodeName","showExpand","setTimeout","_expandChange","removeRow","splice","pos","setRow","refreshSchema","emitReload","resetColumns","nextSortTick","handleFilter","_filterConfirm","_filterRadio","_filterClear","_checkAll","validData","disabled","checkedList","allUnChecked","every","_checkNotify","_checkSelection","_rowSelection","row","select","_refRadio","_btnClick","btn","btnCallback","clickRes","create","_btnText","_validBtns","btns","isRenderDisabled","_result","_disabled","newData","from","filteredData","_d","_c","orgTable","cdkVirtualScrollViewport","ngAfterViewInit","ngOnChanges","changes","changeData","currentValue","firstChange","ngOnDestroy","complete","Component","exportAs","template","providers","host","[class.st]","[class.st__p-left]","[class.st__p-center]","[class.st__width-strict]","[class.ant-table-rep]","[class.ant-table-rep__hide-header-footer]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","Router","ElementRef","ModalHelper","DrawerHelper","DOCUMENT","DelonLocaleService","AlainConfigService","ViewChild","static","Output","InputNumber","InputBoolean","STWidgetHostDirective","viewContainerRef","componentFactoryResolver","componentType","componentFactory","resolveComponentFactory","componentRef","createComponent","keys","ViewContainerRef","ComponentFactoryResolver","COMPONENTS","DIRECTIVES","STModule","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonACLModule","NzPopconfirmModule","NzTableModule","NzIconModule","NzBadgeModule","NzCheckboxModule","NzDividerModule","NzDropDownModule","NzMenuModule","NzRadioModule","NzTagModule","NzInputModule","NzToolTipModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>) {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string) {\n    return this.titles[path];\n  }\n\n  getRow(path: string) {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row') id: string;\n\n  @Input() type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class STWidgetRegistry {\n  private _widgets: { [type: string]: any } = {};\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  get(type: string): any {\n    return this._widgets[type];\n  }\n}\n","import { Host, Inject, Injectable, Optional } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { AlainSTConfig, deepCopy, warn } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STRowSource } from './st-row.directive';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STColumnButton, STColumnButtonPop, STColumnFilter, STColumnGroupType, STIcon, STSortMap } from './st.interfaces';\n\n@Injectable()\nexport class STColumnSource {\n  private cog: AlainSTConfig;\n\n  constructor(\n    private dom: DomSanitizer,\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private stWidgetRegistry: STWidgetRegistry,\n  ) {}\n\n  setCog(val: AlainSTConfig): void {\n    this.cog = val;\n  }\n\n  private fixPop(i: STColumnButton, def: STColumnButtonPop): void {\n    if (i.pop == null || i.pop === false) {\n      i.pop = false;\n      return;\n    }\n\n    let pop = {\n      ...def,\n    };\n    if (typeof i.pop === 'string') {\n      pop.title = i.pop;\n    } else if (typeof i.pop === 'object') {\n      pop = {\n        ...pop,\n        ...i.pop,\n      };\n    }\n\n    if (typeof pop.condition !== 'function') {\n      pop.condition = () => false;\n    }\n\n    i.pop = pop;\n  }\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, pop, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      // pop\n      this.fixPop(item, pop!);\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children = item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]) {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      item.iifBehavior = item.iifBehavior || this.cog.iifBehavior;\n      if (item.children && item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      } else {\n        item.children = [];\n      }\n    }\n  }\n\n  private fixedCoerce(list: STColumn[]) {\n    const countReduce = (a: number, b: STColumn) => a + +b.width!.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach((item, idx) => (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'));\n  }\n\n  private sortCoerce(item: STColumn): STSortMap {\n    const res = this.fixCoerce(item);\n    res.reName = {\n      ...this.cog.sortReName,\n      ...res.reName,\n    };\n    return res;\n  }\n\n  private fixCoerce(item: STColumn): STSortMap {\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: STColumn): STColumnFilter | null {\n    if (item.filter == null) {\n      return null;\n    }\n\n    let res: STColumnFilter | null = item.filter;\n    res.type = res.type || 'default';\n\n    let icon = 'filter';\n    let iconTheme = 'fill';\n    if (res.type === 'keyword') {\n      if (res.menus == null || res.menus!.length === 0) {\n        res.menus = [{ value: '' }];\n      }\n      icon = 'search';\n      iconTheme = 'outline';\n    }\n\n    if (res.menus!.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n\n    res.confirmText = res.confirmText || this.cog.filterConfirmText;\n    res.clearText = res.clearText || this.cog.filterClearText;\n    res.key = res.key || item.indexKey;\n    res.icon = res.icon || icon;\n\n    const baseIcon = { type: icon, theme: iconTheme } as STIcon;\n    if (typeof res.icon === 'string') {\n      res.icon = { ...baseIcon, type: res.icon } as STIcon;\n    } else {\n      res.icon = { ...baseIcon, ...res.icon };\n    }\n\n    this.updateDefault(res);\n\n    if (this.acl) {\n      res.menus = res.menus!.filter(w => this.acl.can(w.acl));\n    }\n\n    if (res.menus!.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: STColumn) {\n    if (item.renderTitle) {\n      item.__renderTitle = this.rowSource.getTitle(item.renderTitle);\n    }\n    if (item.render) {\n      item.__render = this.rowSource.getRow(item.render);\n    }\n  }\n\n  private widgetCoerce(item: STColumn): void {\n    if (item.type !== 'widget') return;\n    if (item.widget == null || !this.stWidgetRegistry.has(item.widget.type)) {\n      delete item.type;\n      warn(`st: No widget for type \"${item.widget?.type}\"`);\n    }\n  }\n\n  private genHeaders(rootColumns: STColumn[]): STColumn[][] {\n    const rows: STColumn[][] = [];\n    const fillRowCells = (columns: STColumn[], colIndex: number, rowIndex = 0): number[] => {\n      // Init rows\n      rows[rowIndex] = rows[rowIndex] || [];\n\n      let currentColIndex = colIndex;\n      const colSpans: number[] = columns.map(column => {\n        const cell: STColumnGroupType = {\n          column,\n          colStart: currentColIndex,\n        };\n\n        let colSpan: number = 1;\n\n        const subColumns = column.children;\n        if (Array.isArray(subColumns) && subColumns.length > 0) {\n          colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n          cell.hasSubColumns = true;\n        }\n\n        if ('colSpan' in column) {\n          colSpan = column.colSpan!;\n        }\n\n        if ('rowSpan' in column) {\n          cell.rowSpan = column.rowSpan;\n        }\n\n        cell.colSpan = colSpan;\n        cell.colEnd = cell.colStart + colSpan - 1;\n        rows[rowIndex].push(cell);\n\n        currentColIndex += colSpan;\n\n        return colSpan;\n      });\n\n      return colSpans;\n    };\n\n    fillRowCells(rootColumns, 0);\n\n    // Handle `rowSpan`\n    const rowCount = rows.length;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      rows[rowIndex].forEach(cell => {\n        if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n          cell.rowSpan = rowCount - rowIndex;\n        }\n      });\n    }\n\n    return rows;\n  }\n\n  private cleanCond(list: STColumn[]): STColumn[] {\n    const res: STColumn[] = [];\n    const copyList = deepCopy(list);\n    for (const item of copyList) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      res.push(item);\n    }\n    return res;\n  }\n\n  process(list: STColumn[]): { columns: STColumn[]; headers: STColumn[][] } {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: STColumn[] = [];\n\n    const processItem = (item: STColumn): STColumn => {\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n\n      // #region title\n\n      const tit = (typeof item.title === 'string' ? { text: item.title } : item.title) || {};\n      if (tit.i18n && this.i18nSrv) {\n        tit.text = this.i18nSrv.fanyi(tit.i18n);\n      }\n      if (tit.text) {\n        tit._text = this.dom.bypassSecurityTrustHtml(tit.text);\n      }\n      item.title = tit;\n\n      // #endregion\n\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null)\n      ) {\n        (item as any).type = '';\n      }\n      // className\n      if (!item.className) {\n        item.className = ({\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        } as NzSafeAny)[item.type!];\n      }\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item) as STColumnFilter;\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons!);\n      // widget\n      this.widgetCoerce(item);\n      // restore custom row\n      this.restoreRender(item);\n\n      item.__point = point++;\n\n      return item;\n    };\n\n    const processList = (data: STColumn[]): void => {\n      for (const item of data) {\n        columns.push(processItem(item));\n        if (Array.isArray(item.children)) {\n          processList(item.children);\n        }\n      }\n    };\n\n    const copyList = this.cleanCond(list);\n    processList(copyList);\n\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns);\n\n    return { columns, headers: this.genHeaders(copyList) };\n  }\n\n  restoreAllRender(columns: STColumn[]) {\n    columns.forEach(i => this.restoreRender(i));\n  }\n\n  updateDefault(filter: STColumnFilter): this {\n    if (filter.type === 'default') {\n      filter.default = filter.menus!.findIndex(w => w.checked!) !== -1;\n    } else {\n      filter.default = !!filter.menus![0].value;\n    }\n    return this;\n  }\n\n  cleanFilter(col: STColumn): this {\n    const f = col.filter!;\n    f.default = false;\n    if (f.type === 'default') {\n      f.menus!.forEach(i => (i.checked = false));\n    } else {\n      f.menus![0].value = undefined;\n    }\n    return this;\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CNCurrencyPipe, DatePipe, YNPipe, _HttpClient } from '@delon/theme';\nimport { deepCopy, deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  STColumn,\n  STColumnFilter,\n  STData,\n  STMultiSort,\n  STPage,\n  STReq,\n  STReqReNameType,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STSortMap,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './st.interfaces';\n\nexport interface STDataSourceOptions {\n  pi: number;\n  ps: number;\n  paginator: boolean;\n  data: string | STData[] | Observable<STData[]>;\n  total: number;\n  req: STReq;\n  res: STRes;\n  page: STPage;\n  columns: STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** 是否需要显示分页器 */\n  pageShow: boolean;\n  /** 新 `pi`，若返回 `undefined` 表示用户受控 */\n  pi: number;\n  /** 新 `ps`，若返回 `undefined` 表示用户受控 */\n  ps: number;\n  /** 新 `total`，若返回 `undefined` 表示用户受控 */\n  total: number;\n  /** 数据 */\n  list: STData[];\n  /** 统计数据 */\n  statistical: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private currentyPipe: CNCurrencyPipe,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Observable<STDataSourceResult> {\n    let data$: Observable<STData[]>;\n    let isRemote = false;\n    const { data, res, total, page, pi, ps, paginator, columns } = options;\n    let retTotal: number;\n    let retPs: number;\n    let retList: STData[];\n    let retPi: number;\n    let rawData: any;\n    let showPage = page.show;\n\n    if (typeof data === 'string') {\n      isRemote = true;\n      data$ = this.getByHttp(data, options).pipe(\n        map(result => {\n          rawData = result;\n          let ret: STData[];\n          if (Array.isArray(result)) {\n            ret = result;\n            retTotal = ret.length;\n            retPs = retTotal;\n            showPage = false;\n          } else {\n            // list\n            ret = deepGet(result, res.reName!.list as string[], []);\n            if (ret == null || !Array.isArray(ret)) {\n              ret = [];\n            }\n            // total\n            const resultTotal = res.reName!.total && deepGet(result, res.reName!.total as string[], null);\n            retTotal = resultTotal == null ? total || 0 : +resultTotal;\n          }\n          return deepCopy(ret);\n        }),\n      );\n    } else if (Array.isArray(data)) {\n      data$ = of(data);\n    } else {\n      // a cold observable\n      data$ = data;\n    }\n\n    if (!isRemote) {\n      data$ = data$.pipe(\n        // sort\n        map((result: STData[]) => {\n          rawData = result;\n          let copyResult = deepCopy(result);\n          const sorterFn = this.getSorterFn(columns);\n          if (sorterFn) {\n            copyResult = copyResult.sort(sorterFn);\n          }\n          return copyResult;\n        }),\n        // filter\n        map((result: STData[]) => {\n          columns\n            .filter(w => w.filter)\n            .forEach(c => {\n              const filter = c.filter!;\n              const values = this.getFilteredData(filter);\n              if (values.length === 0) return;\n              const onFilter = filter.fn;\n              if (typeof onFilter !== 'function') {\n                console.warn(`[st] Muse provide the fn function in filter`);\n                return;\n              }\n              result = result.filter(record => values.some(v => onFilter(v, record)));\n            });\n          return result;\n        }),\n        // paging\n        map((result: STData[]) => {\n          if (paginator && page.front) {\n            const maxPageIndex = Math.ceil(result.length / ps);\n            retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n            retTotal = result.length;\n            if (page.show === true) {\n              return result.slice((retPi - 1) * ps, retPi * ps);\n            }\n          }\n          return result;\n        }),\n      );\n    }\n\n    // pre-process\n    if (typeof res.process === 'function') {\n      data$ = data$.pipe(map(result => res.process!(result, rawData)));\n    }\n\n    data$ = data$.pipe(map(result => this.optimizeData({ result, columns, rowClassName: options.rowClassName })));\n\n    return data$.pipe(\n      map(result => {\n        retList = result;\n        const realTotal = retTotal || total;\n        const realPs = retPs || ps;\n\n        return {\n          pi: retPi,\n          ps: retPs,\n          total: retTotal,\n          list: retList,\n          statistical: this.genStatistical(columns, retList, rawData),\n          pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n        } as STDataSourceResult;\n      }),\n    );\n  }\n\n  private get(item: STData, col: STColumn, idx: number): { text: any; _text: SafeHtml; org?: any; color?: string } {\n    if (col.format) {\n      const formatRes = col.format(item, col, idx) || '';\n      if (formatRes && ~formatRes.indexOf('</')) {\n        return { text: formatRes, _text: this.dom.bypassSecurityTrustHtml(formatRes), org: formatRes };\n      }\n      return { text: formatRes, _text: formatRes, org: formatRes };\n    }\n\n    const value = deepGet(item, col.index as string[], col.default);\n\n    let text = value;\n    let color: string | undefined;\n    switch (col.type) {\n      case 'no':\n        text = this.getNoIndex(item, col, idx);\n        break;\n      case 'img':\n        text = value ? `<img src=\"${value}\" class=\"img\">` : '';\n        break;\n      case 'number':\n        text = this.numberPipe.transform(value, col.numberDigits);\n        break;\n      case 'currency':\n        text = this.currentyPipe.transform(value);\n        break;\n      case 'date':\n        text = value === col.default ? col.default : this.datePipe.transform(value, col.dateFormat);\n        break;\n      case 'yn':\n        text = this.ynPipe.transform(value === col.yn!.truth, col.yn!.yes!, col.yn!.no!, col.yn!.mode!, false);\n        break;\n      case 'tag':\n      case 'badge':\n        const data = col.type === 'tag' ? col.tag : col.badge;\n        if (data && data[text]) {\n          const dataItem = data[text];\n          text = dataItem.text;\n          color = dataItem.color;\n        } else {\n          text = '';\n        }\n        break;\n    }\n    if (text == null) text = '';\n    return { text, _text: this.dom.bypassSecurityTrustHtml(text), org: value, color };\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, paginator, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    const reName = req.reName as STReqReNameType;\n    if (paginator) {\n      if (req.type === 'page') {\n        params = {\n          [reName.pi as string]: page.zeroIndexed ? pi - 1 : pi,\n          [reName.ps as string]: ps,\n        };\n      } else {\n        params = {\n          [reName.skip as string]: (pi - 1) * ps,\n          [reName.limit as string]: ps,\n        };\n      }\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  optimizeData(options: { columns: STColumn[]; result: STData[]; rowClassName?: STRowClassName }): STData[] {\n    const { result, columns, rowClassName } = options;\n    for (let i = 0, len = result.length; i < len; i++) {\n      result[i]._values = columns.map(c => this.get(result[i], c, i));\n      if (rowClassName) {\n        result[i]._rowClassName = rowClassName(result[i], i);\n      }\n    }\n    return result;\n  }\n\n  getNoIndex(item: STData, col: STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex! + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: STColumn[]): STSortMap[] {\n    return columns.filter(item => item._sort && item._sort.enabled && item._sort.default).map(item => item._sort!);\n  }\n\n  private getSorterFn(columns: STColumn[]) {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    const sortItem = sortList[0];\n    if (sortItem.compare === null) {\n      return;\n    }\n    if (typeof sortItem.compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortItem.compare!(a, b);\n      if (result !== 0) {\n        return sortItem.default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(singleSort: STSingleSort | undefined, multiSort: STMultiSort | undefined, columns: STColumn[]): { [key: string]: string } {\n    let ret: { [key: string]: string } = {};\n    const sortList = this.getValidSort(columns);\n    if (!multiSort && sortList.length === 0) return ret;\n\n    if (multiSort) {\n      const ms = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        ...multiSort,\n      };\n\n      ret = {\n        [ms.key]: sortList\n          .sort((a, b) => a.tick - b.tick)\n          .map(item => item.key + ms.nameSeparator + ((item.reName || {})[item.default!] || item.default))\n          .join(ms.separator),\n      };\n      if (multiSort.keepEmptyKey === false && ret[ms.key].length === 0) {\n        ret = {};\n      }\n    } else {\n      const mapData = sortList[0];\n      let sortFiled = mapData.key;\n      let sortValue = (sortList[0].reName || {})[mapData.default!] || mapData.default;\n      if (singleSort) {\n        sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n        sortFiled = singleSort.key || 'sort';\n      }\n      ret[sortFiled as string] = sortValue as string;\n    }\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getFilteredData(filter: STColumnFilter) {\n    return filter.type === 'default' ? filter.menus!.filter(f => f.checked === true) : filter.menus!.slice(0, 1);\n  }\n\n  private getReqFilterMap(columns: STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const filter = col.filter!;\n        const values = this.getFilteredData(filter);\n        let obj: { [key: string]: NzSafeAny } = {};\n        if (filter.reName) {\n          obj = filter.reName!(filter.menus!, col);\n        } else {\n          obj[filter.key!] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res: { [key: string]: NzSafeAny } = {};\n    columns.forEach((col, index) => {\n      res[col.key ? col.key : index] = col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: undefined,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter((value, idx, self) => self.indexOf(value) === idx).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits!);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits!);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currentyPipe.transform(res.value) as string;\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STColumn, STExportOptions } from './st.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn, index: number): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col, index);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      switch (col.type) {\n        case 'currency':\n          ret.t = 'n';\n          break;\n        case 'date':\n          ret.t = 'd';\n          break;\n        case 'yn':\n          ret.v = ret.v === col.ynTruth ? col.ynYes || '是' : col.ynNo || '否';\n          break;\n      }\n    }\n\n    ret.v = ret.v || '';\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: { [key: string]: NzSafeAny } } = {};\n    const sheet: { [key: string]: NzSafeAny } = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt._c!.filter(w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0));\n    const cc = colData.length;\n    const dc = opt._d!.length;\n\n    // column\n    for (let i = 0; i < cc; i++) {\n      const tit = colData[i].title;\n      sheet[`${String.fromCharCode(i + 65)}1`] = {\n        t: 's',\n        v: typeof tit === 'object' ? tit.text : tit,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dc; i++) {\n      for (let j = 0; j < cc; j++) {\n        sheet[`${String.fromCharCode(j + 65)}${i + 2}`] = this._stGet(opt._d![i], colData[j], i);\n      }\n    }\n\n    if (cc > 0 && dc > 0) {\n      sheet['!ref'] = `A1:${String.fromCharCode(cc + 65 - 1)}${dc + 1}`;\n    }\n\n    return sheets;\n  }\n\n  export(opt: STExportOptions) {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { AlainSTConfig } from '@delon/util';\n\nexport const ST_DEFULAT_CONFIG: AlainSTConfig = {\n  pi: 1,\n  ps: 10,\n  size: 'default',\n  responsive: true,\n  responsiveHideHeaderFooter: false,\n  req: {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    lazyLoad: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  },\n  res: {\n    reName: { list: ['list'], total: ['total'] },\n  },\n  page: {\n    front: true,\n    zeroIndexed: false,\n    position: 'bottom',\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    toTop: true,\n    toTopOffset: 100,\n  },\n  modal: {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  },\n  drawer: {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  },\n  pop: {\n    title: '确认删除吗？',\n    trigger: 'click',\n    placement: 'top',\n  },\n  rowClickTime: 200,\n  btnIcon: {\n    type: '',\n    theme: 'outline',\n    spin: false,\n  },\n  noIndex: 1,\n  expandRowByClick: false,\n  expandAccordion: false,\n  widthMode: {\n    type: 'default',\n    strictBehavior: 'truncate',\n  },\n  virtualItemSize: 54,\n  virtualMaxBufferPx: 200,\n  virtualMinBufferPx: 100,\n  iifBehavior: 'hide',\n};\n","import { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  CNCurrencyPipe,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport { AlainConfigService, AlainSTConfig, deepMergeKey, InputBoolean, InputNumber, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableComponent, NzTableData } from 'ng-zorro-antd/table';\nimport { from, Observable, of, Subject, Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { STColumnSource } from './st-column-source';\nimport { STDataSource, STDataSourceOptions, STDataSourceResult } from './st-data-source';\nimport { STExport } from './st-export';\nimport { STRowSource } from './st-row.directive';\nimport { ST_DEFULAT_CONFIG } from './st.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu,\n  STColumnSelection,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STResetColumnsOption,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n} from './st.interfaces';\n\n@Component({\n  selector: 'st',\n  exportAs: 'st',\n  templateUrl: './st.component.html',\n  providers: [STDataSource, STRowSource, STColumnSource, STExport, CNCurrencyPipe, DatePipe, YNPipe, DecimalPipe],\n  host: {\n    '[class.st]': `true`,\n    '[class.st__p-left]': `page.placement === 'left'`,\n    '[class.st__p-center]': `page.placement === 'center'`,\n    '[class.st__width-strict]': `widthMode.type === 'strict'`,\n    '[class.ant-table-rep]': `responsive`,\n    '[class.ant-table-rep__hide-header-footer]': `responsiveHideHeaderFooter`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private data$: Subscription;\n  private totalTpl = ``;\n  private cog: AlainSTConfig;\n  private rowClickCount = 0;\n  private _req: STReq;\n  private _res: STRes;\n  private _page: STPage;\n  private _widthMode: STWidthMode;\n  locale: LocaleData = {};\n  _loading = false;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _headers: STColumn[][] = [];\n  _columns: STColumn[] = [];\n  @ViewChild('table', { static: false }) readonly orgTable: NzTableComponent;\n\n  @Input()\n  get req() {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMergeKey({}, true, this.cog.req, value);\n  }\n  /** 返回体配置 */\n  @Input()\n  get res() {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = (this._res = deepMergeKey({}, true, this.cog.res, value));\n    const reName = item.reName!;\n    if (!Array.isArray(reName.list)) reName.list = reName.list!.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total!.split('.');\n    this._res = item;\n  }\n  @Input()\n  get page() {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this._page = { ...this.cog.page, ...value };\n    this.updateTotalTpl();\n  }\n  @Input() data: string | STData[] | Observable<STData[]>;\n  @Input() columns: STColumn[] = [];\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  @Input() loading: boolean | null = null;\n  @Input() @InputNumber() loadingDelay = 0;\n  @Input() loadingIndicator: TemplateRef<void>;\n  @Input() @InputBoolean() bordered = false;\n  @Input() size: 'small' | 'middle' | 'default';\n  @Input() scroll: { y?: string; x?: string };\n  @Input() singleSort: STSingleSort;\n  private _multiSort?: STMultiSort;\n  @Input()\n  get multiSort() {\n    return this._multiSort;\n  }\n  set multiSort(value: NzSafeAny) {\n    if (typeof value === 'boolean' && !toBoolean(value)) {\n      this._multiSort = undefined;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { ...this.cog.widthMode, ...value };\n  }\n  get widthMode() {\n    return this._widthMode;\n  }\n  @Input() header: string | TemplateRef<void>;\n  @Input() footer: string | TemplateRef<void>;\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  @Input() @InputBoolean() expandAccordion = false;\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() widthConfig: string[];\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsive: boolean = true;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  // tslint:disable-next-line:no-output-native\n  @Output() readonly error = new EventEmitter<STError>();\n  // tslint:disable-next-line:no-output-native\n  @Output() readonly change = new EventEmitter<STChange>();\n  @Input() @InputBoolean() virtualScroll = false;\n  @Input() @InputNumber() virtualItemSize = 54;\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\n  @Input() @InputNumber() virtualMinBufferPx = 100;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n\n  /**\n   * Get the number of the current page\n   */\n  get count(): number {\n    return this._data.length;\n  }\n\n  /**\n   * Get the data of the current page\n   */\n  get list(): STData[] {\n    return this._data;\n  }\n\n  private get routerState() {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private el: ElementRef,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n    configSrv: AlainConfigService,\n  ) {\n    this.setCog(configSrv.merge<AlainSTConfig, 'st'>('st', ST_DEFULAT_CONFIG));\n\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.updateTotalTpl();\n        this.cd();\n      }\n    });\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  private setCog(cog: AlainSTConfig): void {\n    const copyMultiSort = { ...cog.multiSort };\n    // Because multiSort.global will affect the result, it should be removed first, and multiSort will be operated again after processing.\n    delete cog.multiSort;\n    this.cog = cog;\n    Object.assign(this, cog);\n\n    if (copyMultiSort.global !== false) {\n      this.multiSort = copyMultiSort;\n    }\n    this.columnSource.setCog(cog);\n  }\n\n  cd() {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]) {\n    return this.totalTpl\n      ? this.totalTpl.replace('{{total}}', total).replace('{{range[0]}}', range[0]).replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  isTruncate(column: STColumn): boolean {\n    return !!column.width && this.widthMode.strictBehavior === 'truncate' && column.type !== 'img';\n  }\n\n  columnClass(column: STColumn): string | null {\n    return column.className || (this.isTruncate(column) ? 'text-truncate' : null);\n  }\n\n  private changeEmit(type: STChangeType, data?: any) {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  // #region data\n\n  /**\n   * 获取过滤后所有数据\n   * - 本地数据：包含排序、过滤后不分页数据\n   * - 远程数据：不传递 `pi`、`ps` 两个参数\n   */\n  get filteredData(): Promise<STData[]> {\n    return this.loadData({ paginator: false } as any).then(res => res.list);\n  }\n\n  private updateTotalTpl(): void {\n    const { total } = this.page;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n  }\n\n  private setLoading(val: boolean): void {\n    if (this.loading == null) {\n      this._loading = val;\n      this.cdr.detectChanges();\n    }\n  }\n\n  private loadData(options?: STDataSourceOptions): Promise<STDataSourceResult> {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    return new Promise((resolvePromise, rejectPromise) => {\n      if (this.data$) {\n        this.data$.unsubscribe();\n      }\n\n      this.data$ = this.dataSource\n        .process({\n          pi,\n          ps,\n          total,\n          data,\n          req,\n          res,\n          page,\n          columns: this._columns,\n          singleSort,\n          multiSort,\n          rowClassName,\n          paginator: true,\n          ...options,\n        })\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          result => resolvePromise(result),\n          error => {\n            console.warn('st.loadDate', error);\n            rejectPromise(error);\n          },\n        );\n    });\n  }\n\n  private async loadPageData(): Promise<this> {\n    this.setLoading(true);\n    try {\n      const result = await this.loadData();\n      this.setLoading(false);\n      if (typeof result.pi !== 'undefined') {\n        this.pi = result.pi;\n      }\n      if (typeof result.ps !== 'undefined') {\n        this.ps = result.ps;\n      }\n      if (typeof result.total !== 'undefined') {\n        this.total = result.total;\n      }\n      if (typeof result.pageShow !== 'undefined') {\n        this._isPagination = result.pageShow;\n      }\n      this._data = result.list as STData[];\n      this._statistical = result.statistical as STStatisticalResults;\n      this.changeEmit('loaded', result.list);\n      return this._refCheck();\n    } catch (error) {\n      this.setLoading(false);\n      if (!this.unsubscribe$.isStopped) {\n        this.cdr.detectChanges();\n        this.error.emit({ type: 'req', error });\n      }\n      return this;\n    }\n  }\n\n  /** 清空所有数据 */\n  clear(cleanStatus = true): this {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** 清空所有状态 */\n  clearStatus(): this {\n    return this.clearCheck().clearRadio().clearFilter().clearSort();\n  }\n\n  /**\n   * 根据页码重新加载数据\n   *\n   * @param pi 指定当前页码，默认：`1`\n   * @param extraParams 重新指定 `extraParams` 值\n   * @param options 选项\n   */\n  load(pi = 1, extraParams?: {}, options?: STLoadOptions) {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this.req.params = options && options.merge ? { ...this.req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi', options);\n    return this;\n  }\n\n  /**\n   * 重新刷新当前页\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reload(extraParams?: {}, options?: STLoadOptions) {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * 重置且重新设置 `pi` 为 `1`，包含以下值：\n   * - `check` 数据\n   * - `radio` 数据\n   * - `sort` 数据\n   * - `fileter` 数据\n   *\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reset(extraParams?: {}, options?: STLoadOptions) {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop(enforce?: boolean) {\n    if (!(enforce == null ? this.page.toTop : enforce)) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      el.querySelector('.ant-table-body')!.scrollTo(0, 0);\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset!;\n  }\n\n  _change(type: 'pi' | 'ps', options?: STLoadOptions) {\n    if (type === 'pi' || (type === 'ps' && this.pi <= Math.ceil(this.total / this.ps))) {\n      this.loadPageData().then(() => this._toTop(options?.toTop));\n    }\n\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn) {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click!(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n  private closeOtherExpand(item: STData) {\n    if (this.expandAccordion === false) return;\n    this._data.filter(i => i !== item).forEach(i => (i.expand = false));\n  }\n  _rowClick(e: Event, item: STData, index: number) {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && item.showExpand !== false && expandRowByClick) {\n      item.expand = !item.expand;\n      this.closeOtherExpand(item);\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData, expand: boolean): void {\n    if (this.expandRowByClick) {\n      return;\n    }\n    item.expand = expand;\n    this.closeOtherExpand(item);\n    this.changeEmit('expand', item);\n  }\n\n  /**\n   * Remove a row in the table, like this:\n   *\n   * ```\n   * this.st.removeRow(0)\n   * this.st.removeRow(stDataItem)\n   * ```\n   */\n  removeRow(data: STData | STData[] | number) {\n    if (typeof data === 'number') {\n      this._data.splice(data, 1);\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      (data as STData[])\n        .map(item => this._data.indexOf(item))\n        .filter(pos => pos !== -1)\n        .forEach(pos => this._data.splice(pos, 1));\n    }\n    // recalculate no\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c => this._data.forEach((i, idx) => (i._values[c.__point] = { text: this.dataSource.getNoIndex(i, c, idx), org: idx })));\n\n    return this.cd();\n  }\n\n  /**\n   * Sets the row value for the `index` in the table, like this:\n   *\n   * - `optinos.refreshSchema` Whether to refresh of st schemas\n   * - `optinos.emitReload` Whether to trigger a reload http request when data is url\n   *\n   * ```\n   * this.st.setRow(0, { price: 100 })\n   * this.st.setRow(0, { price: 100, name: 'asdf' })\n   * ```\n   */\n  setRow(index: number, item: STData, options?: { refreshSchema?: boolean; emitReload?: boolean }): this {\n    options = { refreshSchema: false, emitReload: false, ...options };\n    this._data[index] = deepMergeKey(this._data[index], false, item);\n    this._data = this.dataSource.optimizeData({ columns: this._columns, result: this._data, rowClassName: this.rowClassName });\n    if (options.refreshSchema) {\n      this.resetColumns({ emitReload: options.emitReload });\n      return this;\n    }\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: STColumn, idx: number, value: any) {\n    if (this.multiSort) {\n      col._sort!.default = value;\n      col._sort!.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort!.default = index === idx ? value : null));\n    }\n    this.loadPageData();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort() {\n    this._columns.forEach(item => (item._sort!.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn) {\n    this.columnSource.updateDefault(col.filter!);\n    this.loadPageData();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: STColumn) {\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: STColumn, item: STColumnFilterMenu, checked: boolean) {\n    col.filter!.menus!.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  _filterClear(col: STColumn) {\n    this.columnSource.cleanFilter(col);\n    this.handleFilter(col);\n  }\n\n  clearFilter() {\n    this._columns.filter(w => w.filter && w.filter.default === true).forEach(col => this.columnSource.cleanFilter(col));\n    return this;\n  }\n\n  // #endregion\n\n  // #region checkbox\n\n  /** 清除所有 `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    return this.cd();\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean) {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** 清除所有 `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(record: STData, btn: STColumnButton, e?: Event) {\n    // should be stop propagation when expandRowByClick is true\n    if (e && this.expandRowByClick === true) {\n      e.stopPropagation();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal!.paramsName!]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal!.component,\n        { ...obj, ...(modal!.params && modal!.params!(record)) },\n        deepMergeKey({}, true, this.cog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe((res: NzSafeAny) => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer!.paramsName!]: record };\n      this.drawerHelper\n        .create(\n          drawer!.title!,\n          drawer!.component,\n          { ...obj, ...(drawer!.params && drawer!.params!(record)) },\n          deepMergeKey({}, true, this.cog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any) {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton) {\n    return typeof btn.text === 'function' ? btn.text(record, btn) : btn.text || '';\n  }\n\n  _validBtns(btns: STColumnButton[], item: STData, col: STColumn): STColumnButton[] {\n    return btns.filter(btn => {\n      const result = btn.iif!(item, btn, col);\n      const isRenderDisabled = btn.iifBehavior === 'disabled';\n      btn._result = result;\n      btn._disabled = !result && isRenderDisabled;\n      return result || isRenderDisabled;\n    });\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * 导出当前页，确保已经注册 `XlsxModule`\n   * @param newData 重新指定数据；若为 `true` 表示使用 `filteredData` 数据\n   * @param opt 额外参数\n   */\n  export(newData?: STData[] | true, opt?: STExportOptions) {\n    (newData === true ? from(this.filteredData) : of(newData || this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        _d: res,\n        _c: this._columns,\n      }),\n    );\n  }\n\n  // #endregion\n\n  get cdkVirtualScrollViewport() {\n    return this.orgTable.cdkVirtualScrollViewport;\n  }\n\n  resetColumns(options?: STResetColumnsOption): Promise<this> {\n    options = { emitReload: true, ...options };\n    if (typeof options.columns !== 'undefined') {\n      this.columns = options.columns;\n    }\n    if (typeof options.pi !== 'undefined') {\n      this.pi = options.pi;\n    }\n    if (typeof options.ps !== 'undefined') {\n      this.ps = options.ps;\n    }\n    this.refreshColumns();\n    if (options.emitReload === true) {\n      return this.loadPageData();\n    } else {\n      this.cd();\n      return Promise.resolve(this);\n    }\n  }\n\n  private refreshColumns(): this {\n    const res = this.columnSource.process(this.columns);\n    this._columns = res.columns;\n    this._headers = res.headers;\n    return this;\n  }\n\n  ngAfterViewInit() {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns();\n    }\n    const changeData = changes.data;\n    if (changeData && changeData.currentValue && !(this.req.lazyLoad && changeData.firstChange)) {\n      this.loadPageData();\n    }\n    if (changes.loading) {\n      this._loading = changes.loading.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STData } from './st.interfaces';\n\n@Directive({ selector: '[st-widget-host]' })\nexport class STWidgetHostDirective implements OnInit {\n  @Input() record: STData;\n  @Input() column: STColumn;\n\n  constructor(\n    private stWidgetRegistry: STWidgetRegistry,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    const widget = this.column.widget!;\n    const componentType = this.stWidgetRegistry.get(widget.type);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType as any);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    const { record, column } = this;\n    const data: { [key: string]: any } = widget.params ? widget.params({ record, column }) : { record };\n    Object.keys(data).forEach(key => {\n      (componentRef.instance as any)[key] = data[key];\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonACLModule } from '@delon/acl';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { STRowDirective } from './st-row.directive';\nimport { STWidgetHostDirective } from './st-widget-host.directive';\nimport { STComponent } from './st.component';\n\nconst COMPONENTS = [STComponent];\nconst DIRECTIVES = [STRowDirective, STWidgetHostDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DelonUtilModule,\n    DelonACLModule,\n    NzPopconfirmModule,\n    NzTableModule,\n    NzIconModule,\n    NzBadgeModule,\n    NzCheckboxModule,\n    NzDividerModule,\n    NzDropDownModule,\n    NzMenuModule,\n    NzRadioModule,\n    NzTagModule,\n    NzInputModule,\n    NzToolTipModule,\n  ],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class STModule {}\n"]}