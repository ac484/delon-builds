{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../packages/abc/st/st-row.directive.ts","../../../../packages/abc/st/st-widget.ts","../../../../packages/abc/st/st-column-source.ts","../../../../packages/abc/st/st-data-source.ts","../../../../packages/abc/st/st-export.ts","../../../../packages/abc/st/st-widget-host.directive.ts","../../../../packages/abc/st/st.config.ts","../../../../packages/abc/st/st.component.ts","../../../../packages/abc/st/st.component.html","../../../../packages/abc/st/st.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","create","__values","o","s","m","__read","ar","error","__spread","concat","STRowSource","titles","rows","prototype","add","type","path","ref","getTitle","getRow","factory","ɵfac","Injectable","STRowDirective","source","ngOnInit","id","i0","ɵɵdirectiveInject","TemplateRef","selector","inputs","ngImport","i0__namespace","Directive","Host","Input","STWidgetRegistry","_widgets","register","widget","has","hasOwnProperty","get","providedIn","STColumnSource","dom","rowSource","acl","i18nSrv","stWidgetRegistry","setCog","val","cog","fixPop","def","assign","title","condition","btnCoerce","list","ret","_c","modal","drawer","btnIcon","list_1","list_1_1","item","can","component","console","warn","paramsName","size","icon","children","i18n","text","fanyi","btnCoerceIf","list_2","list_2_1","iif","iifBehavior","fixedCoerce","countReduce","a","b","width","toString","replace","filter","w","fixed","forEach","idx","_left","slice","reduce","reverse","_right","sortCoerce","res","fixSortCoerce","reName","sortReName","sort","enabled","compare","indexKey","filterCoerce","_this","iconTheme","menus","multiple","confirmText","filterConfirmText","clearText","filterClearText","baseIcon","theme","updateDefault","restoreRender","renderTitle","__renderTitle","render","__render","widgetCoerce","_a","genHeaders","rootColumns","widths","fillRowCells","columns","colIndex","rowIndex","currentColIndex","map","column","cell","colStart","hasSubColumns","colSpan","subColumns","Array","isArray","total","count","rowSpan","colEnd","rowCount","headers","headerWidths","cleanCond","copyList","deepCopy","copyList_1","copyList_1_1","process","options","Error","noIndex","checkboxCount","radioCount","point","processItem","index","split","join","tit","_text","bypassSecurityTrustHtml","selections","yn","truth","click","badge","tag","enum","_isTruncate","widthMode","strictBehavior","className","number","currency","date","_className","_sort","buttons","resizable","disabled","bounds","minWidth","maxWidth","preview","__point","processList","data","data_1","data_1_1","restoreAllRender","default","findIndex","checked","cleanFilter","col","undefined","ɵɵinject","i1","DomSanitizer","i3","ACLService","ALAIN_I18N_TOKEN","Optional","Inject","STDataSource","http","currentyPipe","datePipe","ynPipe","numberPipe","sortTick","data$","retTotal","retPs","retList","retPi","rawData","isRemote","page","pi","ps","paginator","showPage","show","getByHttp","pipe","deepGet","resultTotal","of","copyResult","sorterFn","getSorterFn","values","getFilteredData","onFilter","fn","record","some","front","maxPageIndex","Math","ceil","max","optimizeData","rowClassName","realTotal","realPs","statistical","genStatistical","pageShow","format","formatRes","indexOf","org","color","getNoIndex","transform","numberDigits","dateFormat","yes","no","mode","dataItem","ex","url","req","singleSort","multiSort","method","toUpperCase","params","zeroIndexed","_b","skip","limit","reqOptions","getReqSortMap","getReqFilterMap","allInBody","HttpParams","fromObject","request","len","_values","_rowClassName","getValidSort","sortList","sortItem","ms_1","separator","nameSeparator","keepEmptyKey","arrayParam","sortMap","tick","mapData","sortFiled","sortValue","obj","getStatistical","digits","getValues","self","toFixed","getSum","min","String","isNaN","isFinite","parseFloat","p","i1$1","_HttpClient","CNCurrencyPipe","DatePipe","YNPipe","i1$2","DecimalPipe","STExport","xlsxSrv","_stGet","genSheet","opt","sheets","sheet","sheetname","colData","columens","exported","colLen","dataLen","numberToSchema","j","export","filename","callback","i1$3","XlsxService","STWidgetHostDirective","viewContainerRef","componentFactoryResolver","componentType","componentFactory","resolveComponentFactory","clear","componentRef","createComponent","keys","instance","ViewContainerRef","ComponentFactoryResolver","ST_DEFULAT_CONFIG","responsive","responsiveHideHeaderFooter","lazyLoad","position","placement","showSize","pageSizes","showQuickJumper","toTop","toTopOffset","itemRender","simple","exact","footer","footerHeight","trigger","rowClickTime","spin","expandRowByClick","expandAccordion","virtualItemSize","virtualMaxBufferPx","virtualMinBufferPx","loadingDelay","STComponent","cdr","router","el","exportSrv","modalHelper","drawerHelper","doc","columnSource","dataSource","delonI18n","configSrv","unsubscribe$","Subject","totalTpl","rowClickCount","customWidthConfig","_widthConfig","locale","_loading","_data","_statistical","_isPagination","_allChecked","_allCheckedDisabled","_indeterminate","_headers","_columns","loading","bordered","EventEmitter","change","virtualScroll","virtualForTrackBy","merge","takeUntil","subscribe","getData","updateTotalTpl","cd","refreshColumns","_req","deepMergeKey","_res","_page","_multiSort","toBoolean","_widthMode","_resizable","copyMultiSort","global","detectChanges","renderTotal","range","changeEmit","emit","loadData","setLoading","resolvePromise","rejectPromise","unsubscribe","loadPageData","cdkVirtualScrollViewport","checkViewportSize","_refCheck","isStopped","error_1","cleanStatus","clearStatus","clearCheck","clearRadio","clearFilter","clearSort","load","extraParams","_change","reload","reset","_toTop","enforce","nativeElement","scroll","scrollTo","top","left","querySelector","scrollIntoView","documentElement","scrollTop","_click","preventDefault","stopPropagation","navigateByUrl","state","routerState","closeOtherExpand","expand","_rowClick","nodeName","showExpand","setTimeout","_expandChange","removeRow","splice","pos","setRow","refreshSchema","emitReload","resetColumns","nextSortTick","handleFilter","_filterConfirm","_filterRadio","_filterClear","_filterClick","$event","_checkAll","validData","checkedList","allUnChecked","every","_checkNotify","_checkSelection","_rowSelection","row","select","_refRadio","_btnClick","btn","btnCallback","clickRes","_btnText","_validBtns","btns","isRenderDisabled","_result","_disabled","newData","from","filteredData","colResize","orgTable","preClearData","pureItem","itemOrIndex","copyItem","ngAfterViewInit","ngOnChanges","changes","changeData","currentValue","firstChange","ngOnDestroy","complete","ChangeDetectorRef","i1$4","Router","ElementRef","ModalHelper","DrawerHelper","DOCUMENT","DelonLocaleService","i6","AlainConfigService","loadingIndicator","widthConfig","header","bodyHeader","noResult","outputs","host","properties","class.st","class.st__p-left","class.st__p-center","class.st__width-strict","class.ant-table-rep","class.ant-table-rep__hide-header-footer","providers","viewQueries","propertyName","first","predicate","emitDistinctChangesOnly","descendants","exportAs","usesOnChanges","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","InputNumber","InputBoolean","Component","templateUrl","[class.st]","[class.st__p-left]","[class.st__p-center]","[class.st__width-strict]","[class.ant-table-rep]","[class.ant-table-rep__hide-header-footer]","preserveWhitespaces","ViewChild","static","Output","COMPONENTS","DIRECTIVES","STModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonACLModule","NzPopconfirmModule","NzTableModule","NzIconModule","NzBadgeModule","NzCheckboxModule","NzDividerModule","NzDropDownModule","NzMenuModule","NzRadioModule","NzTagModule","NzInputModule","NzToolTipModule","NzResizableModule","declarations","exports","NgModule","NgIf","NgTemplateOutlet","i2","NzTooltipDirective","i3$1","NzPopconfirmDirective","NgClass","i4","NzIconDirective","i5","NzCheckboxComponent","i6$1","NgControlStatus","NgModel","i7","NzTableComponent","NzTheadComponent","NgForOf","NzTrDirective","NzTableCellDirective","NzThMeasureDirective","NzCellFixedDirective","NzThAddOnComponent","i8","NzResizableDirective","NzResizeHandleComponent","NgSwitch","NgSwitchCase","i9","NzDropDownDirective","NzDropdownMenuComponent","i10","NzMenuDirective","NzMenuItemDirective","NgSwitchDefault","i11","NzInputDirective","DefaultValueAccessor","i12","NzRadioComponent","NzTbodyComponent","NzTdAddOnComponent","i13","NzTagComponent","i14","NzBadgeComponent","NzDropDownADirective","NzMenuDividerDirective","i15","NzDividerComponent","NzTrExpandDirective","NzTableFixedRowComponent","NzTableVirtualScrollDirective"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>): void {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string): TemplateRef<void> {\n    return this.titles[path];\n  }\n\n  getRow(path: string): TemplateRef<void> {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row') id: string;\n\n  @Input() type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class STWidgetRegistry {\n  private _widgets: { [type: string]: any } = {};\n\n  get widgets(): any {\n    return this._widgets;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  get(type: string): any {\n    return this._widgets[type];\n  }\n}\n","import { Host, Inject, Injectable, Optional, TemplateRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { AlainSTConfig, deepCopy, warn } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STRowSource } from './st-row.directive';\nimport { STWidgetRegistry } from './st-widget';\nimport {\n  STColumn,\n  STColumnButton,\n  STColumnButtonPop,\n  STColumnFilter,\n  STColumnGroupType,\n  STIcon,\n  STResizable,\n  STSortMap,\n  STWidthMode,\n} from './st.interfaces';\nimport { _STColumn } from './st.types';\n\nexport interface STColumnSourceProcessOptions {\n  widthMode: STWidthMode;\n  resizable: STResizable;\n}\n\n@Injectable()\nexport class STColumnSource {\n  private cog: AlainSTConfig;\n\n  constructor(\n    private dom: DomSanitizer,\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private stWidgetRegistry: STWidgetRegistry,\n  ) {}\n\n  setCog(val: AlainSTConfig): void {\n    this.cog = val;\n  }\n\n  private fixPop(i: STColumnButton, def: STColumnButtonPop): void {\n    if (i.pop == null || i.pop === false) {\n      i.pop = false;\n      return;\n    }\n\n    let pop = {\n      ...def,\n    };\n    if (typeof i.pop === 'string') {\n      pop.title = i.pop;\n    } else if (typeof i.pop === 'object') {\n      pop = {\n        ...pop,\n        ...i.pop,\n      };\n    }\n\n    if (typeof pop.condition !== 'function') {\n      pop.condition = () => false;\n    }\n\n    i.pop = pop;\n  }\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, pop, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter when type is modal or static`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter when type is drawer`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      // pop\n      this.fixPop(item, pop!);\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children = item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]): void {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      item.iifBehavior = item.iifBehavior || this.cog.iifBehavior;\n      if (item.children && item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      } else {\n        item.children = [];\n      }\n    }\n  }\n\n  private fixedCoerce(list: _STColumn[]): void {\n    const countReduce = (a: number, b: _STColumn) => a + +b.width!.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach((item, idx) => (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'));\n  }\n\n  private sortCoerce(item: _STColumn): STSortMap {\n    const res = this.fixSortCoerce(item);\n    res.reName = {\n      ...this.cog.sortReName,\n      ...res.reName,\n    };\n    return res;\n  }\n\n  private fixSortCoerce(item: _STColumn): STSortMap {\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    } else if (typeof item.sort === 'boolean') {\n      res.compare = (a, b) => a[item.indexKey!] - b[item.indexKey!];\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: _STColumn): STColumnFilter | null {\n    if (item.filter == null) {\n      return null;\n    }\n\n    let res: STColumnFilter | null = item.filter;\n    res.type = res.type || 'default';\n\n    let icon = 'filter';\n    let iconTheme = 'fill';\n    if (res.type === 'keyword') {\n      if (res.menus == null || res.menus!.length === 0) {\n        res.menus = [{ value: '' }];\n      }\n      icon = 'search';\n      iconTheme = 'outline';\n    }\n\n    if (res.menus!.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n\n    res.confirmText = res.confirmText || this.cog.filterConfirmText;\n    res.clearText = res.clearText || this.cog.filterClearText;\n    res.key = res.key || item.indexKey;\n    res.icon = res.icon || icon;\n\n    const baseIcon = { type: icon, theme: iconTheme } as STIcon;\n    if (typeof res.icon === 'string') {\n      res.icon = { ...baseIcon, type: res.icon } as STIcon;\n    } else {\n      res.icon = { ...baseIcon, ...res.icon };\n    }\n\n    this.updateDefault(res);\n\n    if (this.acl) {\n      res.menus = res.menus!.filter(w => this.acl.can(w.acl!));\n    }\n\n    if (res.menus!.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: _STColumn): void {\n    if (item.renderTitle) {\n      item.__renderTitle =\n        typeof item.renderTitle === 'string' ? this.rowSource.getTitle(item.renderTitle) : (item.renderTitle as TemplateRef<void>);\n    }\n    if (item.render) {\n      item.__render = typeof item.render === 'string' ? this.rowSource.getRow(item.render) : (item.render as TemplateRef<void>);\n    }\n  }\n\n  private widgetCoerce(item: _STColumn): void {\n    if (item.type !== 'widget') return;\n    if (item.widget == null || !this.stWidgetRegistry.has(item.widget.type)) {\n      delete item.type;\n      warn(`st: No widget for type \"${item.widget?.type}\"`);\n    }\n  }\n\n  private genHeaders(rootColumns: _STColumn[]): { headers: _STColumn[][]; headerWidths: string[] | null } {\n    const rows: _STColumn[][] = [];\n    const widths: string[] = [];\n    const fillRowCells = (columns: _STColumn[], colIndex: number, rowIndex = 0): number[] => {\n      // Init rows\n      rows[rowIndex] = rows[rowIndex] || [];\n\n      let currentColIndex = colIndex;\n      const colSpans: number[] = columns.map(column => {\n        const cell: STColumnGroupType = {\n          column,\n          colStart: currentColIndex,\n          hasSubColumns: false,\n        };\n\n        let colSpan: number = 1;\n\n        const subColumns = column.children;\n        if (Array.isArray(subColumns) && subColumns.length > 0) {\n          colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n          cell.hasSubColumns = true;\n        } else {\n          widths.push((cell.column.width as string) || '');\n        }\n\n        if ('colSpan' in column) {\n          colSpan = column.colSpan!;\n        }\n\n        if ('rowSpan' in column) {\n          cell.rowSpan = column.rowSpan;\n        }\n\n        cell.colSpan = colSpan;\n        cell.colEnd = cell.colStart + colSpan - 1;\n        rows[rowIndex].push(cell as NzSafeAny);\n\n        currentColIndex += colSpan;\n\n        return colSpan;\n      });\n\n      return colSpans;\n    };\n\n    fillRowCells(rootColumns, 0);\n\n    // Handle `rowSpan`\n    const rowCount = rows.length;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      rows[rowIndex].forEach(cell => {\n        if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n          cell.rowSpan = rowCount - rowIndex;\n        }\n      });\n    }\n\n    return { headers: rows, headerWidths: rowCount > 1 ? widths : null };\n  }\n\n  private cleanCond(list: _STColumn[]): _STColumn[] {\n    const res: _STColumn[] = [];\n    const copyList = deepCopy(list);\n    for (const item of copyList) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      res.push(item);\n    }\n    return res;\n  }\n\n  process(\n    list: STColumn[],\n    options: STColumnSourceProcessOptions,\n  ): { columns: _STColumn[]; headers: _STColumn[][]; headerWidths: string[] | null } {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: _STColumn[] = [];\n\n    const processItem = (item: _STColumn): _STColumn => {\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n\n      // #region title\n\n      const tit = (typeof item.title === 'string' ? { text: item.title } : item.title) || {};\n      if (tit.i18n && this.i18nSrv) {\n        tit.text = this.i18nSrv.fanyi(tit.i18n);\n      }\n      if (tit.text) {\n        tit._text = this.dom.bypassSecurityTrustHtml(tit.text);\n      }\n      item.title = tit;\n\n      // #endregion\n\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl!));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null) ||\n        (item.type === 'enum' && item.enum == null)\n      ) {\n        item.type = '';\n      }\n      item._isTruncate = !!item.width && options.widthMode.strictBehavior === 'truncate' && item.type !== 'img';\n      // className\n      if (!item.className) {\n        item.className = ({\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        } as NzSafeAny)[item.type!];\n      }\n      item._className = item.className || (item._isTruncate ? 'text-truncate' : null);\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item) as STColumnFilter;\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons!);\n      // widget\n      this.widgetCoerce(item);\n      // restore custom row\n      this.restoreRender(item);\n      // resizable\n      item.resizable = {\n        disabled: true,\n        bounds: 'window',\n        minWidth: 60,\n        maxWidth: 360,\n        preview: true,\n        ...options.resizable,\n        ...(typeof item.resizable === 'boolean' ? ({ disabled: !item.resizable } as STResizable) : item.resizable),\n      };\n\n      item.__point = point++;\n\n      return item;\n    };\n\n    const processList = (data: _STColumn[]): void => {\n      for (const item of data) {\n        columns.push(processItem(item));\n        if (Array.isArray(item.children)) {\n          processList(item.children);\n        }\n      }\n    };\n\n    const copyList = this.cleanCond(list as _STColumn[]);\n    processList(copyList);\n\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns as _STColumn[]);\n    return { columns: columns.filter(w => !Array.isArray(w.children) || w.children.length === 0), ...this.genHeaders(copyList) };\n  }\n\n  restoreAllRender(columns: _STColumn[]): void {\n    columns.forEach(i => this.restoreRender(i));\n  }\n\n  updateDefault(filter: STColumnFilter): this {\n    if (filter.type === 'default') {\n      filter.default = filter.menus!.findIndex(w => w.checked!) !== -1;\n    } else {\n      filter.default = !!filter.menus![0].value;\n    }\n    return this;\n  }\n\n  cleanFilter(col: _STColumn): this {\n    const f = col.filter!;\n    f.default = false;\n    if (f.type === 'default') {\n      f.menus!.forEach(i => (i.checked = false));\n    } else {\n      f.menus![0].value = undefined;\n    }\n    return this;\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CNCurrencyPipe, DatePipe, YNPipe, _HttpClient } from '@delon/theme';\nimport { deepCopy, deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  STColumnFilter,\n  STColumnFilterMenu,\n  STData,\n  STMultiSort,\n  STMultiSortResultType,\n  STPage,\n  STReq,\n  STReqReNameType,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STSortMap,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './st.interfaces';\nimport { _STColumn } from './st.types';\n\nexport interface STDataSourceOptions {\n  pi: number;\n  ps: number;\n  paginator: boolean;\n  data: string | STData[] | Observable<STData[]>;\n  total: number;\n  req: STReq;\n  res: STRes;\n  page: STPage;\n  columns: _STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** 是否需要显示分页器 */\n  pageShow: boolean;\n  /** 新 `pi`，若返回 `undefined` 表示用户受控 */\n  pi: number;\n  /** 新 `ps`，若返回 `undefined` 表示用户受控 */\n  ps: number;\n  /** 新 `total`，若返回 `undefined` 表示用户受控 */\n  total: number;\n  /** 数据 */\n  list: STData[];\n  /** 统计数据 */\n  statistical: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private currentyPipe: CNCurrencyPipe,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Observable<STDataSourceResult> {\n    let data$: Observable<STData[]>;\n    let isRemote = false;\n    const { data, res, total, page, pi, ps, paginator, columns } = options;\n    let retTotal: number;\n    let retPs: number;\n    let retList: STData[];\n    let retPi: number;\n    let rawData: any;\n    let showPage = page.show;\n\n    if (typeof data === 'string') {\n      isRemote = true;\n      data$ = this.getByHttp(data, options).pipe(\n        map(result => {\n          rawData = result;\n          let ret: STData[];\n          if (Array.isArray(result)) {\n            ret = result;\n            retTotal = ret.length;\n            retPs = retTotal;\n            showPage = false;\n          } else {\n            // list\n            ret = deepGet(result, res.reName!.list as string[], []);\n            if (ret == null || !Array.isArray(ret)) {\n              ret = [];\n            }\n            // total\n            const resultTotal = res.reName!.total && deepGet(result, res.reName!.total as string[], null);\n            retTotal = resultTotal == null ? total || 0 : +resultTotal;\n          }\n          return deepCopy(ret);\n        }),\n      );\n    } else if (Array.isArray(data)) {\n      data$ = of(data);\n    } else {\n      // a cold observable\n      data$ = data;\n    }\n\n    if (!isRemote) {\n      data$ = data$.pipe(\n        // sort\n        map((result: STData[]) => {\n          rawData = result;\n          let copyResult = deepCopy(result);\n          const sorterFn = this.getSorterFn(columns as _STColumn[]);\n          if (sorterFn) {\n            copyResult = copyResult.sort(sorterFn);\n          }\n          return copyResult;\n        }),\n        // filter\n        map((result: STData[]) => {\n          columns\n            .filter(w => w.filter)\n            .forEach(c => {\n              const filter = c.filter!;\n              const values = this.getFilteredData(filter);\n              if (values.length === 0) return;\n              const onFilter = filter.fn;\n              if (typeof onFilter !== 'function') {\n                console.warn(`[st] Muse provide the fn function in filter`);\n                return;\n              }\n              result = result.filter(record => values.some(v => onFilter(v, record)));\n            });\n          return result;\n        }),\n        // paging\n        map((result: STData[]) => {\n          if (paginator && page.front) {\n            const maxPageIndex = Math.ceil(result.length / ps);\n            retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n            retTotal = result.length;\n            if (page.show === true) {\n              return result.slice((retPi - 1) * ps, retPi * ps);\n            }\n          }\n          return result;\n        }),\n      );\n    }\n\n    // pre-process\n    if (typeof res.process === 'function') {\n      data$ = data$.pipe(map(result => res.process!(result, rawData)));\n    }\n\n    data$ = data$.pipe(map(result => this.optimizeData({ result, columns, rowClassName: options.rowClassName })));\n\n    return data$.pipe(\n      map(result => {\n        retList = result;\n        const realTotal = retTotal || total;\n        const realPs = retPs || ps;\n\n        return {\n          pi: retPi,\n          ps: retPs,\n          total: retTotal,\n          list: retList,\n          statistical: this.genStatistical(columns as _STColumn[], retList, rawData),\n          pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n        } as STDataSourceResult;\n      }),\n    );\n  }\n\n  private get(item: STData, col: _STColumn, idx: number): { text: string; _text: SafeHtml; org?: any; color?: string } {\n    try {\n      if (col.format) {\n        const formatRes = col.format(item, col, idx) || '';\n        if (formatRes && ~formatRes.indexOf('</')) {\n          return { text: formatRes, _text: this.dom.bypassSecurityTrustHtml(formatRes), org: formatRes };\n        }\n        return { text: formatRes, _text: formatRes, org: formatRes };\n      }\n\n      const value = deepGet(item, col.index as string[], col.default);\n\n      let text = value;\n      let color: string | undefined;\n      switch (col.type) {\n        case 'no':\n          text = this.getNoIndex(item, col, idx);\n          break;\n        case 'img':\n          text = value ? `<img src=\"${value}\" class=\"img\">` : '';\n          break;\n        case 'number':\n          text = this.numberPipe.transform(value, col.numberDigits);\n          break;\n        case 'currency':\n          text = this.currentyPipe.transform(value);\n          break;\n        case 'date':\n          text = value === col.default ? col.default : this.datePipe.transform(value, col.dateFormat);\n          break;\n        case 'yn':\n          text = this.ynPipe.transform(value === col.yn!.truth, col.yn!.yes!, col.yn!.no!, col.yn!.mode!, false);\n          break;\n        case 'enum':\n          text = col.enum![value];\n          break;\n        case 'tag':\n        case 'badge':\n          const data = col.type === 'tag' ? col.tag : col.badge;\n          if (data && data[text]) {\n            const dataItem = data[text];\n            text = dataItem.text;\n            color = dataItem.color;\n          } else {\n            text = '';\n          }\n          break;\n      }\n      if (text == null) text = '';\n      return { text, _text: this.dom.bypassSecurityTrustHtml(text), org: value, color };\n    } catch (ex) {\n      const text = `INVALID DATA`;\n      console.error(`Failed to get data`, item, col, ex);\n      return { text, _text: this.dom.bypassSecurityTrustHtml(text), org: text };\n    }\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, paginator, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    const reName = req.reName as STReqReNameType;\n    if (paginator) {\n      if (req.type === 'page') {\n        params = {\n          [reName.pi as string]: page.zeroIndexed ? pi - 1 : pi,\n          [reName.ps as string]: ps,\n        };\n      } else {\n        params = {\n          [reName.skip as string]: (pi - 1) * ps,\n          [reName.limit as string]: ps,\n        };\n      }\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    if (!(reqOptions.params instanceof HttpParams)) {\n      reqOptions.params = new HttpParams({ fromObject: reqOptions.params });\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  optimizeData(options: { columns: _STColumn[]; result: STData[]; rowClassName?: STRowClassName }): STData[] {\n    const { result, columns, rowClassName } = options;\n    for (let i = 0, len = result.length; i < len; i++) {\n      result[i]._values = columns.map(c => this.get(result[i], c, i));\n      if (rowClassName) {\n        result[i]._rowClassName = rowClassName(result[i], i);\n      }\n    }\n    return result;\n  }\n\n  getNoIndex(item: STData, col: _STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex! + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: _STColumn[]): STSortMap[] {\n    return columns.filter(item => item._sort && item._sort.enabled && item._sort.default).map(item => item._sort!);\n  }\n\n  private getSorterFn(columns: _STColumn[]): ((a: STData, b: STData) => number) | void {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    const sortItem = sortList[0];\n    if (sortItem.compare === null) {\n      return;\n    }\n    if (typeof sortItem.compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortItem.compare!(a, b);\n      if (result !== 0) {\n        return sortItem.default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(singleSort: STSingleSort | undefined, multiSort: STMultiSort | undefined, columns: _STColumn[]): STMultiSortResultType {\n    let ret: STMultiSortResultType = {};\n    const sortList = this.getValidSort(columns);\n\n    if (multiSort) {\n      const ms: STMultiSort = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        keepEmptyKey: true,\n        arrayParam: false,\n        ...multiSort,\n      };\n\n      const sortMap = sortList\n        .sort((a, b) => a.tick - b.tick)\n        .map(item => item.key! + ms.nameSeparator + ((item.reName || {})[item.default!] || item.default));\n\n      ret = { [ms.key!]: ms.arrayParam ? sortMap : sortMap.join(ms.separator) };\n\n      return sortMap.length === 0 && ms.keepEmptyKey === false ? {} : ret;\n    }\n\n    if (sortList.length === 0) return ret;\n\n    const mapData = sortList[0];\n    let sortFiled = mapData.key;\n    let sortValue = (sortList[0].reName || {})[mapData.default!] || mapData.default;\n    if (singleSort) {\n      sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n      sortFiled = singleSort.key || 'sort';\n    }\n    ret[sortFiled as string] = sortValue as string;\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getFilteredData(filter: STColumnFilter): STColumnFilterMenu[] {\n    return filter.type === 'default' ? filter.menus!.filter(f => f.checked === true) : filter.menus!.slice(0, 1);\n  }\n\n  private getReqFilterMap(columns: _STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const filter = col.filter!;\n        const values = this.getFilteredData(filter);\n        let obj: { [key: string]: NzSafeAny } = {};\n        if (filter.reName) {\n          obj = filter.reName!(filter.menus!, col);\n        } else {\n          obj[filter.key!] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: _STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res: { [key: string]: NzSafeAny } = {};\n    columns.forEach((col, index) => {\n      res[col.key || col.indexKey || index] = col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: _STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: undefined,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter((value, idx, self) => self.indexOf(value) === idx).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits!);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits!);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currentyPipe.transform(res.value) as string;\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxExportResult, XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STColumn, STExportOptions } from './st.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn, index: number): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col, index);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      if (val != null) {\n        switch (col.type) {\n          case 'currency':\n            ret.t = 'n';\n            break;\n          case 'date':\n            ret.t = 'd';\n            break;\n          case 'yn':\n            const yn = col.yn!;\n            ret.v = ret.v === yn.truth ? yn.yes || '是' : yn.no || '否';\n            break;\n        }\n      }\n    }\n\n    ret.v = ret.v || '';\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: { [key: string]: NzSafeAny } } = {};\n    const sheet: { [key: string]: NzSafeAny } = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt.columens!.filter(w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0));\n    const colLen = colData.length;\n    const dataLen = opt.data!.length;\n\n    // column\n    for (let i = 0; i < colLen; i++) {\n      const tit = colData[i].title;\n      sheet[`${this.xlsxSrv.numberToSchema(i + 1)}1`] = {\n        t: 's',\n        v: typeof tit === 'object' ? tit.text : tit,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dataLen; i++) {\n      for (let j = 0; j < colLen; j++) {\n        sheet[`${this.xlsxSrv.numberToSchema(j + 1)}${i + 2}`] = this._stGet(opt.data![i], colData[j], i);\n      }\n    }\n\n    if (colLen > 0 && dataLen > 0) {\n      sheet['!ref'] = `A1:${this.xlsxSrv.numberToSchema(colLen)}${dataLen + 1}`;\n    }\n\n    return sheets;\n  }\n\n  async export(opt: STExportOptions): Promise<XlsxExportResult> {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STData } from './st.interfaces';\n\n@Directive({ selector: '[st-widget-host]' })\nexport class STWidgetHostDirective implements OnInit {\n  @Input() record: STData;\n  @Input() column: STColumn;\n\n  constructor(\n    private stWidgetRegistry: STWidgetRegistry,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    const widget = this.column.widget!;\n    const componentType = this.stWidgetRegistry.get(widget.type);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType as any);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    const { record, column } = this;\n    const data: { [key: string]: any } = widget.params ? widget.params({ record, column }) : { record };\n    Object.keys(data).forEach(key => {\n      (componentRef.instance as any)[key] = data[key];\n    });\n  }\n}\n","import { AlainSTConfig } from '@delon/util';\n\nexport const ST_DEFULAT_CONFIG: AlainSTConfig = {\n  pi: 1,\n  ps: 10,\n  size: 'default',\n  responsive: true,\n  responsiveHideHeaderFooter: false,\n  req: {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    lazyLoad: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  },\n  res: {\n    reName: { list: ['list'], total: ['total'] },\n  },\n  page: {\n    front: true,\n    zeroIndexed: false,\n    position: 'bottom',\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    toTop: true,\n    toTopOffset: 100,\n    itemRender: null,\n    simple: false,\n  },\n  modal: {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  },\n  drawer: {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  },\n  pop: {\n    title: '确认删除吗？',\n    trigger: 'click',\n    placement: 'top',\n  },\n  rowClickTime: 200,\n  btnIcon: {\n    theme: 'outline',\n    spin: false,\n  },\n  noIndex: 1,\n  expandRowByClick: false,\n  expandAccordion: false,\n  widthMode: {\n    type: 'default',\n    strictBehavior: 'truncate',\n  },\n  virtualItemSize: 54,\n  virtualMaxBufferPx: 200,\n  virtualMinBufferPx: 100,\n  iifBehavior: 'hide',\n  loadingDelay: 0,\n};\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  CNCurrencyPipe,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport {\n  AlainConfigService,\n  AlainSTConfig,\n  BooleanInput,\n  deepCopy,\n  deepMergeKey,\n  InputBoolean,\n  InputNumber,\n  NumberInput,\n  toBoolean,\n} from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzResizeEvent } from 'ng-zorro-antd/resizable';\nimport { NzTableComponent, NzTableData } from 'ng-zorro-antd/table';\nimport { from, Observable, of, Subject, Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { STColumnSource } from './st-column-source';\nimport { STDataSource, STDataSourceOptions, STDataSourceResult } from './st-data-source';\nimport { STExport } from './st-export';\nimport { STRowSource } from './st-row.directive';\nimport { ST_DEFULAT_CONFIG } from './st.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu,\n  STColumnSelection,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STResetColumnsOption,\n  STResizable,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n} from './st.interfaces';\nimport { _STColumn } from './st.types';\n\n@Component({\n  selector: 'st',\n  exportAs: 'st',\n  templateUrl: './st.component.html',\n  providers: [STDataSource, STRowSource, STColumnSource, STExport, CNCurrencyPipe, DatePipe, YNPipe, DecimalPipe],\n  host: {\n    '[class.st]': `true`,\n    '[class.st__p-left]': `page.placement === 'left'`,\n    '[class.st__p-center]': `page.placement === 'center'`,\n    '[class.st__width-strict]': `widthMode.type === 'strict'`,\n    '[class.ant-table-rep]': `responsive`,\n    '[class.ant-table-rep__hide-header-footer]': `responsiveHideHeaderFooter`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_ps: NumberInput;\n  static ngAcceptInputType_pi: NumberInput;\n  static ngAcceptInputType_total: NumberInput;\n  static ngAcceptInputType_loadingDelay: NumberInput;\n  static ngAcceptInputType_bordered: BooleanInput;\n  static ngAcceptInputType_expandRowByClick: BooleanInput;\n  static ngAcceptInputType_expandAccordion: BooleanInput;\n  static ngAcceptInputType_rowClickTime: NumberInput;\n  static ngAcceptInputType_responsive: BooleanInput;\n  static ngAcceptInputType_responsiveHideHeaderFooter: BooleanInput;\n  static ngAcceptInputType_virtualScroll: BooleanInput;\n  static ngAcceptInputType_virtualItemSize: NumberInput;\n  static ngAcceptInputType_virtualMaxBufferPx: NumberInput;\n  static ngAcceptInputType_virtualMinBufferPx: NumberInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private data$: Subscription;\n  private totalTpl = ``;\n  private cog: AlainSTConfig;\n  private rowClickCount = 0;\n  private _req: STReq;\n  private _res: STRes;\n  private _page: STPage;\n  private _widthMode: STWidthMode;\n  private customWidthConfig: boolean = false;\n  _widthConfig: string[] = [];\n  locale: LocaleData = {};\n  _loading = false;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _headers: _STColumn[][] = [];\n  _columns: _STColumn[] = [];\n  @ViewChild('table', { static: false }) readonly orgTable: NzTableComponent;\n\n  @Input()\n  get req(): STReq {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMergeKey({}, true, this.cog.req, value);\n  }\n  /** 返回体配置 */\n  @Input()\n  get res(): STRes {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = (this._res = deepMergeKey({}, true, this.cog.res, value));\n    const reName = item.reName!;\n    if (!Array.isArray(reName.list)) reName.list = reName.list!.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total!.split('.');\n    this._res = item;\n  }\n  @Input()\n  get page(): STPage {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this._page = { ...this.cog.page, ...value };\n    this.updateTotalTpl();\n  }\n  @Input() data: string | STData[] | Observable<STData[]>;\n  @Input() columns: STColumn[] = [];\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  @Input() loading: boolean | null = null;\n  @Input() @InputNumber() loadingDelay = 0;\n  @Input() loadingIndicator: TemplateRef<void>;\n  @Input() @InputBoolean() bordered = false;\n  @Input() size: 'small' | 'middle' | 'default';\n  @Input() scroll: { y?: string; x?: string };\n  @Input() singleSort: STSingleSort;\n  private _multiSort?: STMultiSort;\n  @Input()\n  get multiSort(): NzSafeAny {\n    return this._multiSort;\n  }\n  set multiSort(value: NzSafeAny) {\n    if ((typeof value === 'boolean' && !toBoolean(value)) || (typeof value === 'object' && Object.keys(value).length === 0)) {\n      this._multiSort = undefined;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { ...this.cog.widthMode, ...value };\n  }\n  get widthMode(): STWidthMode {\n    return this._widthMode;\n  }\n  @Input()\n  set widthConfig(val: string[]) {\n    this._widthConfig = val;\n    this.customWidthConfig = val && val.length > 0;\n  }\n  private _resizable: STResizable;\n  @Input()\n  set resizable(val: STResizable | boolean) {\n    this._resizable = typeof val === 'object' ? val : { disabled: !toBoolean(val) };\n  }\n  @Input() header: string | TemplateRef<void>;\n  @Input() footer: string | TemplateRef<void>;\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  @Input() @InputBoolean() expandAccordion = false;\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsive: boolean = true;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  @Output() readonly error = new EventEmitter<STError>();\n  @Output() readonly change = new EventEmitter<STChange>();\n  @Input() @InputBoolean() virtualScroll = false;\n  @Input() @InputNumber() virtualItemSize = 54;\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\n  @Input() @InputNumber() virtualMinBufferPx = 100;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n\n  /**\n   * Get the number of the current page\n   */\n  get count(): number {\n    return this._data.length;\n  }\n\n  /**\n   * Get the data of the current page\n   */\n  get list(): STData[] {\n    return this._data;\n  }\n\n  private get routerState(): { pi: number; ps: number; total: number } {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private el: ElementRef,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n    configSrv: AlainConfigService,\n  ) {\n    this.setCog(configSrv.merge('st', ST_DEFULAT_CONFIG)!);\n\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.updateTotalTpl();\n        this.cd();\n      }\n    });\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  private setCog(cog: AlainSTConfig): void {\n    const copyMultiSort = { ...cog.multiSort };\n    // Because multiSort.global will affect the result, it should be removed first, and multiSort will be operated again after processing.\n    delete cog.multiSort;\n    this.cog = cog;\n    Object.assign(this, cog);\n\n    if (copyMultiSort.global !== false) {\n      this.multiSort = copyMultiSort;\n    }\n    this.columnSource.setCog(cog);\n  }\n\n  cd(): this {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]): string {\n    return this.totalTpl\n      ? this.totalTpl.replace('{{total}}', total).replace('{{range[0]}}', range[0]).replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  private changeEmit(type: STChangeType, data?: any): void {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  // #region data\n\n  /**\n   * 获取过滤后所有数据\n   * - 本地数据：包含排序、过滤后不分页数据\n   * - 远程数据：不传递 `pi`、`ps` 两个参数\n   */\n  get filteredData(): Promise<STData[]> {\n    return this.loadData({ paginator: false } as any).then(res => res.list);\n  }\n\n  private updateTotalTpl(): void {\n    const { total } = this.page;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n  }\n\n  private setLoading(val: boolean): void {\n    if (this.loading == null) {\n      this._loading = val;\n      this.cdr.detectChanges();\n    }\n  }\n\n  private loadData(options?: STDataSourceOptions): Promise<STDataSourceResult> {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    return new Promise((resolvePromise, rejectPromise) => {\n      if (this.data$) {\n        this.data$.unsubscribe();\n      }\n\n      this.data$ = this.dataSource\n        .process({\n          pi,\n          ps,\n          total,\n          data,\n          req,\n          res,\n          page,\n          columns: this._columns,\n          singleSort,\n          multiSort,\n          rowClassName,\n          paginator: true,\n          ...options,\n        })\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          result => resolvePromise(result),\n          error => {\n            console.warn('st.loadDate', error);\n            rejectPromise(error);\n          },\n        );\n    });\n  }\n\n  private async loadPageData(): Promise<this> {\n    this.setLoading(true);\n    try {\n      const result = await this.loadData();\n      this.setLoading(false);\n      if (typeof result.pi !== 'undefined') {\n        this.pi = result.pi;\n      }\n      if (typeof result.ps !== 'undefined') {\n        this.ps = result.ps;\n      }\n      if (typeof result.total !== 'undefined') {\n        this.total = result.total;\n      }\n      if (typeof result.pageShow !== 'undefined') {\n        this._isPagination = result.pageShow;\n      }\n      this._data = result.list as STData[];\n      this._statistical = result.statistical as STStatisticalResults;\n      this.changeEmit('loaded', result.list);\n      // Should be re-render in next tike when using virtual scroll\n      // https://github.com/ng-alain/ng-alain/issues/1836\n      if (this.cdkVirtualScrollViewport) {\n        Promise.resolve().then(() => this.cdkVirtualScrollViewport.checkViewportSize());\n      }\n      return this._refCheck();\n    } catch (error) {\n      this.setLoading(false);\n      if (!this.unsubscribe$.isStopped) {\n        this.cdr.detectChanges();\n        this.error.emit({ type: 'req', error });\n      }\n      return this;\n    }\n  }\n\n  /** 清空所有数据 */\n  clear(cleanStatus: boolean = true): this {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** 清空所有状态 */\n  clearStatus(): this {\n    return this.clearCheck().clearRadio().clearFilter().clearSort();\n  }\n\n  /**\n   * 根据页码重新加载数据\n   *\n   * @param pi 指定当前页码，默认：`1`\n   * @param extraParams 重新指定 `extraParams` 值\n   * @param options 选项\n   */\n  load(pi: number = 1, extraParams?: {}, options?: STLoadOptions): this {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this.req.params = options && options.merge ? { ...this.req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi', options);\n    return this;\n  }\n\n  /**\n   * 重新刷新当前页\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reload(extraParams?: {}, options?: STLoadOptions): this {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * 重置且重新设置 `pi` 为 `1`，包含以下值：\n   * - `check` 数据\n   * - `radio` 数据\n   * - `sort` 数据\n   * - `fileter` 数据\n   *\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reset(extraParams?: {}, options?: STLoadOptions): this {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop(enforce?: boolean): void {\n    if (!(enforce == null ? this.page.toTop : enforce)) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      if (this.cdkVirtualScrollViewport) {\n        this.cdkVirtualScrollViewport.scrollTo({\n          top: 0,\n          left: 0,\n        });\n      } else {\n        el.querySelector('.ant-table-content')!.scrollTo(0, 0);\n      }\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset!;\n  }\n\n  _change(type: 'pi' | 'ps', options?: STLoadOptions): void {\n    if (type === 'pi' || (type === 'ps' && this.pi <= Math.ceil(this.total / this.ps))) {\n      this.loadPageData().then(() => this._toTop(options?.toTop));\n    }\n\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn): boolean {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click!(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n  private closeOtherExpand(item: STData): void {\n    if (this.expandAccordion === false) return;\n    this._data.filter(i => i !== item).forEach(i => (i.expand = false));\n  }\n  _rowClick(e: Event, item: STData, index: number): void {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && item.showExpand !== false && expandRowByClick) {\n      item.expand = !item.expand;\n      this.closeOtherExpand(item);\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData, expand: boolean): void {\n    if (this.expandRowByClick) {\n      return;\n    }\n    item.expand = expand;\n    this.closeOtherExpand(item);\n    this.changeEmit('expand', item);\n  }\n\n  /**\n   * Remove a row in the table, like this:\n   *\n   * ```\n   * this.st.removeRow(0)\n   * this.st.removeRow(stDataItem)\n   * ```\n   */\n  removeRow(data: STData | STData[] | number): this {\n    if (typeof data === 'number') {\n      this._data.splice(data, 1);\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      (data as STData[])\n        .map(item => this._data.indexOf(item))\n        .filter(pos => pos !== -1)\n        .forEach(pos => this._data.splice(pos, 1));\n    }\n    // recalculate no\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c => this._data.forEach((i, idx) => (i._values[c.__point!] = { _text: this.dataSource.getNoIndex(i, c, idx), org: idx })));\n\n    return this.cd();\n  }\n\n  /**\n   * Sets the row value for the `index` in the table, like this:\n   *\n   * - `optinos.refreshSchema` Whether to refresh of st schemas\n   * - `optinos.emitReload` Whether to trigger a reload http request when data is url\n   *\n   * ```\n   * this.st.setRow(0, { price: 100 })\n   * this.st.setRow(0, { price: 100, name: 'asdf' })\n   * this.st.setRow(item, { price: 100 })\n   * ```\n   */\n  setRow(index: number | STData, item: STData, options?: { refreshSchema?: boolean; emitReload?: boolean }): this {\n    options = { refreshSchema: false, emitReload: false, ...options };\n    if (typeof index !== 'number') {\n      index = this._data.indexOf(index);\n    }\n    this._data[index] = deepMergeKey(this._data[index], false, item);\n    this.optimizeData();\n    if (options.refreshSchema) {\n      this.resetColumns({ emitReload: options.emitReload });\n      return this;\n    }\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: _STColumn, idx: number, value: any): void {\n    if (this.multiSort) {\n      col._sort!.default = value;\n      col._sort!.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort!.default = index === idx ? value : null));\n    }\n    this.cdr.detectChanges();\n    this.loadPageData();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort(): this {\n    this._columns.forEach(item => (item._sort!.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn): void {\n    // 过滤表示一种数据的变化应重置页码为 `1`\n    this.pi = 1;\n    this.columnSource.updateDefault(col.filter!);\n    this.loadPageData();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: _STColumn): void {\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: _STColumn, item: STColumnFilterMenu, checked: boolean): void {\n    col.filter!.menus!.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  _filterClear(col: _STColumn): void {\n    this.columnSource.cleanFilter(col);\n    this.handleFilter(col);\n  }\n\n  clearFilter(): this {\n    this._columns.filter(w => w.filter && w.filter.default === true).forEach(col => this.columnSource.cleanFilter(col));\n    return this;\n  }\n\n  _filterClick($event: MouseEvent): void {\n    $event.stopPropagation();\n  }\n  // #endregion\n\n  // #region checkbox\n\n  /** 清除所有 `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    return this.cd();\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean): this {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** 清除所有 `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(record: STData, btn: STColumnButton, e?: Event): void {\n    // should be stop propagation when expandRowByClick is true\n    if (e && this.expandRowByClick === true) {\n      e.stopPropagation();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal!.paramsName!]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal!.component,\n        { ...obj, ...(modal!.params && modal!.params!(record)) },\n        deepMergeKey({}, true, this.cog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe((res: NzSafeAny) => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer!.paramsName!]: record };\n      this.drawerHelper\n        .create(\n          drawer!.title!,\n          drawer!.component,\n          { ...obj, ...(drawer!.params && drawer!.params!(record)) },\n          deepMergeKey({}, true, this.cog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any): any {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton): string {\n    return typeof btn.text === 'function' ? btn.text(record, btn) : btn.text || '';\n  }\n\n  _validBtns(btns: STColumnButton[], item: STData, col: STColumn): STColumnButton[] {\n    return btns.filter(btn => {\n      const result = btn.iif!(item, btn, col);\n      const isRenderDisabled = btn.iifBehavior === 'disabled';\n      btn._result = result;\n      btn._disabled = !result && isRenderDisabled;\n      return result || isRenderDisabled;\n    });\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * 导出当前页，确保已经注册 `XlsxModule`\n   * @param newData 重新指定数据；若为 `true` 表示使用 `filteredData` 数据\n   * @param opt 额外参数\n   */\n  export(newData?: STData[] | true, opt?: STExportOptions): void {\n    (newData === true ? from(this.filteredData) : of(newData || this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        data: res,\n        columens: this._columns,\n      }),\n    );\n  }\n\n  // #endregion\n\n  // #region resizable\n\n  colResize({ width }: NzResizeEvent, column: _STColumn): void {\n    column.width = `${width}px`;\n    this.changeEmit('resize', column);\n  }\n\n  // #endregion\n\n  get cdkVirtualScrollViewport(): CdkVirtualScrollViewport {\n    return this.orgTable.cdkVirtualScrollViewport!;\n  }\n\n  resetColumns(options?: STResetColumnsOption): Promise<this> {\n    options = { emitReload: true, preClearData: false, ...options };\n    if (typeof options.columns !== 'undefined') {\n      this.columns = options.columns;\n    }\n    if (typeof options.pi !== 'undefined') {\n      this.pi = options.pi;\n    }\n    if (typeof options.ps !== 'undefined') {\n      this.ps = options.ps;\n    }\n    if (options.emitReload) {\n      // Should clean data, Because of changing columns may cause inaccurate data\n      options.preClearData = true;\n    }\n    if (options.preClearData) {\n      this._data = [];\n    }\n    this.refreshColumns();\n    if (options.emitReload) {\n      return this.loadPageData();\n    } else {\n      this.cd();\n      return Promise.resolve(this);\n    }\n  }\n\n  private refreshColumns(): this {\n    const res = this.columnSource.process(this.columns as _STColumn[], { widthMode: this.widthMode, resizable: this._resizable });\n    this._columns = res.columns;\n    this._headers = res.headers;\n    if (this.customWidthConfig === false && res.headerWidths != null) {\n      this._widthConfig = res.headerWidths;\n    }\n    return this;\n  }\n\n  private optimizeData(): void {\n    this._data = this.dataSource.optimizeData({ columns: this._columns, result: this._data, rowClassName: this.rowClassName });\n  }\n\n  /**\n   * Return pure data, `st` internally maintains a set of data for caching, this part of data may affect the backend\n   *\n   * 返回纯净数据，`st` 内部会维护一组用于缓存的数据，这部分数据可能会影响后端\n   */\n  pureItem(itemOrIndex: STData | number): STData | null {\n    if (typeof itemOrIndex === 'number') {\n      itemOrIndex = this._data[itemOrIndex];\n    }\n    if (!itemOrIndex) {\n      return null;\n    }\n    const copyItem = deepCopy(itemOrIndex);\n    delete copyItem._values;\n    return copyItem;\n  }\n\n  ngAfterViewInit(): void {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns().optimizeData();\n    }\n    const changeData = changes.data;\n    if (changeData && changeData.currentValue && !(this.req.lazyLoad && changeData.firstChange)) {\n      this.loadPageData();\n    }\n    if (changes.loading) {\n      this._loading = changes.loading.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","<ng-template #btnTpl let-i let-btn=\"btn\">\n  <ng-container *ngIf=\"!btn.tooltip\">\n    <ng-template [ngTemplateOutlet]=\"btnItemTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, btn: btn }\"></ng-template>\n  </ng-container>\n  <span *ngIf=\"btn.tooltip\" nz-tooltip [nzTooltipTitle]=\"btn.tooltip\">\n    <ng-template [ngTemplateOutlet]=\"btnItemTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, btn: btn }\"></ng-template>\n  </span>\n</ng-template>\n<ng-template #btnItemTpl let-i let-btn=\"btn\">\n  <a\n    *ngIf=\"btn.pop\"\n    nz-popconfirm\n    [nzPopconfirmTitle]=\"btn.pop.title\"\n    [nzIcon]=\"btn.pop.icon\"\n    [nzCondition]=\"btn.pop.condition(i)\"\n    [nzCancelText]=\"btn.pop.cancelText\"\n    [nzOkText]=\"btn.pop.okText\"\n    [nzOkType]=\"btn.pop.okType\"\n    (nzOnConfirm)=\"_btnClick(i, btn, $event)\"\n    class=\"st__btn-text\"\n    [ngClass]=\"btn.className\"\n  >\n    <ng-template [ngTemplateOutlet]=\"btnTextTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, btn: btn }\"></ng-template>\n  </a>\n  <a *ngIf=\"!btn.pop\" (click)=\"_btnClick(i, btn, $event)\" class=\"st__btn-text\" [ngClass]=\"btn.className\">\n    <ng-template [ngTemplateOutlet]=\"btnTextTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, btn: btn }\"></ng-template>\n  </a>\n</ng-template>\n<ng-template #btnTextTpl let-i let-btn=\"btn\">\n  <ng-container *ngIf=\"btn.icon\">\n    <i\n      *ngIf=\"!btn.icon.iconfont\"\n      nz-icon\n      [nzType]=\"btn.icon.type\"\n      [nzTheme]=\"btn.icon.theme\"\n      [nzSpin]=\"btn.icon.spin\"\n      [nzTwotoneColor]=\"btn.icon.twoToneColor\"\n    ></i>\n    <i *ngIf=\"btn.icon.iconfont\" nz-icon [nzIconfont]=\"btn.icon.iconfont\"></i>\n  </ng-container>\n  <span [innerHTML]=\"_btnText(i, btn)\" [ngClass]=\"{ 'pl-xs': btn.icon }\"></span>\n</ng-template>\n<ng-template #titleTpl let-i>\n  <span [innerHTML]=\"i._text\"></span>\n  <small *ngIf=\"i.optional\" class=\"st__head-optional\" [innerHTML]=\"i.optional\"></small>\n  <i *ngIf=\"i.optionalHelp\" class=\"st__head-tip\" nz-tooltip [nzTooltipTitle]=\"i.optionalHelp\" nz-icon nzType=\"question-circle\"></i>\n</ng-template>\n<ng-template #chkAllTpl let-custom>\n  <label\n    nz-checkbox\n    class=\"st__checkall\"\n    [nzDisabled]=\"_allCheckedDisabled\"\n    [(ngModel)]=\"_allChecked\"\n    [nzIndeterminate]=\"_indeterminate\"\n    (ngModelChange)=\"_checkAll()\"\n    [class.ant-table-selection-select-all-custom]=\"custom\"\n  ></label>\n</ng-template>\n<nz-table\n  #table\n  [nzData]=\"_data\"\n  [(nzPageIndex)]=\"pi\"\n  (nzPageIndexChange)=\"_change('pi')\"\n  [(nzPageSize)]=\"ps\"\n  (nzPageSizeChange)=\"_change('ps')\"\n  [nzTotal]=\"total\"\n  [nzShowPagination]=\"_isPagination\"\n  [nzFrontPagination]=\"false\"\n  [nzBordered]=\"bordered\"\n  [nzSize]=\"size\"\n  [nzLoading]=\"_loading\"\n  [nzLoadingDelay]=\"loadingDelay\"\n  [nzLoadingIndicator]=\"loadingIndicator\"\n  [nzTitle]=\"header\"\n  [nzFooter]=\"footer\"\n  [nzScroll]=\"scroll\"\n  [nzVirtualItemSize]=\"virtualItemSize\"\n  [nzVirtualMaxBufferPx]=\"virtualMaxBufferPx\"\n  [nzVirtualMinBufferPx]=\"virtualMinBufferPx\"\n  [nzVirtualForTrackBy]=\"virtualForTrackBy\"\n  [nzNoResult]=\"noResult\"\n  [nzPageSizeOptions]=\"page.pageSizes\"\n  [nzShowQuickJumper]=\"page.showQuickJumper\"\n  [nzShowSizeChanger]=\"page.showSize\"\n  [nzPaginationPosition]=\"page.position\"\n  [nzPaginationType]=\"page.type\"\n  [nzItemRender]=\"page.itemRender\"\n  [nzSimple]=\"page.simple\"\n  [nzShowTotal]=\"totalTpl\"\n  [nzWidthConfig]=\"_widthConfig\"\n>\n  <thead class=\"st__head\">\n    <tr *ngFor=\"let row of _headers; let rowFirst = first\">\n      <th *ngIf=\"rowFirst && expand\" nzWidth=\"50px\" [rowSpan]=\"_headers.length\"></th>\n      <th\n        *ngFor=\"let h of row; let index = index; let last = last\"\n        [colSpan]=\"h.colSpan\"\n        [rowSpan]=\"h.rowSpan\"\n        [nzWidth]=\"h.column.width\"\n        [nzLeft]=\"!!h.column._left\"\n        [nzRight]=\"!!h.column._right\"\n        [ngClass]=\"h.column.className\"\n        [attr.data-col]=\"h.column.indexKey\"\n        [nzShowSort]=\"h.column._sort.enabled\"\n        [nzSortOrder]=\"h.column._sort.default\"\n        (nzSortOrderChange)=\"sort(h.column, index, $event)\"\n        [nzCustomFilter]=\"h.column.filter\"\n        nz-resizable\n        [nzDisabled]=\"last || h.column.resizable.disabled\"\n        [nzMaxWidth]=\"h.column.resizable.maxWidth\"\n        [nzMinWidth]=\"h.column.resizable.minWidth\"\n        [nzBounds]=\"h.column.resizable.bounds\"\n        [nzPreview]=\"h.column.resizable.preview\"\n        (nzResizeEnd)=\"colResize($event, h.column)\"\n      >\n        <nz-resize-handle *ngIf=\"!last && !h.column.resizable.disabled\" nzDirection=\"right\"><i></i></nz-resize-handle>\n        <ng-template #renderTitle [ngTemplateOutlet]=\"h.column.__renderTitle\" [ngTemplateOutletContext]=\"{ $implicit: h.column, index: index }\"></ng-template>\n        <ng-container *ngIf=\"!h.column.__renderTitle; else renderTitle\">\n          <ng-container [ngSwitch]=\"h.column.type\">\n            <ng-container *ngSwitchCase=\"'checkbox'\">\n              <ng-container *ngIf=\"h.column.selections.length === 0\">\n                <ng-template [ngTemplateOutlet]=\"chkAllTpl\" [ngTemplateOutletContext]=\"{ $implicit: false }\"> </ng-template>\n              </ng-container>\n              <div *ngIf=\"h.column.selections.length > 0\" class=\"ant-table-selection\">\n                <ng-template [ngTemplateOutlet]=\"chkAllTpl\" [ngTemplateOutletContext]=\"{ $implicit: true }\"> </ng-template>\n                <div\n                  *ngIf=\"h.column.selections.length\"\n                  nz-dropdown\n                  nzPlacement=\"bottomLeft\"\n                  [nzDropdownMenu]=\"selectionMenu\"\n                  class=\"ant-table-selection-down st__checkall-selection\"\n                >\n                  <i nz-icon nzType=\"down\"></i>\n                </div>\n                <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n                  <ul nz-menu class=\"ant-table-selection-menu\">\n                    <li nz-menu-item *ngFor=\"let rw of h.column.selections\" (click)=\"_rowSelection(rw)\" [innerHTML]=\"rw.text\"></li>\n                  </ul>\n                </nz-dropdown-menu>\n              </div>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n              <ng-template [ngTemplateOutlet]=\"titleTpl\" [ngTemplateOutletContext]=\"{ $implicit: h.column.title }\"></ng-template>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n        <div\n          nz-th-extra\n          *ngIf=\"h.column.filter\"\n          class=\"ant-table-filter-trigger-container st__filter\"\n          [class.ant-table-filter-trigger-container-open]=\"h.column.filter.visible\"\n        >\n          <span\n            class=\"ant-table-filter-trigger\"\n            [class.active]=\"h.column.filter.visible || h.column.filter.default\"\n            nz-dropdown\n            [nzDropdownMenu]=\"filterMenu\"\n            nzTrigger=\"click\"\n            [nzClickHide]=\"false\"\n            [(nzVisible)]=\"h.column.filter.visible\"\n            nzOverlayClassName=\"st__filter-wrap\"\n            (click)=\"_filterClick($event)\"\n          >\n            <i nz-icon [nzType]=\"h.column.filter.icon.type\" [nzTheme]=\"h.column.filter.icon.theme\"></i>\n          </span>\n          <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n            <div class=\"ant-table-filter-dropdown\">\n              <ng-container [ngSwitch]=\"h.column.filter.type\">\n                <div *ngSwitchCase=\"'keyword'\" class=\"st__filter-keyword\">\n                  <input type=\"text\" nz-input [attr.placeholder]=\"h.column.filter.menus[0].text\" [(ngModel)]=\"h.column.filter.menus[0].value\" />\n                </div>\n                <ul *ngSwitchDefault nz-menu>\n                  <ng-container *ngIf=\"h.column.filter.multiple\">\n                    <li nz-menu-item *ngFor=\"let filter of h.column.filter.menus\">\n                      <label nz-checkbox [(ngModel)]=\"filter.checked\">{{ filter.text }}</label>\n                    </li>\n                  </ng-container>\n                  <ng-container *ngIf=\"!h.column.filter.multiple\">\n                    <li nz-menu-item *ngFor=\"let filter of h.column.filter.menus\">\n                      <label nz-radio [ngModel]=\"filter.checked\" (ngModelChange)=\"_filterRadio(h.column, filter, $event)\">{{ filter.text }}</label>\n                    </li>\n                  </ng-container>\n                </ul>\n              </ng-container>\n              <div class=\"ant-table-filter-dropdown-btns\">\n                <a class=\"ant-table-filter-dropdown-link confirm\" (click)=\"h.column.filter.visible = false\">\n                  <span (click)=\"_filterConfirm(h.column)\">{{ h.column.filter.confirmText || locale.filterConfirm }}</span>\n                </a>\n                <a class=\"ant-table-filter-dropdown-link clear\" (click)=\"h.column.filter.visible = false\">\n                  <span (click)=\"_filterClear(h.column)\">{{ h.column.filter.clearText || locale.filterReset }}</span>\n                </a>\n              </div>\n            </div>\n          </nz-dropdown-menu>\n        </div>\n      </th>\n    </tr>\n  </thead>\n  <tbody class=\"st__body\">\n    <ng-container *ngIf=\"!_loading\">\n      <ng-template [ngTemplateOutlet]=\"bodyHeader\" [ngTemplateOutletContext]=\"{ $implicit: _statistical }\"></ng-template>\n    </ng-container>\n    <ng-template #bodyTpl let-i let-index=\"index\">\n      <tr [attr.data-index]=\"index\" (click)=\"_rowClick($event, i, index)\" [ngClass]=\"i._rowClassName\">\n        <td\n          *ngIf=\"expand\"\n          [nzShowExpand]=\"expand && i.showExpand !== false\"\n          [nzExpand]=\"i.expand\"\n          (nzExpandChange)=\"_expandChange(i, $event)\"\n          nzWidth=\"50px\"\n        ></td>\n        <td *ngFor=\"let c of _columns; let cIdx = index\" [nzLeft]=\"!!c._left\" [nzRight]=\"!!c._right\" [ngClass]=\"c._className\" [attr.colspan]=\"c.colSpan\">\n          <span *ngIf=\"responsive\" class=\"ant-table-rep__title\">\n            <ng-template [ngTemplateOutlet]=\"titleTpl\" [ngTemplateOutletContext]=\"{ $implicit: c.title }\"></ng-template>\n          </span>\n          <span>\n            <ng-template #render [ngTemplateOutlet]=\"c.__render\" [ngTemplateOutletContext]=\"{ $implicit: i, index: index, column: c }\"></ng-template>\n            <ng-container *ngIf=\"!c.__render; else render\">\n              <ng-container [ngSwitch]=\"c.type\">\n                <label\n                  *ngSwitchCase=\"'checkbox'\"\n                  nz-checkbox\n                  [nzDisabled]=\"i.disabled\"\n                  [ngModel]=\"i.checked\"\n                  (ngModelChange)=\"_checkSelection(i, $event)\"\n                ></label>\n                <label *ngSwitchCase=\"'radio'\" nz-radio [nzDisabled]=\"i.disabled\" [ngModel]=\"i.checked\" (ngModelChange)=\"_refRadio($event, i)\"></label>\n                <a *ngSwitchCase=\"'link'\" (click)=\"_click($event, i, c)\" [innerHTML]=\"i._values[cIdx]._text\" [attr.title]=\"i._values[cIdx].text\"></a>\n                <ng-container *ngIf=\"i._values[cIdx].text\">\n                  <nz-tag *ngSwitchCase=\"'tag'\" [nzColor]=\"i._values[cIdx].color\">\n                    <span [innerHTML]=\"i._values[cIdx]._text\"></span>\n                  </nz-tag>\n                  <nz-badge *ngSwitchCase=\"'badge'\" [nzStatus]=\"i._values[cIdx].color\" [nzText]=\"i._values[cIdx].text\"></nz-badge>\n                </ng-container>\n                <ng-template *ngSwitchCase=\"'widget'\" st-widget-host [record]=\"i\" [column]=\"c\"></ng-template>\n                <span *ngSwitchDefault [innerHTML]=\"i._values[cIdx]._text\" [attr.title]=\"c._isTruncate ? i._values[cIdx].text : null\"></span>\n              </ng-container>\n              <ng-container *ngFor=\"let btn of _validBtns(c.buttons, i, c); let last = last\">\n                <a *ngIf=\"btn.children.length > 0\" nz-dropdown [nzDropdownMenu]=\"btnMenu\" nzOverlayClassName=\"st__btn-sub\">\n                  <span [innerHTML]=\"_btnText(i, btn)\"></span>\n                  <i nz-icon nzType=\"down\"></i>\n                </a>\n                <nz-dropdown-menu #btnMenu=\"nzDropdownMenu\">\n                  <ul nz-menu>\n                    <ng-container *ngFor=\"let subBtn of _validBtns(btn.children, i, c)\">\n                      <li *ngIf=\"subBtn.type !== 'divider'\" nz-menu-item [class.st__btn-disabled]=\"subBtn._disabled\">\n                        <ng-template [ngTemplateOutlet]=\"btnTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, btn: subBtn }\"> </ng-template>\n                      </li>\n                      <li *ngIf=\"subBtn.type === 'divider'\" nz-menu-divider></li>\n                    </ng-container>\n                  </ul>\n                </nz-dropdown-menu>\n                <span *ngIf=\"btn.children.length == 0\" [class.st__btn-disabled]=\"btn._disabled\">\n                  <ng-template [ngTemplateOutlet]=\"btnTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, btn: btn }\"> </ng-template>\n                </span>\n                <nz-divider *ngIf=\"!last\" nzType=\"vertical\"></nz-divider>\n              </ng-container>\n            </ng-container>\n          </span>\n        </td>\n      </tr>\n      <tr [nzExpand]=\"i.expand\">\n        <ng-template [ngTemplateOutlet]=\"expand\" [ngTemplateOutletContext]=\"{ $implicit: i, index: index }\"></ng-template>\n      </tr>\n    </ng-template>\n    <ng-container *ngIf=\"!virtualScroll\">\n      <ng-container *ngFor=\"let i of _data; let index = index\">\n        <ng-template [ngTemplateOutlet]=\"bodyTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, index: index }\"> </ng-template>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"virtualScroll\">\n      <ng-template nz-virtual-scroll let-i let-index=\"index\">\n        <ng-template [ngTemplateOutlet]=\"bodyTpl\" [ngTemplateOutletContext]=\"{ $implicit: i, index: index }\"> </ng-template>\n      </ng-template>\n    </ng-container>\n    <ng-container *ngIf=\"!_loading\">\n      <ng-template [ngTemplateOutlet]=\"body\" [ngTemplateOutletContext]=\"{ $implicit: _statistical }\"></ng-template>\n    </ng-container>\n  </tbody>\n  <ng-template #totalTpl let-range=\"range\" let-total>{{ renderTotal(total, range) }}</ng-template>\n</nz-table>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonACLModule } from '@delon/acl';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzResizableModule } from 'ng-zorro-antd/resizable';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { STRowDirective } from './st-row.directive';\nimport { STWidgetHostDirective } from './st-widget-host.directive';\nimport { STComponent } from './st.component';\n\nconst COMPONENTS = [STComponent];\nconst DIRECTIVES = [STRowDirective, STWidgetHostDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DelonUtilModule,\n    DelonACLModule,\n    NzPopconfirmModule,\n    NzTableModule,\n    NzIconModule,\n    NzBadgeModule,\n    NzCheckboxModule,\n    NzDividerModule,\n    NzDropDownModule,\n    NzMenuModule,\n    NzRadioModule,\n    NzTagModule,\n    NzInputModule,\n    NzToolTipModule,\n    NzResizableModule,\n  ],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class STModule {}\n"]}