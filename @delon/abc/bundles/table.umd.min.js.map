{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@delon/abc/table/table-row.directive.ts","ng://@delon/abc/table/table.config.ts","ng://@delon/abc/table/table-column-source.ts","ng://@delon/abc/table/table-data-source.ts","ng://@delon/abc/table/table-export.ts","ng://@delon/abc/table/table.component.ts","ng://@delon/abc/table/table.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","STRowSource","titles","rows","add","type","path","ref","getTitle","getRow","Injectable","STRowDirective","source","ngOnInit","id","Directive","args","selector","TemplateRef","Host","Input","STConfig","size","responsiveHideHeaderFooter","req","method","allInBody","reName","pi","ps","skip","limit","res","list","total","page","front","zeroIndexed","placement","show","showSize","pageSizes","showQuickJumper","indexReset","toTop","toTopOffset","singleSort","multiSort","modal","paramsName","exact","drawer","footer","footerHeight","popTitle","rowClickTime","filterConfirmText","filterClearText","btnIcon","theme","spin","noIndex","expandRowByClick","widthMode","strictBehavior","providedIn","STColumnSource","rowSource","acl","i18nSrv","cog","btnCoerce","ret","_b","list_1","tslib_1.__values","list_1_1","item","can","component","params","paramName","modalOptions","console","warn","pop","icon","children","i18n","text","fanyi","btnCoerceIf","list_2","list_2_1","iif","fixedCoerce","countReduce","a","b","width","toString","replace","filter","w","fixed","forEach","idx","_left","slice","reduce","reverse","_right","sortCoerce","sorter","enabled","default","compare","sortKey","indexKey","sortReName","sort","filterCoerce","_this","filters","confirmText","clearText","filtered","fn","filterIcon","filterKey","menus","multiple","filterMultiple","filterReName","findIndex","checked","restoreRender","renderTitle","__renderTitle","render","__render","process","Error","checkboxCount","radioCount","point","columns","copyColumens","deepCopy","copyColumens_1","copyColumens_1_1","index","Array","isArray","split","join","title","selections","yn","truth","ynTruth","ynYes","yes","ynNo","no","click","badge","tag","className","number","currency","date","_sort","buttons","__point","restoreAllRender","ACLService","Optional","Inject","ALAIN_I18N_TOKEN","STDataSource","http","currentyPipe","datePipe","ynPipe","numberPipe","dom","sortTick","options","Promise","resolvePromise","rejectPromise","data$","retTotal","retPs","retList","retPi","rawData","isRemote","data","showPage","getByHttp","pipe","map","result","deepGet","resultTotal","catchError","err","of","copyResult","sorterFn","getSorterFn","values","onFilter","record","some","v","maxPageIndex","Math","ceil","max","len","_values","get","rowClassName","_rowClassName","then","realTotal","realPs","statistical","genStatistical","pageShow","col","format","formatRes","indexOf","bypassSecurityTrustHtml","org","getNoIndex","transform","numberDigits","dateFormat","url","toUpperCase","_a","reqOptions","getReqSortMap","getReqFilterMap","body","headers","request","getValidSort","sortList","ms_1","separator","nameSeparator","tick","mapData","sortFiled","sortValue","f","obj","getStatistical","val","digits","getValues","self","toFixed","getSum","min","String","isNaN","isFinite","parseFloat","_HttpClient","CNCurrencyPipe","DatePipe","YNPipe","DecimalPipe","DomSanitizer","STExport","xlsxSrv","_stGet","genSheet","opt","sheets","sheet","sheetname","colData","_c","exported","cc","dc","_d","fromCharCode","j","export","filename","callback","XlsxService","STComponent","cdr","router","el","renderer","exportSrv","modalHelper","drawerHelper","doc","columnSource","dataSource","delonI18n","unsubscribe$","Subject","totalTpl","locale","_data","_statistical","_isPagination","_allChecked","_allCheckedDisabled","_indeterminate","_columns","loading","loadingDelay","bordered","EventEmitter","change","rowClickCount","takeUntil","subscribe","getData","clonePage","cd","copyCog","deepMergeKey","global","refreshColumns","_req","deepMerge","_res","_page","toBoolean","_multiSort","_widthMode","detectChanges","renderTotal","range","isTruncate","column","columnClass","changeEmit","emit","_load","_refCheck","catch","clear","cleanStatus","clearStatus","clearCheck","clearRadio","clearFilter","clearSort","load","extraParams","merge","_change","reload","reset","_toTop","scroll","querySelector","scrollTo","scrollIntoView","documentElement","scrollTop","_click","preventDefault","stopPropagation","navigateByUrl","state","routerState","_rowClick","nodeName","expand","setTimeout","_expandChange","removeRow","pos","splice","nextSortTick","handleFilter","_filterConfirm","_filterClear","_filterRadio","_checkAll","validData","disabled","checkedList","allUnChecked","every","_checkNotify","_checkSelection","_rowSelection","row","select","_refRadio","_btnClick","btn","btnCallback","clickRes","create","_btnText","_validBtns","newData","resetColumns","setClass","updateHostClass","nativeElement","ngAfterViewInit","ngOnChanges","changes","currentValue","ngOnDestroy","complete","Component","template","providers","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","Router","ElementRef","Renderer2","ModalHelper","DrawerHelper","DOCUMENT","DelonLocaleService","Output","tslib_1.__decorate","InputNumber","InputBoolean","COMPONENTS","STModule","NgModule","schemas","NO_ERRORS_SCHEMA","imports","CommonModule","FormsModule","DelonUtilModule","DelonACLModule","NgZorroAntdModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>) {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string) {\n    return this.titles[path];\n  }\n\n  getRow(path: string) {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row')\n  id: string;\n\n  @Input()\n  type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  STColumnButtonDrawerConfig,\n  STColumnButtonModalConfig,\n  STIcon,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STWidthMode,\n} from './table.interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class STConfig {\n  /**\n   * èµ·å§é¡µç ï¼é»è®¤ä¸ºï¼`1`\n   */\n  pi?: number;\n  /**\n   * æ¯é¡µæ°éï¼å½è®¾ç½®ä¸º `0` è¡¨ç¤ºä¸åé¡µï¼é»è®¤ï¼`10`\n   */\n  ps?: number;\n  /**\n   * æ¯å¦æ¾ç¤ºè¾¹æ¡\n   */\n  bordered?: boolean;\n  /**\n   * tableå¤§å°\n   */\n  size?: 'small' | 'middle' | 'default' = 'default';\n  /**\n   * æ¯å¦éèå¤´åå°¾ï¼å½å°å±å¹ä¸ææ¾ç¤ºï¼é»è®¤ï¼`false`\n   */\n  responsiveHideHeaderFooter?: boolean = false;\n  /** è¯·æ±ä½éç½® */\n  req?: STReq = {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  };\n  /** è¿åä½éç½® */\n  res?: STRes = {\n    reName: { list: ['list'], total: ['total'] },\n  };\n  /** è¿åä½éç½® */\n  page?: STPage = {\n    front: true,\n    zeroIndexed: false,\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    indexReset: true,\n    toTop: true,\n    toTopOffset: 100,\n  };\n  /**\n   * éå½åæåºå¼ï¼`columns` çéå½åé«äºå±æ§\n   */\n  sortReName?: { ascend?: string; descend?: string };\n  /**\n   * åæåºè§å\n   * - è¥ä¸æå®ï¼åè¿åï¼`columnName=ascend|descend`\n   * - è¥æå®ï¼åè¿åï¼`sort=columnName.(ascend|descend)`\n   */\n  singleSort?: STSingleSort = null;\n  /**\n   * æ¯å¦å¤æåºï¼å½ `sort` å¤ä¸ªç¸åå¼æ¶èªå¨åå¹¶ï¼å»ºè®®åç«¯æ¯ææ¶ä½¿ç¨\n   */\n  multiSort?: STMultiSort = null;\n  /**\n   * æé®æ¨¡ææ¡éç½®\n   */\n  modal?: STColumnButtonModalConfig = {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  };\n  /**\n   * æé®æ½å±éç½®\n   */\n  drawer?: STColumnButtonDrawerConfig = {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  };\n  /**\n   * æ°æ³¡ç¡®è®¤æ¡åå®¹\n   */\n  popTitle?: string = 'ç¡®è®¤å é¤åï¼';\n  /**\n   * è¡åå»å¤å°æ¶é¿ä¹ç±»ä¸ºåå»ï¼åä½ï¼æ¯«ç§ï¼ï¼é»è®¤ï¼`200`\n   */\n  rowClickTime?: number = 200;\n  /**\n   * è¿æ»¤æé®ç¡®è®¤ææ¬ï¼é»è®¤ï¼`ç¡®è®¤`\n   */\n  filterConfirmText?: string = 'ç¡®è®¤';\n  /**\n   * è¿æ»¤æé®éç½®ææ¬ï¼é»è®¤ï¼`éç½®`\n   */\n  filterClearText?: string = 'éç½®';\n  /**\n   * æé®å¾æ \n   */\n  btnIcon?: STIcon = {\n    type: '',\n    theme: 'outline',\n    spin: false,\n  };\n  /**\n   * è¡å·ç´¢å¼ï¼é»è®¤ï¼`1`\n   * - è®¡ç®è§åä¸ºï¼`index + noIndex`\n   */\n  noIndex?: number = 1;\n  /**\n   * è¡¨æ ¼è¡çç±»å\n   */\n  rowClassName?: STRowClassName;\n  /**\n   * éè¿ç¹å»è¡æ¥å±å¼å­è¡\n   */\n  expandRowByClick?: boolean = false;\n  /**\n   * æå® `width` æ¨¡å¼\n   */\n  widthMode?: STWidthMode = {\n    type: 'default',\n    strictBehavior: 'truncate',\n  };\n}\n","import { Host, Inject, Injectable, Optional } from '@angular/core';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { deepCopy } from '@delon/util';\n\nimport { STRowSource } from './table-row.directive';\nimport { STConfig } from './table.config';\nimport { STColumn, STColumnButton, STColumnFilter, STColumnSort } from './table.interfaces';\n\nexport interface STSortMap extends STColumnSort {\n  [key: string]: any;\n\n  /** æ¯å¦å¯ç¨æåº */\n  enabled?: boolean;\n}\n\n@Injectable()\nexport class STColumnSource {\n  constructor(\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private cog: STConfig,\n  ) {}\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, popTitle, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        // compatible\n        if (item.component != null) {\n          item.modal = {\n            component: item.component,\n            params: item.params,\n            paramsName: item.paramName || modal.paramsName,\n            size: item.size || modal.size,\n            modalOptions: item.modalOptions || modal.modalOptions,\n          };\n        }\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      if (item.pop === true) {\n        item.popTitle = item.popTitle || popTitle;\n      } else {\n        item.pop = false;\n      }\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children =\n        item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]) {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      if (item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      }\n    }\n  }\n\n  private fixedCoerce(list: STColumn[]) {\n    const countReduce = (a: number, b: STColumn) => a + +b.width.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach(\n        (item, idx) =>\n          (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'),\n      );\n  }\n\n  private sortCoerce(item: STColumn): STSortMap {\n    // compatible\n    if (item.sorter && typeof item.sorter === 'function') {\n      return {\n        enabled: true,\n        default: item.sort as any,\n        compare: item.sorter,\n        key: item.sortKey || item.indexKey,\n        reName: item.sortReName,\n      };\n    }\n\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: STColumn): STColumnFilter {\n    let res: STColumnFilter = null;\n    // compatible\n    if (item.filters && item.filters.length > 0) {\n      res = {\n        confirmText: item.filterConfirmText,\n        clearText: item.filterClearText,\n        default: item.filtered,\n        fn: item.filter as any,\n        icon: item.filterIcon,\n        key: item.filterKey || item.indexKey,\n        menus: item.filters,\n        multiple: item.filterMultiple,\n        reName: item.filterReName,\n      };\n    } else {\n      res = item.filter;\n    }\n\n    if (res == null || res.menus.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n    if (!res.confirmText) {\n      res.confirmText = this.cog.filterConfirmText;\n    }\n    if (!res.clearText) {\n      res.clearText = this.cog.filterClearText;\n    }\n    if (!res.icon) {\n      res.icon = `filter`;\n    }\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.default = res.menus.findIndex(w => w.checked) !== -1;\n\n    if (this.acl) {\n      res.menus = res.menus.filter(w => this.acl.can(w.acl));\n    }\n\n    if (res.menus.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: STColumn) {\n    if (item.renderTitle) {\n      item.__renderTitle = this.rowSource.getTitle(item.renderTitle);\n    }\n    if (item.render) {\n      item.__render = this.rowSource.getRow(item.render);\n    }\n  }\n\n  process(list: STColumn[]): STColumn[] {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: STColumn[] = [];\n    const copyColumens = deepCopy(list) as STColumn[];\n    for (const item of copyColumens) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n      // title\n      if (item.i18n && this.i18nSrv) {\n        item.title = this.i18nSrv.fanyi(item.i18n);\n      }\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n        // compatible\n        if (item.ynTruth != null) item.yn.truth = item.ynTruth;\n        if (item.ynYes != null) item.yn.yes = item.ynYes;\n        if (item.ynNo != null) item.yn.no = item.ynNo;\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null)\n      ) {\n        (item as any).type = '';\n      }\n      // className\n      if (!item.className) {\n        item.className = {\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        }[item.type];\n      }\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item);\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons);\n      // restore custom row\n      this.restoreRender(item);\n\n      item.__point = point++;\n      columns.push(item);\n    }\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns);\n\n    return columns;\n  }\n\n  restoreAllRender(columns: STColumn[]) {\n    columns.forEach(i => this.restoreRender(i));\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { _HttpClient, CNCurrencyPipe, DatePipe, YNPipe } from '@delon/theme';\nimport { deepCopy, deepGet } from '@delon/util';\n\nimport { STSortMap } from './table-column-source';\nimport {\n  STColumn,\n  STData,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './table.interfaces';\n\nexport interface STDataSourceOptions {\n  pi?: number;\n  ps?: number;\n  data?: string | STData[] | Observable<STData[]>;\n  total?: number;\n  req?: STReq;\n  res?: STRes;\n  page?: STPage;\n  columns?: STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** æ¯å¦éè¦æ¾ç¤ºåé¡µå¨ */\n  pageShow?: boolean;\n  /** æ° `pi`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  pi?: number;\n  /** æ° `ps`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  ps?: number;\n  /** æ° `total`ï¼è¥è¿å `undefined` è¡¨ç¤ºç¨æ·åæ§ */\n  total?: number;\n  /** æ°æ® */\n  list?: STData[];\n  /** ç»è®¡æ°æ® */\n  statistical?: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private currentyPipe: CNCurrencyPipe,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Promise<STDataSourceResult> {\n    return new Promise((resolvePromise, rejectPromise) => {\n      let data$: Observable<STData[]>;\n      let isRemote = false;\n      const { data, res, total, page, pi, ps, columns } = options;\n      let retTotal: number;\n      let retPs: number;\n      let retList: STData[];\n      let retPi: number;\n      let rawData: any;\n      let showPage = page.show;\n\n      if (typeof data === 'string') {\n        isRemote = true;\n        data$ = this.getByHttp(data, options).pipe(\n          map(result => {\n            rawData = result;\n            let ret: STData[];\n            if (Array.isArray(result)) {\n              ret = result;\n              retTotal = ret.length;\n              retPs = retTotal;\n              showPage = false;\n            } else {\n              // list\n              ret = deepGet(result, res.reName.list as string[], []);\n              if (ret == null || !Array.isArray(ret)) {\n                ret = [];\n              }\n              // total\n              const resultTotal =\n                res.reName.total && deepGet(result, res.reName.total as string[], null);\n              retTotal = resultTotal == null ? total || 0 : +resultTotal;\n            }\n            return deepCopy(ret);\n          }),\n          catchError(err => {\n            rejectPromise(err);\n            return [];\n          }),\n        );\n      } else if (Array.isArray(data)) {\n        data$ = of(data);\n      } else {\n        // a cold observable\n        data$ = data;\n      }\n\n      if (!isRemote) {\n        data$ = data$.pipe(\n          // sort\n          map((result: STData[]) => {\n            rawData = result;\n            let copyResult = deepCopy(result);\n            const sorterFn = this.getSorterFn(columns);\n            if (sorterFn) {\n              copyResult = copyResult.sort(sorterFn);\n            }\n            return copyResult;\n          }),\n          // filter\n          map((result: STData[]) => {\n            columns\n              .filter(w => w.filter)\n              .forEach(c => {\n                const values = c.filter.menus.filter(w => w.checked);\n                if (values.length === 0) return;\n                const onFilter = c.filter.fn;\n                if (typeof onFilter !== 'function') {\n                  console.warn(`[st] Muse provide the fn function in filter`);\n                  return;\n                }\n                result = result.filter(record => values.some(v => onFilter(v, record)));\n              });\n            return result;\n          }),\n          // paging\n          map((result: STData[]) => {\n            if (page.front) {\n              const maxPageIndex = Math.ceil(result.length / ps);\n              retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n              retTotal = result.length;\n              if (page.show === true) {\n                return result.slice((retPi - 1) * ps, retPi * ps);\n              }\n            }\n            return result;\n          }),\n        );\n      }\n\n      // pre-process\n      if (typeof res.process === 'function') {\n        data$ = data$.pipe(map(result => res.process(result)));\n      }\n\n      // data accelerator\n      data$ = data$.pipe(\n        map(result => {\n          for (let i = 0, len = result.length; i < len; i++) {\n            result[i]._values = columns.map(c => this.get(result[i], c, i));\n            if (options.rowClassName) {\n              result[i]._rowClassName = options.rowClassName(result[i], i);\n            }\n          }\n          return result;\n        }),\n      );\n\n      data$\n        .forEach((result: STData[]) => (retList = result))\n        .then(() => {\n          const realTotal = retTotal || total;\n          const realPs = retPs || ps;\n          resolvePromise({\n            pi: retPi,\n            ps: retPs,\n            total: retTotal,\n            list: retList,\n            statistical: this.genStatistical(columns, retList, rawData),\n            pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n          });\n        });\n    });\n  }\n\n  private get(item: STData, col: STColumn, idx: number): { text: any; org?: any } {\n    if (col.format) {\n      const formatRes = col.format(item, col);\n      if (formatRes && ~formatRes.indexOf('</')) {\n        return { text: this.dom.bypassSecurityTrustHtml(formatRes), org: formatRes };\n      }\n      return { text: formatRes == null ? '' : formatRes, org: formatRes };\n    }\n\n    const value = deepGet(item, col.index as string[], col.default);\n\n    let ret = value;\n    switch (col.type) {\n      case 'no':\n        ret = this.getNoIndex(item, col, idx);\n        break;\n      case 'img':\n        ret = value ? `<img src=\"${value}\" class=\"img\">` : '';\n        break;\n      case 'number':\n        ret = this.numberPipe.transform(value, col.numberDigits);\n        break;\n      case 'currency':\n        ret = this.currentyPipe.transform(value);\n        break;\n      case 'date':\n        ret = this.datePipe.transform(value, col.dateFormat);\n        break;\n      case 'yn':\n        ret = this.ynPipe.transform(value === col.yn.truth, col.yn.yes, col.yn.no);\n        break;\n    }\n    return { text: ret == null ? '' : ret, org: value };\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    if (req.type === 'page') {\n      params = {\n        [req.reName.pi]: page.zeroIndexed ? pi - 1 : pi,\n        [req.reName.ps]: ps,\n      };\n    } else {\n      params = {\n        [req.reName.skip]: (pi - 1) * ps,\n        [req.reName.limit]: ps,\n      };\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  getNoIndex(item: STData, col: STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: STColumn[]): STSortMap[] {\n    return columns\n      .filter(item => item._sort && item._sort.enabled && item._sort.default)\n      .map(item => item._sort);\n  }\n\n  private getSorterFn(columns: STColumn[]) {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    if (typeof sortList[0].compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortList[0].compare(a, b);\n      if (result !== 0) {\n        return sortList[0].default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(\n    singleSort: STSingleSort,\n    multiSort: STMultiSort,\n    columns: STColumn[],\n  ): { [key: string]: string } {\n    let ret: { [key: string]: string } = {};\n    const sortList = this.getValidSort(columns);\n    if (!multiSort && sortList.length === 0) return ret;\n\n    if (multiSort) {\n      const ms = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        ...multiSort,\n      };\n\n      ret = {\n        [ms.key]: sortList.sort((a, b) => a.tick - b.tick)\n          .map(item => item.key + ms.nameSeparator + ((item.reName || {})[item.default] || item.default))\n          .join(ms.separator),\n      };\n    } else {\n      const mapData = sortList[0];\n      let sortFiled = mapData.key;\n      let sortValue = (sortList[0].reName || {})[mapData.default] || mapData.default;\n      if (singleSort) {\n        sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n        sortFiled = singleSort.key || 'sort';\n      }\n      ret[sortFiled] = sortValue;\n    }\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getReqFilterMap(columns: STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const values = col.filter.menus.filter(f => f.checked === true);\n        let obj: {} = {};\n        if (col.filter.reName) {\n          obj = col.filter.reName(col.filter.menus, col);\n        } else {\n          obj[col.filter.key] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res = {};\n    columns.forEach((col, index) => {\n      res[col.key ? col.key : index] =\n        col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: null,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter(\n            (value, idx, self) => self.indexOf(value) === idx,\n          ).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currentyPipe.transform(res.value);\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util';\n\nimport { STColumn, STExportOptions } from './table.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      switch (col.type) {\n        case 'currency':\n          ret.t = 'n';\n          break;\n        case 'date':\n          ret.t = 'd';\n          break;\n        case 'yn':\n          ret.v = ret.v === col.ynTruth ? col.ynYes || 'æ¯' : col.ynNo || 'å¦';\n          break;\n      }\n    }\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: {} } = {};\n    const sheet = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt._c.filter(\n      w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0),\n    );\n    const cc = colData.length;\n    const dc = opt._d.length;\n\n    // column\n    for (let i = 0; i < cc; i++) {\n      sheet[`${String.fromCharCode(i + 65)}1`] = {\n        t: 's',\n        v: colData[i].title,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dc; i++) {\n      for (let j = 0; j < cc; j++) {\n        sheet[`${String.fromCharCode(j + 65)}${i + 2}`] = this._stGet(opt._d[i], colData[j]);\n      }\n    }\n\n    if (cc > 0 && dc > 0) {\n      sheet['!ref'] = `A1:${String.fromCharCode(cc + 65 - 1)}${dc + 1}`;\n    }\n\n    return sheets;\n  }\n\n  export(opt: STExportOptions) {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  CNCurrencyPipe,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport {\n  deepMerge,\n  deepMergeKey,\n  toBoolean,\n  updateHostClass,\n  InputBoolean,\n  InputNumber,\n} from '@delon/util';\nimport { of, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { STColumnSource } from './table-column-source';\nimport { STDataSource } from './table-data-source';\nimport { STExport } from './table-export';\nimport { STRowSource } from './table-row.directive';\nimport { STConfig } from './table.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu,\n  STColumnSelection,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n} from './table.interfaces';\n\n@Component({\n  selector: 'st',\n  templateUrl: './table.component.html',\n  providers: [\n    STDataSource,\n    STRowSource,\n    STColumnSource,\n    STExport,\n    CNCurrencyPipe,\n    DatePipe,\n    YNPipe,\n    DecimalPipe,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private totalTpl = ``;\n  private locale: LocaleData = {};\n  private clonePage: STPage;\n  private copyCog: STConfig;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _columns: STColumn[] = [];\n\n  // #region fields\n\n  @Input() data: string | STData[] | Observable<STData[]>;\n  /** è¯·æ±ä½éç½® */\n  @Input()\n  get req() {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMerge({}, this._req, this.cog.req, value);\n  }\n  private _req: STReq;\n  /** è¿åä½éç½® */\n  @Input()\n  get res() {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = deepMergeKey({}, true, this.cog.res, value);\n    const reName = item.reName;\n    if (!Array.isArray(reName.list)) reName.list = reName.list.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total.split('.');\n    this._res = item;\n  }\n  private _res: STRes;\n  @Input() columns: STColumn[] = [];\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  /** åé¡µå¨éç½® */\n  @Input()\n  get page() {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this.clonePage = value;\n    const item = deepMergeKey({}, true, this.cog.page, value);\n    const { total } = item;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n    this._page = item;\n  }\n  private _page: STPage;\n  /** æ¯å¦æ¾ç¤ºLoading */\n  @Input() @InputBoolean() loading = false;\n  /** å»¶è¿æ¾ç¤ºå è½½ææçæ¶é´ï¼é²æ­¢éªçï¼ */\n  @Input() @InputNumber() loadingDelay = 0;\n  /** æ¯å¦æ¾ç¤ºè¾¹æ¡ */\n  @Input() @InputBoolean() bordered = false;\n  /** tableå¤§å° */\n  @Input() size: 'small' | 'middle' | 'default';\n  /** çºµåæ¯ææ»å¨ï¼ä¹å¯ç¨äºæå®æ»å¨åºåçé«åº¦ï¼`{ y: '300px', x: '300px' }` */\n  @Input() scroll: { y?: string; x?: string };\n  /**\n   * åæåºè§å\n   * - è¥ä¸æå®ï¼åè¿åï¼`columnName=ascend|descend`\n   * - è¥æå®ï¼åè¿åï¼`sort=columnName.(ascend|descend)`\n   */\n  @Input() singleSort: STSingleSort = null;\n  private _multiSort: STMultiSort;\n  /** æ¯å¦å¤æåºï¼å½ `sort` å¤ä¸ªç¸åå¼æ¶èªå¨åå¹¶ï¼å»ºè®®åç«¯æ¯ææ¶ä½¿ç¨ */\n  @Input()\n  get multiSort() {\n    return this._multiSort;\n  }\n  set multiSort(value: any) {\n    if (typeof value === 'boolean' && !toBoolean(value)) {\n      this._multiSort = null;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { type: 'default', strictBehavior: 'truncate', ...value };\n  }\n  get widthMode() {\n    return this._widthMode;\n  }\n  private _widthMode: STWidthMode;\n  /** `header` æ é¢ */\n  @Input() header: string | TemplateRef<void>;\n  /** `footer` åºé¨ */\n  @Input() footer: string | TemplateRef<void>;\n  /** é¢å¤ `body` é¡¶é¨åå®¹ */\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  /** é¢å¤ `body` åå®¹ */\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  /** `expand` å¯å±å¼ï¼å½æ°æ®æºä¸­åæ¬ `expand` è¡¨ç¤ºå±å¼ç¶æ */\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() widthConfig: string[];\n  /** è¡åå»å¤å°æ¶é¿ä¹ç±»ä¸ºåå»ï¼åä½ï¼æ¯«ç§ï¼ï¼é»è®¤ï¼`200` */\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  /** è¯·æ±å¼å¸¸æ¶åè° */\n  @Output() readonly error = new EventEmitter<STError>();\n  /**\n   * ååæ¶åè°ï¼åæ¬ï¼`pi`ã`ps`ã`checkbox`ã`radio`ã`sort`ã`filter`ã`click`ã`dblClick` åå¨\n   */\n  @Output() readonly change = new EventEmitter<STChange>();\n\n  // #endregion\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private cog: STConfig,\n    private router: Router,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n  ) {\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.page = this.clonePage;\n        this.cd();\n      }\n    });\n\n    this.copyCog = deepMergeKey(new STConfig(), true, cog);\n    delete this.copyCog.multiSort;\n    Object.assign(this, this.copyCog);\n    if (cog.multiSort && cog.multiSort.global !== false) {\n      this.multiSort = { ...cog.multiSort };\n    }\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  cd() {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]) {\n    return this.totalTpl\n      ? this.totalTpl\n          .replace('{{total}}', total)\n          .replace('{{range[0]}}', range[0])\n          .replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  isTruncate(column: STColumn): boolean {\n    return column.width && this.widthMode.strictBehavior === 'truncate';\n  }\n\n  columnClass(column: STColumn): string {\n    return column.className || (this.isTruncate(column) ? 'text-truncate' : null);\n  }\n\n  private changeEmit(type: STChangeType, data?: any) {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  private get routerState() {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  // #region data\n\n  private _load() {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    this.loading = true;\n    return this.dataSource\n      .process({\n        pi,\n        ps,\n        total,\n        data,\n        req,\n        res,\n        page,\n        columns: this._columns,\n        singleSort,\n        multiSort,\n        rowClassName,\n      })\n      .then(result => {\n        this.loading = false;\n        if (typeof result.pi !== 'undefined') {\n          this.pi = result.pi;\n        }\n        if (typeof result.ps !== 'undefined') {\n          this.ps = result.ps;\n        }\n        if (typeof result.total !== 'undefined') {\n          this.total = result.total;\n        }\n        if (typeof result.pageShow !== 'undefined') {\n          this._isPagination = result.pageShow;\n        }\n        this._data = result.list;\n        this._statistical = result.statistical;\n        return this._data;\n      })\n      .then(() => this._refCheck())\n      .catch(error => {\n        this.loading = false;\n        this.error.emit({ type: 'req', error });\n      });\n  }\n\n  /** æ¸ç©ºæææ°æ® */\n  clear(cleanStatus = true) {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** æ¸ç©ºææç¶æ */\n  clearStatus() {\n    return this.clearCheck()\n      .clearRadio()\n      .clearFilter()\n      .clearSort();\n  }\n\n  /**\n   * æ ¹æ®é¡µç éæ°å è½½æ°æ®\n   *\n   * @param pi æå®å½åé¡µç ï¼é»è®¤ï¼`1`\n   * @param extraParams éæ°æå® `extraParams` å¼\n   * @param options éé¡¹\n   */\n  load(pi = 1, extraParams?: {}, options?: STLoadOptions) {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this._req.params =\n        options && options.merge ? { ...this._req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi');\n    return this;\n  }\n\n  /**\n   * éæ°å·æ°å½åé¡µ\n   * @param extraParams éæ°æå® `extraParams` å¼\n   */\n  reload(extraParams?: {}, options?: STLoadOptions) {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * éç½®ä¸éæ°è®¾ç½® `pi` ä¸º `1`ï¼åå«ä»¥ä¸å¼ï¼\n   * - `check` æ°æ®\n   * - `radio` æ°æ®\n   * - `sort` æ°æ®\n   * - `fileter` æ°æ®\n   *\n   * @param extraParams éæ°æå® `extraParams` å¼\n   */\n  reset(extraParams?: {}, options?: STLoadOptions) {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop() {\n    if (!this.page.toTop) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      el.querySelector('.ant-table-body').scrollTo(0, 0);\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset;\n  }\n\n  _change(type: 'pi' | 'ps') {\n    this._load().then(() => {\n      this._toTop();\n    });\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn) {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n\n  private rowClickCount = 0;\n  _rowClick(e: Event, item: STData, index: number) {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && expandRowByClick) {\n      item.expand = !item.expand;\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData): void {\n    this.changeEmit('expand', item);\n  }\n\n  /** ç§»é¤æè¡æ°æ® */\n  removeRow(data: STData | STData[]) {\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    (data as STData[])\n      .map(item => this._data.indexOf(item))\n      .filter(pos => pos !== -1)\n      .forEach(pos => this._data.splice(pos, 1));\n\n    // recalculate no\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c => this._data.forEach((i, idx) => (i._values[c.__point] = { text: this.dataSource.getNoIndex(i, c, idx), org: idx })));\n\n    return this.cd();\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: STColumn, idx: number, value: any) {\n    if (this.multiSort) {\n      col._sort.default = value;\n      col._sort.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort.default = index === idx ? value : null));\n    }\n    this._load();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort() {\n    this._columns.forEach(item => (item._sort.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn) {\n    col.filter.default = col.filter.menus.findIndex(w => w.checked) !== -1;\n    this._load();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: STColumn) {\n    this.handleFilter(col);\n  }\n\n  _filterClear(col: STColumn) {\n    col.filter.menus.forEach(i => (i.checked = false));\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: STColumn, item: STColumnFilterMenu, checked: boolean) {\n    col.filter.menus.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  clearFilter() {\n    this._columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        col.filter.default = false;\n        col.filter.menus.forEach(f => (f.checked = false));\n      });\n    return this;\n  }\n\n  // #endregion\n\n  // #region checkbox\n\n  /** æ¸é¤ææ `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    this.cd();\n    return this;\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean) {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** æ¸é¤ææ `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(e: Event, record: STData, btn: STColumnButton) {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal.paramsName]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal.component,\n        { ...obj, ...(modal.params && modal.params(record)) },\n        deepMergeKey({}, true, this.copyCog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer.paramsName]: record };\n      this.drawerHelper\n        .create(\n          drawer.title,\n          drawer.component,\n          { ...obj, ...(drawer.params && drawer.params(record)) },\n          deepMergeKey({}, true, this.copyCog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any) {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton) {\n    if (btn.format) return btn.format(record, btn);\n    return btn.text || '';\n  }\n\n  _validBtns(item: STData, col: STColumn): STColumnButton[] {\n    return col.buttons.filter(btn => btn.iif(item, btn, col));\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * å¯¼åºå½åé¡µï¼ç¡®ä¿å·²ç»æ³¨å `XlsxModule`\n   * @param newData éæ°æå®æ°æ®ï¼ä¾å¦å¸æå¯¼åºæææ°æ®éå¸¸æç¨\n   * @param opt é¢å¤åæ°\n   */\n  export(newData?: STData[], opt?: STExportOptions) {\n    (newData ? of(newData) : of(this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        ...{\n          _d: res,\n          _c: this._columns,\n        },\n      }),\n    );\n  }\n\n  // #endregion\n\n  resetColumns() {\n    return this.refreshColumns()._load();\n  }\n\n  private refreshColumns(): this {\n    this._columns = this.columnSource.process(this.columns);\n    return this;\n  }\n\n  private setClass() {\n    const { type, strictBehavior } = this.widthMode;\n    updateHostClass(this.el.nativeElement, this.renderer, {\n      [`st`]: true,\n      [`st__p-${this.page.placement}`]: this.page.placement,\n      [`st__width-${type}`]: true,\n      [`st__width-strict-truncate`]: type === 'strict' && strictBehavior === 'truncate',\n      [`ant-table-rep__hide-header-footer`]: this.responsiveHideHeaderFooter,\n    });\n  }\n\n  ngAfterViewInit() {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns();\n    }\n    if (changes.data && changes.data.currentValue) {\n      this._load();\n    }\n    this.setClass();\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\n\nimport { DelonACLModule } from '@delon/acl';\nimport { DelonUtilModule } from '@delon/util';\n\nimport { STRowDirective } from './table-row.directive';\nimport { STComponent } from './table.component';\n\nconst COMPONENTS = [STComponent, STRowDirective];\n\n@NgModule({\n  schemas: [NO_ERRORS_SCHEMA],\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonACLModule, NgZorroAntdModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class STModule {}\n"]}