{"version":3,"sources":["../../../../packages/abc/count-down/count-down.component.ts","../../../../packages/abc/count-down/count-down.module.ts"],"names":["CountDownComponent","this","event","EventEmitter","Object","defineProperty","prototype","value","config","format","stopTime","addSeconds","Date","valueOf","handleEvent","e","emit","selector","inputs","target","outputs","viewQueries","propertyName","first","predicate","emitDistinctChangesOnly","descendants","exportAs","ngImport","i0__namespace","template","isInline","directives","type","i1","NgIf","i2","CountdownComponent","changeDetection","i0","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Component","preserveWhitespaces","instance","ViewChild","static","Input","Output","COMPONENTS","CountDownModule","imports","CommonModule","CountdownModule","declarations","exports","NgModule"],"mappings":"4/BAKA,SAAAA,IAwBqBC,KAAAC,MAAQ,IAAIC,EAAAA,oBAR/BC,OAAAC,eACIL,EAAAM,UAAA,SAAM,KADV,SACWC,GACTN,KAAKO,OAAS,CACZC,OAAQ,WACRC,SAA2B,iBAAVH,EAAqBI,EAAAA,QAAW,IAAIC,KAAQL,GAAOM,WAAaJ,EAAAA,QAAOF,EAAO,uCAMnGP,EAAAM,UAAAQ,YAAA,SAAYC,GACVd,KAAKC,MAAMc,KAAKD,0CAnBPf,yDAAAA,EAAkBiB,SAAA,aAAAC,OAAA,CAAAV,OAAA,SAAAW,OAAA,UAAAC,QAAA,CAAAlB,MAAA,SAAAmB,YAAA,CAAA,CAAAC,aAAA,WAAAC,OAAA,EAAAC,UAAA,CAAA,MAAAC,yBAAA,EAAAC,aAAA,IAAAC,SAAA,CAAA,aAAAC,SAAAC,EAAAC,SALnB,+FAA8FC,UAAA,EAAAC,WAAA,CAAA,CAAAC,KAAAC,EAAAC,KAAAlB,SAAA,SAAAC,OAAA,CAAA,OAAA,WAAA,aAAA,CAAAe,KAAAG,EAAAC,mBAAApB,SAAA,YAAAC,OAAA,CAAA,SAAA,UAAAE,QAAA,CAAA,WAAAkB,gBAAAC,EAAAC,wBAAAC,OAAAC,cAAAH,EAAAI,kBAAAC,uEAK7F5C,EAAkB,CAAA,MAR9B6C,EAAAA,gBAAU,CACT5B,SAAU,aACVU,SAAU,YACVG,SAAU,+FACVgB,qBAAqB,EACrBR,gBAAiBE,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,eAGYG,SAAQ,CAAA,MAApDC,EAAAA,gBAAU,KAAM,CAAEC,QAAQ,MAElBzC,OAAM,CAAA,MAAd0C,EAAAA,QAMG/B,OAAM,CAAA,MADT+B,EAAAA,QAQkBhD,MAAK,CAAA,MAAvBiD,EAAAA,WCvBH,IAAMC,EAAa,CAACpD,KAOpB,6CAAaqD,iEAAAA,IAAeC,QAAA,CAJjB,CAACC,EAAAA,aAAcC,EAAAA,qFAIbH,EAAe,CAAAI,aAAA,CAPRzD,GAAkBsD,QAAA,CAG1BC,EAAAA,aAAcC,EAAAA,iBAAeE,QAAA,CAHrB1D,qEAOPqD,EAAe,CAAA,MAL3BM,EAAAA,eAAS,CACRL,QAAS,CAACC,EAAAA,aAAcC,EAAAA,iBACxBC,aAAcL,EACdM,QAASN","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport addSeconds from 'date-fns/addSeconds';\nimport format from 'date-fns/format';\nimport { CountdownComponent, CountdownConfig, CountdownEvent } from 'ngx-countdown';\n\n@Component({\n  selector: 'count-down',\n  exportAs: 'countDown',\n  template: ` <countdown #cd *ngIf=\"config\" [config]=\"config\" (event)=\"handleEvent($event)\"></countdown> `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CountDownComponent {\n  @ViewChild('cd', { static: false }) readonly instance: CountdownComponent;\n\n  @Input() config: CountdownConfig;\n\n  /**\n   * 目标时间\n   */\n  @Input()\n  set target(value: number | Date) {\n    this.config = {\n      format: `HH:mm:ss`,\n      stopTime: typeof value === 'number' ? addSeconds(new Date(), value).valueOf() : +format(value, 't'),\n    };\n  }\n\n  @Output() readonly event = new EventEmitter<CountdownEvent>();\n\n  handleEvent(e: CountdownEvent): void {\n    this.event.emit(e);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CountdownModule } from 'ngx-countdown';\n\nimport { CountDownComponent } from './count-down.component';\n\nconst COMPONENTS = [CountDownComponent];\n\n@NgModule({\n  imports: [CommonModule, CountdownModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class CountDownModule {}\n"]}