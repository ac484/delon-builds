{"version":3,"sources":["../../../../packages/abc/count-down/count-down.component.ts","../../../../packages/abc/count-down/count-down.module.ts"],"names":["CountDownComponent","this","event","EventEmitter","Object","defineProperty","prototype","value","config","format","stopTime","addSeconds","Date","valueOf","handleEvent","e","emit","Component","args","selector","exportAs","template","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ViewChild","static","Input","Output","COMPONENTS","NgModule","imports","CommonModule","CountdownModule","declarations","exports"],"mappings":"+iBAIA,SAAAA,IAwBqBC,KAAAC,MAAQ,IAAIC,EAAAA,oBAR/BC,OAAAC,eACIL,EAAAM,UAAA,SAAM,KADV,SACWC,GACTN,KAAKO,OAAS,CACZC,OAAQ,WACRC,SAA2B,iBAAVH,EAAqBI,EAAAA,WAAW,IAAIC,KAAQL,GAAOM,WAAaJ,EAAAA,OAAOF,EAAO,uCAMnGP,EAAAM,UAAAQ,YAAA,SAAYC,GACVd,KAAKC,MAAMc,KAAKD,6BA3BnBE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,aACVC,SAAU,YACVC,SAAU,+FACVC,qBAAqB,EACrBC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,2CAGhCC,EAAAA,UAASX,KAAA,CAAC,KAAM,CAAEY,QAAQ,oBAE1BC,EAAAA,sBAKAA,EAAAA,qBAQAC,EAAAA,UCtBH,IAAMC,EAAa,CAACjC,KAOpB,iCALCkC,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CAACC,EAAAA,aAAcC,EAAAA,iBACxBC,aAAcL,EACdM,QAASN","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { addSeconds, format } from 'date-fns';\nimport { CountdownComponent, CountdownConfig, CountdownEvent } from 'ngx-countdown';\n\n@Component({\n  selector: 'count-down',\n  exportAs: 'countDown',\n  template: ` <countdown #cd *ngIf=\"config\" [config]=\"config\" (event)=\"handleEvent($event)\"></countdown> `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CountDownComponent {\n  @ViewChild('cd', { static: false }) readonly instance: CountdownComponent;\n\n  @Input() config: CountdownConfig;\n\n  /**\n   * 目标时间\n   */\n  @Input()\n  set target(value: number | Date) {\n    this.config = {\n      format: `HH:mm:ss`,\n      stopTime: typeof value === 'number' ? addSeconds(new Date(), value).valueOf() : +format(value, 't'),\n    };\n  }\n\n  @Output() readonly event = new EventEmitter<CountdownEvent>();\n\n  handleEvent(e: CountdownEvent): void {\n    this.event.emit(e);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CountdownModule } from 'ngx-countdown';\n\nimport { CountDownComponent } from './count-down.component';\n\nconst COMPONENTS = [CountDownComponent];\n\n@NgModule({\n  imports: [CommonModule, CountdownModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class CountDownModule {}\n"]}