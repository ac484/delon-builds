/**
 * @license ng-alain(cipchk@qq.com) v11.10.2
 * (c) 2020 cipchk https://ng-alain.com/
 * License: MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@delon/theme"),require("@delon/util/decorator"),require("@angular/common"),require("ng-zorro-antd/badge"),require("ng-zorro-antd/core/outlet"),require("ng-zorro-antd/dropdown"),require("ng-zorro-antd/icon"),require("ng-zorro-antd/list"),require("ng-zorro-antd/spin"),require("ng-zorro-antd/tabs"),require("ng-zorro-antd/tag")):"function"==typeof define&&define.amd?define("@delon/abc/notice-icon",["exports","@angular/core","@delon/theme","@delon/util/decorator","@angular/common","ng-zorro-antd/badge","ng-zorro-antd/core/outlet","ng-zorro-antd/dropdown","ng-zorro-antd/icon","ng-zorro-antd/list","ng-zorro-antd/spin","ng-zorro-antd/tabs","ng-zorro-antd/tag"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).delon=e.delon||{},e.delon.abc=e.delon.abc||{},e.delon.abc["notice-icon"]={}),e.ng.core,e.delon.theme,e.decorator,e.ng.common,e["ng-zorro-antd/badge"],e.outlet,e["ng-zorro-antd/dropdown"],e["ng-zorro-antd/icon"],e["ng-zorro-antd/list"],e["ng-zorro-antd/spin"],e["ng-zorro-antd/tabs"],e["ng-zorro-antd/tag"])}(this,(function(e,t,n,o,i,r,a,l,c,p,s,d,u){"use strict";var g=function(){function e(){this.locale={},this.select=new t.EventEmitter,this.clear=new t.EventEmitter}return e.prototype.onClick=function(e){this.select.emit({title:this.data.title,item:e})},e.prototype.onClear=function(){this.clear.emit(this.data.title)},e}();g.decorators=[{type:t.Component,args:[{selector:"notice-icon-tab",exportAs:"noticeIconTab",template:'<div *ngIf="data.list?.length === 0; else listTpl" class="notice-icon__notfound">\n  <img class="notice-icon__notfound-img" *ngIf="data.emptyImage" [attr.src]="data.emptyImage" alt="not found" />\n  <p>\n    <ng-container *nzStringTemplateOutlet="data.emptyText">\n      {{ data.emptyText || locale.emptyText }}\n    </ng-container>\n  </p>\n</div>\n<ng-template #listTpl>\n  <nz-list [nzDataSource]="data.list" [nzRenderItem]="item">\n    <ng-template #item let-item>\n      <nz-list-item (click)="onClick(item)" [ngClass]="{ \'notice-icon__item-read\': item.read }">\n        <nz-list-item-meta [nzTitle]="nzTitle" [nzDescription]="nzDescription" [nzAvatar]="item.avatar">\n          <ng-template #nzTitle>\n            <ng-container *nzStringTemplateOutlet="item.title; context: { $implicit: item }">{{ item.title }}</ng-container>\n            <div class="notice-icon__item-extra" *ngIf="item.extra">\n              <nz-tag [nzColor]="item.color">{{ item.extra }}</nz-tag>\n            </div>\n          </ng-template>\n          <ng-template #nzDescription>\n            <div *ngIf="item.description" class="notice-icon__item-desc">\n              <ng-container *nzStringTemplateOutlet="item.description; context: { $implicit: item }">{{ item.description }}</ng-container>\n            </div>\n            <div *ngIf="item.datetime" class="notice-icon__item-time">{{ item.datetime }}</div>\n          </ng-template>\n        </nz-list-item-meta>\n      </nz-list-item>\n    </ng-template>\n  </nz-list>\n  <div class="notice-icon__clear" (click)="onClear()">{{ data.clearText || locale.clearText }}</div>\n</ng-template>\n',preserveWhitespaces:!1,encapsulation:t.ViewEncapsulation.None}]}],g.propDecorators={locale:[{type:t.Input}],data:[{type:t.Input}],select:[{type:t.Output}],clear:[{type:t.Output}]};function m(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a}function z(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}Object.create;function f(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,r=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(o=r.next()).done;)a.push(o.value)}catch(e){i={error:e}}finally{try{o&&!o.done&&(n=r.return)&&n.call(r)}finally{if(i)throw i.error}}return a}Object.create;var b=function(){function e(e,n){this.i18n=e,this.cdr=n,this.locale={},this.data=[],this.loading=!1,this.popoverVisible=!1,this.select=new t.EventEmitter,this.clear=new t.EventEmitter,this.popoverVisibleChange=new t.EventEmitter}return e.prototype.onVisibleChange=function(e){this.popoverVisibleChange.emit(e)},e.prototype.onSelect=function(e){this.select.emit(e)},e.prototype.onClear=function(e){this.clear.emit(e)},e.prototype.ngOnInit=function(){var e=this;this.i18n$=this.i18n.change.subscribe((function(){e.locale=e.i18n.getData("noticeIcon"),e.cdr.markForCheck()}))},e.prototype.ngOnChanges=function(){this.cdr.markForCheck()},e.prototype.ngOnDestroy=function(){this.i18n$.unsubscribe()},e}();b.decorators=[{type:t.Component,args:[{selector:"notice-icon",exportAs:"noticeIcon",template:'<ng-template #badgeTpl>\n  <nz-badge [nzCount]="count" [ngClass]="btnClass!" [nzStyle]="{ \'box-shadow\': \'none\' }">\n    <i nz-icon nzType="bell" [ngClass]="btnIconClass!"></i>\n  </nz-badge>\n</ng-template>\n<div *ngIf="data!.length === 0">\n  <ng-template [ngTemplateOutlet]="badgeTpl"></ng-template>\n</div>\n<div\n  *ngIf="data!.length > 0"\n  nz-dropdown\n  [nzVisible]="popoverVisible"\n  (nzVisibleChange)="onVisibleChange($event)"\n  nzTrigger="click"\n  nzPlacement="bottomRight"\n  nzOverlayClassName="header-dropdown notice-icon"\n  [nzDropdownMenu]="noticeMenu"\n>\n  <ng-template [ngTemplateOutlet]="badgeTpl"></ng-template>\n</div>\n<nz-dropdown-menu #noticeMenu="nzDropdownMenu">\n  <nz-spin [nzSpinning]="loading" [nzDelay]="0">\n    <nz-tabset nzSelectedIndex="0">\n      <nz-tab *ngFor="let i of data" [nzTitle]="i.title">\n        <notice-icon-tab [locale]="locale" [data]="i" (select)="onSelect($event)" (clear)="onClear($event)"></notice-icon-tab>\n      </nz-tab>\n    </nz-tabset>\n  </nz-spin>\n</nz-dropdown-menu>\n',host:{"[class.notice-icon__btn]":"true"},preserveWhitespaces:!1,changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None}]}],b.ctorParameters=function(){return[{type:n.DelonLocaleService},{type:t.ChangeDetectorRef}]},b.propDecorators={data:[{type:t.Input}],count:[{type:t.Input}],loading:[{type:t.Input}],popoverVisible:[{type:t.Input}],btnClass:[{type:t.Input}],btnIconClass:[{type:t.Input}],select:[{type:t.Output}],clear:[{type:t.Output}],popoverVisibleChange:[{type:t.Output}]},m([o.InputNumber(),z("design:type",Number)],b.prototype,"count",void 0),m([o.InputBoolean(),z("design:type",Object)],b.prototype,"loading",void 0),m([o.InputBoolean(),z("design:type",Object)],b.prototype,"popoverVisible",void 0);var y=[b],h=function(){};h.decorators=[{type:t.NgModule,args:[{imports:[i.CommonModule,n.DelonLocaleModule,r.NzBadgeModule,l.NzDropDownModule,c.NzIconModule,p.NzListModule,s.NzSpinModule,d.NzTabsModule,u.NzTagModule,a.NzOutletModule],declarations:function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(f(arguments[t]));return e}(y,[g]),exports:y}]}],e.NoticeIconComponent=b,e.NoticeIconModule=h,e.NoticeIconTabComponent=g,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=noticeIcon.umd.min.js.map