{"version":3,"sources":["../../../../packages/testing/src/event-objects.ts","../../../../packages/testing/src/dispatch-events.ts","../../../../packages/testing/src/g2.ts","../../../../packages/testing/src/suite.ts","../../../../packages/testing/src/zorro.ts","../../../../packages/testing/src/type-in-element.ts"],"names":["createMouseEvent","type","x","y","event","document","createEvent","initMouseEvent","window","createTouchEvent","pageX","pageY","touchDetails","initUIEvent","Object","defineProperties","touches","value","createKeyboardEvent","keyCode","target","key","initEventFn","initKeyEvent","initKeyboardEvent","bind","originalPreventDefault","preventDefault","get","defineProperty","apply","this","arguments","createFakeEvent","canBubble","cancelable","initEvent","dispatchEvent","node","dispatchFakeEvent","PageG2","fixture","prototype","debugElement","componentInstance","context","comp","chart","genModule","module","TestBed","configureTestingModule","imports","declarations","genComp","dc","createComponent","dcFirst","makeModule","options","flush","discardPeriodicTasks","spyOn","changeDetectorRef","markForCheck","detectChanges","end","tick","destroy","ngOnDestroy","newData","data","getEls","cls","dl","nativeElement","querySelectorAll","getEl","querySelector","getController","isCanvas","stauts","isExists","isText","el","expect","textContent","trim","toBe","checkOptions","checkAttrOptions","attributeOption","field","isXScalesCount","num","getXScale","values","length","isYScalesCount","getYScales","isDataCount","results","toBeGreaterThan","getXY","checkTooltip","_includeText","point","firstDataPoint","showTooltip","checkClickItem","clientPoint","canvas","getClientByPoint","MouseEvent","clientX","clientY","TestContext","resolve","component","injector","page","delay","console","warn","trigger","allowNull","directive","query","By","NzDropDownDirective","elementRef","element","focus"],"mappings":"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","sourcesContent":["import { NzSafeAny } from 'ng-zorro-antd/core/types';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Creates a browser MouseEvent with the specified options. */\nexport function createMouseEvent(type: string, x: number = 0, y: number = 0): MouseEvent {\n  const event = document.createEvent('MouseEvent');\n\n  event.initMouseEvent(\n    type,\n    false /* canBubble */,\n    false /* cancelable */,\n    window /* view */,\n    0 /* detail */,\n    x /* screenX */,\n    y /* screenY */,\n    x /* clientX */,\n    y /* clientY */,\n    false /* ctrlKey */,\n    false /* altKey */,\n    false /* shiftKey */,\n    false /* metaKey */,\n    0 /* button */,\n    null /* relatedTarget */,\n  );\n\n  return event;\n}\n\n/** Creates a browser TouchEvent with the specified pointer coordinates. */\nexport function createTouchEvent(type: string, pageX: number = 0, pageY: number = 0): UIEvent {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = document.createEvent('UIEvent');\n  const touchDetails = { pageX, pageY };\n\n  (event as NzSafeAny).initUIEvent(type, true, true, window, 0);\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: { value: [touchDetails] },\n  });\n\n  return event;\n}\n\n/** Dispatches a keydown event from an element. */\nexport function createKeyboardEvent(type: string, keyCode: number, target?: Element, key?: string): any {\n  const event = document.createEvent('KeyboardEvent') as any;\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  const initEventFn = (event.initKeyEvent || event.initKeyboardEvent).bind(event);\n  const originalPreventDefault = event.preventDefault;\n\n  initEventFn(type, true, true, window, 0, 0, 0, 0, 0, keyCode);\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function (): any {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n    // tslint:disable-next-line:no-invalid-this\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/** Creates a fake event object with any desired event type. */\nexport function createFakeEvent(type: string, canBubble: boolean = true, cancelable: boolean = true): Event {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n  return event;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent } from './event-objects';\n\n/** Utility to dispatch any event on a Node. */\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/** Shorthand to dispatch a fake event on a specified node. */\nexport function dispatchFakeEvent(node: Node | Window, type: string | Event, canBubble?: boolean): Event {\n  return dispatchEvent(node, typeof type === 'string' ? createFakeEvent(type, canBubble) : type);\n}\n\n/** Shorthand to dispatch a keyboard event with a specified key code. */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode: number, target?: Element): KeyboardEvent {\n  return dispatchEvent(node, createKeyboardEvent(type, keyCode, target)) as KeyboardEvent;\n}\n\n/** Shorthand to dispatch a mouse event on the specified coordinates. */\nexport function dispatchMouseEvent(\n  node: Node,\n  type: string,\n  x: number = 0,\n  y: number = 0,\n  event: MouseEvent = createMouseEvent(type, x, y),\n): MouseEvent {\n  return dispatchEvent(node, event) as MouseEvent;\n}\n\n/** Shorthand to dispatch a touch event on the specified coordinates. */\nexport function dispatchTouchEvent(node: Node, type: string, x: number = 0, y: number = 0): Event {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, discardPeriodicTasks, flush, TestBed, tick } from '@angular/core/testing';\nimport { Chart } from '@antv/g2';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type PageG2Type = 'geometries' | 'views';\n\nexport const PageG2DataCount = 2;\nexport const PageG2Height = 100;\n\nexport class PageG2<T> {\n  constructor(public fixture: ComponentFixture<T> | null = null) {}\n\n  get dl(): DebugElement {\n    return this.fixture!.debugElement;\n  }\n\n  get context(): T {\n    return this.fixture!.componentInstance;\n  }\n\n  get comp(): any {\n    // tslint:disable-next-line:no-string-literal\n    return (this.context as NzSafeAny)['comp'];\n  }\n\n  get chart(): Chart {\n    return this.comp.chart;\n  }\n\n  genModule<M>(module: M, comp: Type<T>): this {\n    TestBed.configureTestingModule({\n      imports: [module],\n      declarations: [comp],\n    });\n    return this;\n  }\n\n  genComp(comp: Type<T>, dc: boolean = false): this {\n    this.fixture = TestBed.createComponent(comp);\n    if (dc) {\n      this.dcFirst();\n    }\n    return this;\n  }\n\n  makeModule<M>(module: M, comp: Type<T>, options: { dc: boolean } = { dc: true }): PageG2<T> {\n    this.genModule(module, comp).genComp(comp, options.dc);\n    return this;\n  }\n\n  dcFirst(): this {\n    this.dc();\n    flush();\n    discardPeriodicTasks();\n    // FIX: `Error during cleanup of component`\n    if (this.comp && typeof this.comp.chart !== 'undefined') {\n      spyOn(this.comp.chart, 'destroy');\n    }\n    return this;\n  }\n\n  dc(): this {\n    this.fixture!.changeDetectorRef.markForCheck();\n    this.fixture!.detectChanges();\n    return this;\n  }\n\n  end(): this {\n    // The 201 value is delay value\n    tick(201);\n    flush();\n    discardPeriodicTasks();\n    return this;\n  }\n\n  destroy(): void {\n    this.comp.ngOnDestroy();\n  }\n\n  newData(data: any): this {\n    // tslint:disable-next-line:no-string-literal\n    (this.context as NzSafeAny)['data'] = data;\n    this.dc();\n    return this;\n  }\n\n  getEls(cls: string): NodeListOf<HTMLElement> {\n    return (this.dl.nativeElement as HTMLElement).querySelectorAll(cls);\n  }\n\n  getEl(cls: string): HTMLElement {\n    return (this.dl.nativeElement as HTMLElement).querySelector(cls) as HTMLElement;\n  }\n\n  getController(type: 'axis' | 'legend'): NzSafeAny {\n    return this.chart.getController(type) as NzSafeAny;\n  }\n\n  isCanvas(stauts: boolean = true): this {\n    this.isExists('canvas', stauts);\n    return this;\n  }\n\n  isText(cls: string, value: string): this {\n    const el = this.getEl(cls);\n    expect(el ? el.textContent!.trim() : '').toBe(value);\n    return this;\n  }\n\n  isExists(cls: string, stauts: boolean = true): this {\n    expect(this.getEl(cls) != null).toBe(stauts);\n    return this;\n  }\n\n  checkOptions(key: string, value: any): this {\n    expect((this.chart as NzSafeAny)[key]).toBe(value);\n    return this;\n  }\n\n  checkAttrOptions(type: PageG2Type, key: string, value: any): this {\n    const x = (this.chart[type][0] as NzSafeAny).attributeOption[key];\n    expect(x.field).toBe(value);\n    return this;\n  }\n\n  isXScalesCount(num: number): this {\n    const x = this.chart.getXScale();\n    expect(x.values!.length).toBe(num);\n    return this;\n  }\n\n  isYScalesCount(num: number): this {\n    const y = this.chart.getYScales();\n    expect(y.length).toBe(1);\n    expect(y[0].values!.length).toBe(num);\n    return this;\n  }\n\n  isDataCount(type: PageG2Type, num: number): this {\n    const results = this.chart[type];\n    expect(results.length).toBeGreaterThan(0);\n    expect(results[0].data.length).toBe(num);\n    return this;\n  }\n\n  get firstDataPoint(): { x: number; y: number } {\n    // tslint:disable-next-line: no-string-literal\n    return this.chart.getXY((this.context as NzSafeAny)['data'][0]);\n  }\n\n  checkTooltip(_includeText: string | null, point?: { x: number; y: number }): this {\n    if (!point) {\n      point = this.firstDataPoint;\n    }\n    this.chart.showTooltip(point);\n    expect(this.chart.getController('tooltip') != null).toBe(true);\n    return this;\n  }\n\n  checkClickItem(): this {\n    const point = this.firstDataPoint;\n    const clientPoint = this.chart.canvas.getClientByPoint(point.x, point.y);\n    const event = new MouseEvent('click', {\n      clientX: clientPoint.x,\n      clientY: clientPoint.y,\n    });\n    (this.chart.canvas.get('el') as HTMLElement).dispatchEvent(event);\n    return this;\n  }\n}\n\nexport function checkDelay<M, T>(module: M, comp: Type<T>, page: PageG2<T> | null = null): void {\n  if (page == null) {\n    page = new PageG2<T>().makeModule(module, comp, { dc: false });\n  }\n  const context = page.context as any;\n  if (typeof context.delay === 'undefined') {\n    console.warn(`You muse be dinfed \"delay\" property in test component`);\n    return;\n  }\n  context.delay = 100;\n  page.dc();\n  page.comp.ngOnDestroy();\n  expect(page.chart == null).toBe(true);\n  tick(201);\n  discardPeriodicTasks();\n}\n","import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\n\nexport class TestContext<T> {\n  constructor(public fixture: ComponentFixture<T>) {}\n\n  get component(): T {\n    return this.fixture.componentInstance;\n  }\n\n  get el(): HTMLElement {\n    return this.fixture.debugElement.nativeElement;\n  }\n\n  get dl(): DebugElement {\n    return this.fixture.debugElement;\n  }\n\n  get context(): T {\n    return this.fixture.componentInstance;\n  }\n\n  detectChanges(): void {\n    this.fixture.detectChanges();\n  }\n\n  resolve<T1>(component: Type<T1>): T1 {\n    return this.fixture.debugElement.injector.get(component) as T1;\n  }\n}\n\nexport const createTestContext = <T>(component: Type<T>) => {\n  return new TestContext<T>(TestBed.createComponent<T>(component));\n};\n","import { DebugElement } from '@angular/core';\nimport { tick } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { NzDropDownDirective } from 'ng-zorro-antd/dropdown';\nimport { dispatchFakeEvent } from './dispatch-events';\n\nexport const DROPDOWN_MIN_TIME = 1000;\n\n/**\n * 触发 dropdown\n */\nexport function dispatchDropDown(dl: DebugElement, trigger: 'mouseleave' | 'click', allowNull: boolean = true): boolean {\n  const directive = dl.query(By.directive(NzDropDownDirective));\n  if (allowNull && directive == null) {\n    return false;\n  }\n  const el = directive.injector.get<NzDropDownDirective>(NzDropDownDirective).elementRef.nativeElement as HTMLElement;\n  if (trigger === 'click') {\n    dispatchFakeEvent(el, 'click');\n  } else {\n    dispatchFakeEvent(el, 'mouseenter');\n  }\n  tick(DROPDOWN_MIN_TIME);\n  return true;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { dispatchFakeEvent } from './dispatch-events';\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param value Value to be set on the input.\n * @param element Element onto which to set the value.\n */\nexport function typeInElement(value: string, element: HTMLInputElement): void {\n  element.focus();\n  element.value = value;\n  dispatchFakeEvent(element, 'input');\n}\n"]}