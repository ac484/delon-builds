{"version":3,"file":"acl.js","sources":["ng://@delon/acl/src/acl.config.ts","ng://@delon/acl/src/acl.service.ts","ng://@delon/acl/src/acl.directive.ts","ng://@delon/acl/src/acl-if.directive.ts","ng://@delon/acl/src/acl-guard.ts","ng://@delon/acl/src/acl.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ACLCanType, ACLType } from './acl.type';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonACLConfig {\n  /**\n   * è·¯ç±å®å«å¤±è´¥åè·³è½¬ï¼é»è®¤ï¼`/403`\n   */\n  guard_url?: string = '/403';\n\n  /**\n   * `can` æ§è¡ååè°\n   */\n  preCan?: ((roleOrAbility: ACLCanType) => ACLType | null) | null;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { DelonACLConfig } from './acl.config';\nimport { ACLCanType, ACLType } from './acl.type';\n\n/**\n * è®¿é®æ§å¶æå¡\n */\n@Injectable({ providedIn: 'root' })\nexport class ACLService {\n  private roles: string[] = [];\n  private abilities: Array<number | string> = [];\n  private full = false;\n  private aclChange = new BehaviorSubject<ACLType | boolean | null>(null);\n\n  /** ACLåæ´éç¥ */\n  get change(): Observable<ACLType | boolean | null> {\n    return this.aclChange.asObservable();\n  }\n\n  /** è·åæææ°æ® */\n  get data() {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities,\n    };\n  }\n\n  constructor(private options: DelonACLConfig) {}\n\n  private parseACLType(val: string | string[] | ACLType | null): ACLType {\n    if (typeof val !== 'string' && !Array.isArray(val)) {\n      return val as ACLType;\n    }\n    if (Array.isArray(val)) {\n      return { role: val as string[] } as ACLType;\n    }\n    return {\n      role: [val],\n    } as ACLType;\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ææéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  set(value: ACLType) {\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * æ è¯å½åç¨æ·ä¸ºå¨éï¼å³ä¸åé\n   */\n  setFull(val: boolean) {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·æéè½åï¼ä¼åæ¸é¤ææï¼\n   */\n  setAbility(abilities: Array<number | string>) {\n    this.set({ ability: abilities } as ACLType);\n  }\n\n  /**\n   * è®¾ç½®å½åç¨æ·è§è²ï¼ä¼åæ¸é¤ææï¼\n   */\n  setRole(roles: string[]) {\n    this.set({ role: roles } as ACLType);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·å¢å è§è²ææéè½å\n   */\n  add(value: ACLType) {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå è§è²\n   */\n  attachRole(roles: string[]) {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·éå æé\n   */\n  attachAbility(abilities: Array<number | string>) {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤è§è²\n   */\n  removeRole(roles: string[]) {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * ä¸ºå½åç¨æ·ç§»é¤æé\n   */\n  removeAbility(abilities: Array<number | string>) {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºè§è²ï¼å¶å® `number` è¡¨ç¤ºAbility\n   *\n   * - å½ `full: true` æåæ° `null` æ¶è¿å `true`\n   * - è¥ä½¿ç¨ `ACLType` åæ°ï¼å¯ä»¥æå® `mode` æ ¡éªæ¨¡å¼\n   */\n  can(roleOrAbility: ACLCanType | null): boolean {\n    if (this.full === true || !roleOrAbility) {\n      return true;\n    }\n\n    const { preCan } = this.options;\n    if (preCan) {\n      roleOrAbility = preCan(roleOrAbility);\n    }\n    let t: ACLType = {};\n    if (typeof roleOrAbility === 'number') {\n      t = { ability: [roleOrAbility] };\n    } else if (Array.isArray(roleOrAbility) && roleOrAbility.length > 0 && typeof roleOrAbility[0] === 'number') {\n      t = { ability: roleOrAbility };\n    } else {\n      t = this.parseACLType(roleOrAbility);\n    }\n\n    if (t.role) {\n      if (t.mode === 'allOf') return t.role.every(v => this.roles.includes(v));\n      else return t.role.some(v => this.roles.includes(v));\n    }\n    if (t.ability) {\n      if (t.mode === 'allOf') {\n        return (t.ability as any[]).every(v => this.abilities.includes(v));\n      } else {\n        return (t.ability as any[]).some(v => this.abilities.includes(v));\n      }\n    }\n    return false;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (typeof value === 'number' || typeof value === 'string' || Array.isArray(value)) {\n      value = { ability: Array.isArray(value) ? value : [value] } as ACLType;\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * å½åç¨æ·æ¯å¦æå¯¹åºæéç¹\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { filter } from 'rxjs/operators';\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({ selector: '[acl]' })\nexport class ACLDirective implements OnDestroy {\n  protected _value: ACLCanType;\n  protected change$: Subscription;\n\n  @Input('acl')\n  set acl(value: ACLCanType) {\n    this.set(value);\n  }\n\n  @Input('acl-ability')\n  set ability(value: ACLCanType) {\n    this.set(this.srv.parseAbility(value));\n  }\n\n  protected set(value: ACLCanType) {\n    this._value = value;\n    this._updateView();\n  }\n\n  protected _updateView(): void {\n    const CLS = 'acl__hide';\n    const el = this.el.nativeElement;\n    if (this.srv.can(this._value)) {\n      this.renderer.removeClass(el, CLS);\n    } else {\n      this.renderer.addClass(el, CLS);\n    }\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, protected srv: ACLService) {\n    this.change$ = this.srv.change.pipe(filter(r => r != null)).subscribe(() => this.set(this._value));\n  }\n\n  ngOnDestroy(): void {\n    this.change$.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ACLDirective } from './acl.directive';\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({ selector: '[aclIf]' })\nexport class ACLIfDirective extends ACLDirective {\n  constructor(\n    private _viewContainer: ViewContainerRef,\n    private templateRef: TemplateRef<ACLCanType>,\n    el: ElementRef,\n    renderer: Renderer2,\n    srv: ACLService,\n  ) {\n    super(el, renderer, srv);\n  }\n\n  @Input('aclIf')\n  set acl(value: ACLCanType) {\n    this.set(value);\n  }\n\n  protected _updateView(): void {\n    this._viewContainer.clear();\n    if (this.srv.can(this._value)) {\n      this._viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { of, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { DelonACLConfig } from './acl.config';\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Injectable({ providedIn: 'root' })\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private srv: ACLService, private router: Router, private options: DelonACLConfig) {}\n\n  private process(guard: ACLCanType | Observable<ACLCanType>): Observable<boolean> {\n    return (guard && guard instanceof Observable\n      ? guard\n      : of(typeof guard !== 'undefined' && guard !== null ? (guard as ACLCanType) : null)\n    ).pipe(\n      map(v => this.srv.can(v)),\n      tap(v => {\n        if (v) return;\n        this.router.navigateByUrl(this.options.guard_url!);\n      }),\n    );\n  }\n\n  // lazy loading\n  canLoad(route: Route): Observable<boolean> {\n    return this.process((route.data && route.data.guard) || null);\n  }\n  // all children route\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.canActivate(childRoute, state);\n  }\n  // route\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot | null): Observable<boolean> {\n    return this.process((route.data && route.data.guard) || null);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ACLIfDirective } from './acl-if.directive';\nimport { ACLDirective } from './acl.directive';\n\nconst COMPONENTS = [ACLDirective, ACLIfDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class DelonACLModule {}\n"],"names":[],"mappings":"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"}