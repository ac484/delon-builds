{"version":3,"file":"auth.js","sources":["../../../packages/auth/src/auth.config.ts","../../packages/auth/src/store/local-storage.service.ts","../../packages/auth/src/store/interface.ts","../../packages/auth/src/token/token.service.ts","../../packages/auth/src/token/interface.ts","../../packages/auth/src/social/social.service.ts","../../packages/auth/src/store/memory.service.ts","../../packages/auth/src/store/session-storage.service.ts","../../packages/auth/src/store/cookie-storage.service.ts","../../packages/auth/src/token/helper.ts","../../packages/auth/src/token/base.interceptor.ts","../packages/auth/src/token/jwt/jwt.helper.ts","../packages/auth/src/token/jwt/jwt.model.ts","../packages/auth/src/token/jwt/jwt.interceptor.ts","../packages/auth/src/token/jwt/jwt.guard.ts","../packages/auth/src/token/simple/simple.model.ts","../packages/auth/src/token/simple/simple.interceptor.ts","../packages/auth/src/token/simple/simple.guard.ts","../../../packages/auth/src/auth.module.ts"],"sourcesContent":["import { AlainAuthConfig, AlainConfigService } from '@delon/util';\n\nexport const AUTH_DEFAULT_CONFIG: AlainAuthConfig = {\n  store_key: `_token`,\n  token_invalid_redirect: true,\n  token_exp_offset: 10,\n  token_send_key: `token`,\n  // tslint:disable-next-line: no-invalid-template-strings\n  token_send_template: '${token}',\n  token_send_place: 'header',\n  login_url: '/login',\n  ignores: [/\\/login/, /assets\\//, /passport\\//],\n  allow_anonymous_key: `_allow_anonymous`,\n  executeOtherInterceptors: true,\n  refreshTime: 3000,\n  refreshOffset: 6000,\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainAuthConfig {\n  return srv.merge('auth', AUTH_DEFAULT_CONFIG)!;\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\nexport function DA_STORE_TOKEN_LOCAL_FACTORY(): IStore {\n  return new LocalStorageStore();\n}\n\n/**\n * `localStorage` storage, **not lost after closing the browser**.\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: LocalStorageStore }\n * ```\n */\nexport class LocalStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(localStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { ITokenModel } from '../token/interface';\nimport { DA_STORE_TOKEN_LOCAL_FACTORY } from './local-storage.service';\n\nexport const DA_STORE_TOKEN = new InjectionToken<IStore>('AUTH_STORE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_STORE_TOKEN_LOCAL_FACTORY,\n});\n\n// tslint:disable-next-line: interface-name\nexport interface IStore {\n  get(key: string): ITokenModel;\n\n  set(key: string, value: ITokenModel): boolean;\n\n  remove(key: string): void;\n}\n","import { inject, Inject, Injectable, OnDestroy } from '@angular/core';\nimport { AlainAuthConfig, AlainConfigService } from '@delon/util';\nimport { BehaviorSubject, interval, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, map, share } from 'rxjs/operators';\nimport { mergeConfig } from '../auth.config';\nimport { DA_STORE_TOKEN, IStore } from '../store/interface';\nimport { AuthReferrer, ITokenModel, ITokenService } from './interface';\n\nexport function DA_SERVICE_TOKEN_FACTORY(): ITokenService {\n  return new TokenService(inject(AlainConfigService), inject(DA_STORE_TOKEN));\n}\n\n/**\n * 维护Token信息服务，[在线文档](https://ng-alain.com/auth)\n */\n@Injectable()\nexport class TokenService implements ITokenService, OnDestroy {\n  private refresh$ = new Subject<ITokenModel>();\n  private change$ = new BehaviorSubject<ITokenModel | null>(null);\n  private interval$: Subscription;\n  private _referrer: AuthReferrer = {};\n  private _options: AlainAuthConfig;\n\n  constructor(configSrv: AlainConfigService, @Inject(DA_STORE_TOKEN) private store: IStore) {\n    this._options = mergeConfig(configSrv);\n  }\n\n  get refresh(): Observable<ITokenModel> {\n    this.builderRefresh();\n    return this.refresh$.pipe(share());\n  }\n\n  get login_url(): string | undefined {\n    return this._options.login_url;\n  }\n\n  get referrer(): AuthReferrer {\n    return this._referrer;\n  }\n\n  get options(): AlainAuthConfig {\n    return this._options;\n  }\n\n  set(data: ITokenModel): boolean {\n    this.change$.next(data);\n    return this.store.set(this._options.store_key!, data);\n  }\n\n  get(type?: any): any;\n  get<T extends ITokenModel>(type?: new () => T): T {\n    const data = this.store.get(this._options.store_key!);\n    return type ? (Object.assign(new type(), data) as T) : (data as T);\n  }\n\n  clear(options: { onlyToken: boolean } = { onlyToken: false }): void {\n    let data: ITokenModel | null = null;\n    if (options.onlyToken === true) {\n      data = this.get() as ITokenModel;\n      data.token = ``;\n      this.set(data);\n    } else {\n      this.store.remove(this._options.store_key!);\n    }\n    this.change$.next(data);\n  }\n\n  change(): Observable<ITokenModel | null> {\n    return this.change$.pipe(share());\n  }\n\n  private builderRefresh(): void {\n    const { refreshTime, refreshOffset } = this._options;\n    this.cleanRefresh();\n    this.interval$ = interval(refreshTime)\n      .pipe(\n        map(() => {\n          const item = this.get() as ITokenModel;\n          const expired = item.expired || item.exp || 0;\n          if (expired <= 0) {\n            return null;\n          }\n\n          const curTime = new Date().valueOf() + refreshOffset!;\n          return expired <= curTime ? item : null;\n        }),\n        filter(v => v != null),\n      )\n      .subscribe(res => this.refresh$.next(res!));\n  }\n\n  private cleanRefresh(): void {\n    if (this.interval$ && !this.interval$.closed) {\n      this.interval$.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRefresh();\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { AlainAuthConfig } from '@delon/util';\nimport { Observable } from 'rxjs';\nimport { DA_SERVICE_TOKEN_FACTORY } from './token.service';\n\nexport const DA_SERVICE_TOKEN = new InjectionToken<ITokenService>('DA_SERVICE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_SERVICE_TOKEN_FACTORY,\n});\n\n// tslint:disable-next-line: interface-name\nexport interface ITokenModel {\n  [key: string]: any;\n\n  token: string | null | undefined;\n\n  /**\n   * 过期时间，单位：ms\n   * - 不管Simple、JWT模式都必须指定\n   */\n  expired?: number;\n}\n\nexport interface AuthReferrer {\n  url?: string | null | undefined;\n}\n\n// tslint:disable-next-line: interface-name\nexport interface ITokenService {\n  /**\n   * 授权失败后跳转路由路径（支持外部链接地址），通过设置[全局配置](https://ng-alain.com/docs/global-config)来改变\n   */\n  readonly login_url: string | undefined;\n\n  /**\n   * 当前请求页面的来源页面的地址\n   */\n  readonly referrer?: AuthReferrer;\n\n  readonly options: AlainAuthConfig;\n\n  /**\n   * 订阅刷新，订阅时会自动产生一个定时器，每隔一段时间进行一些校验\n   * - **注意** 会多次触发，请务必做好业务判断\n   */\n  readonly refresh: Observable<ITokenModel>;\n\n  /**\n   * 设置 Token 信息，当用户 Token 发生变动时都需要调用此方法重新刷新\n   * - 如果需要监听过期，需要传递 `expired` 值\n   */\n  set(data: ITokenModel | null): boolean;\n\n  /**\n   * 获取Token，形式包括：\n   * - `get()` 获取 Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` 获取 JWT Token\n   */\n  get(type?: any): ITokenModel | null;\n\n  /**\n   * 获取Token，形式包括：\n   * - `get()` 获取 Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` 获取 JWT Token\n   */\n  get<T extends ITokenModel>(type?: any): T;\n\n  /**\n   * 清除 Token 信息，当用户退出登录时调用。\n   * ```\n   * // 清除所有 Token 信息\n   * tokenService.clear();\n   * // 只清除 token 字段\n   * tokenService.clear({ onlyToken: true });\n   * ```\n   */\n  clear(options?: { onlyToken: boolean }): void;\n\n  /**\n   * 订阅 Token 对象变更通知\n   */\n  change(): Observable<ITokenModel | null>;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Observer } from 'rxjs';\nimport { DA_SERVICE_TOKEN, ITokenModel, ITokenService } from '../token/interface';\n\nconst OPENTYPE = '_delonAuthSocialType';\nconst HREFCALLBACK = '_delonAuthSocialCallbackByHref';\n\nexport type SocialOpenType = 'href' | 'window';\n\n@Injectable()\nexport class SocialService implements OnDestroy {\n  private _win: Window | null;\n  private _winTime: any;\n  private observer: Observer<ITokenModel | null>;\n\n  constructor(@Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService, @Inject(DOCUMENT) private doc: any, private router: Router) {}\n\n  /**\n   * 使用窗体打开授权页，返回值是 `Observable<ITokenModel>` 用于订阅授权后返回的结果\n   * @param url 获取授权地址\n   * @param callback 回调路由地址\n   * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'window';\n      windowFeatures?: string;\n    },\n  ): Observable<ITokenModel>;\n\n  /**\n   * 跳转至授权页\n   * @param url 获取授权地址\n   * @param callback 回调路由地址\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'href';\n    },\n  ): void;\n\n  /**\n   * 跳转至登录页，若为 `type=window` 时，返回值是 `Observable<ITokenModel>`\n   * @param url 获取授权地址\n   * @param callback 当 `type=href` 成功时的回调路由地址\n   * @param options.type 打开方式，默认 `window`\n   * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n   */\n  login(\n    url: string,\n    callback: string = '/',\n    options: {\n      type?: SocialOpenType;\n      windowFeatures?: string;\n    } = {},\n  ): Observable<ITokenModel | null> | void {\n    options = {\n      type: 'window',\n      windowFeatures: 'location=yes,height=570,width=520,scrollbars=yes,status=yes',\n      ...options,\n    };\n    localStorage.setItem(OPENTYPE, options.type!);\n    localStorage.setItem(HREFCALLBACK, callback);\n    if (options.type === 'href') {\n      this.doc.location.href = url;\n      return;\n    }\n\n    this._win = window.open(url, '_blank', options.windowFeatures);\n    this._winTime = setInterval(() => {\n      if (this._win && this._win.closed) {\n        this.ngOnDestroy();\n\n        let model = this.tokenService.get();\n        if (model && !model.token) model = null;\n\n        // 触发变更通知\n        if (model) {\n          this.tokenService.set(model);\n        }\n\n        this.observer.next(model);\n        this.observer.complete();\n      }\n    }, 100);\n    return new Observable((observer: Observer<ITokenModel | null>) => {\n      this.observer = observer;\n    });\n  }\n\n  /**\n   * 授权成功后的回调处理\n   *\n   * @param rawData 指定回调认证信息，为空时从根据当前URL解析\n   */\n  callback(rawData?: ITokenModel | string | null): ITokenModel {\n    // from uri\n    if (!rawData && this.router.url.indexOf('?') === -1) {\n      throw new Error(`url muse contain a ?`);\n    }\n    // parse\n    let data: ITokenModel = { token: `` };\n    if (typeof rawData === 'string') {\n      const rightUrl = rawData.split('?')[1].split('#')[0];\n      data = this.router.parseUrl('./?' + rightUrl).queryParams as ITokenModel;\n    } else {\n      data = rawData as ITokenModel;\n    }\n\n    if (!data || !data.token) throw new Error(`invalide token data`);\n    this.tokenService.set(data);\n\n    const url = localStorage.getItem(HREFCALLBACK) || '/';\n    localStorage.removeItem(HREFCALLBACK);\n    const type = localStorage.getItem(OPENTYPE);\n    localStorage.removeItem(OPENTYPE);\n    if (type === 'window') {\n      window.close();\n    } else {\n      this.router.navigateByUrl(url);\n    }\n\n    return data;\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this._winTime);\n    this._winTime = null;\n  }\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\n/**\n * 内存存储，关掉浏览器标签后**丢失**。\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: MemoryStore }\n * ```\n */\nexport class MemoryStore implements IStore {\n  private cache: { [key: string]: ITokenModel | null } = {};\n\n  get(key: string): ITokenModel {\n    return this.cache[key] || ({} as ITokenModel);\n  }\n\n  set(key: string, value: ITokenModel): boolean {\n    this.cache[key] = value;\n    return true;\n  }\n\n  remove(key: string): void {\n    this.cache[key] = null;\n  }\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\n/**\n * `sessionStorage` storage, **lost after closing the browser**.\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: SessionStorageStore }\n * ```\n */\nexport class SessionStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(sessionStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    sessionStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string): void {\n    sessionStorage.removeItem(key);\n  }\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\ndeclare var Cookies: any;\n\n/**\n * `cookie` storage, muse be install [js-cookie](https://github.com/js-cookie/js-cookie) libary and import `\"node_modules/js-cookie/dist/js.cookie.js\"` in `angular.json`\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: CookieStorageStore }\n * ```\n */\nexport class CookieStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(Cookies.get(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    Cookies.set(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string): void {\n    Cookies.remove(key);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlainAuthConfig } from '@delon/util';\nimport { DA_SERVICE_TOKEN, ITokenService } from './interface';\nimport { JWTTokenModel } from './jwt/jwt.model';\nimport { SimpleTokenModel } from './simple/simple.model';\n\nexport function CheckSimple(model: SimpleTokenModel | null): boolean {\n  return model != null && typeof model.token === 'string' && model.token.length > 0;\n}\n\nexport function CheckJwt(model: JWTTokenModel, offset: number): boolean {\n  return model != null && !!model.token && !model.isExpired(offset);\n}\n\nexport function ToLogin(options: AlainAuthConfig, injector: Injector, url?: string): void {\n  const router = injector.get<Router>(Router);\n  (injector.get(DA_SERVICE_TOKEN) as ITokenService).referrer!.url = url || router.url;\n  if (options.token_invalid_redirect === true) {\n    setTimeout(() => {\n      if (/^https?:\\/\\//g.test(options.login_url!)) {\n        injector.get(DOCUMENT).location.href = options.login_url as string;\n      } else {\n        router.navigate([options.login_url]);\n      }\n    });\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpParams,\n  HttpRequest,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport { Injectable, Injector, Optional } from '@angular/core';\nimport { AlainAuthConfig, AlainConfigService } from '@delon/util';\nimport { Observable, Observer } from 'rxjs';\nimport { mergeConfig } from '../auth.config';\nimport { ToLogin } from './helper';\nimport { ITokenModel } from './interface';\n\nclass HttpAuthInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n@Injectable()\nexport abstract class BaseInterceptor implements HttpInterceptor {\n  constructor(@Optional() protected injector: Injector) {}\n\n  protected model: ITokenModel;\n\n  abstract isAuth(options: AlainAuthConfig): boolean;\n\n  abstract setReq(req: HttpRequest<any>, options: AlainAuthConfig): HttpRequest<any>;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const options = mergeConfig(this.injector.get(AlainConfigService));\n    if (Array.isArray(options.ignores)) {\n      for (const item of options.ignores) {\n        if (item.test(req.url)) return next.handle(req);\n      }\n    }\n\n    const ingoreKey = options.allow_anonymous_key!;\n    let ingored = false;\n    let params = req.params;\n    let url = req.url;\n    if (req.params.has(ingoreKey)) {\n      params = req.params.delete(ingoreKey);\n      ingored = true;\n    }\n    const urlArr = req.url.split('?');\n    if (urlArr.length > 1) {\n      const queryStringParams = new HttpParams({ fromString: urlArr[1] });\n      if (queryStringParams.has(ingoreKey)) {\n        const queryString = queryStringParams.delete(ingoreKey).toString();\n        url = queryString.length > 0 ? `${urlArr[0]}?${queryString}` : urlArr[0];\n        ingored = true;\n      }\n    }\n    if (ingored) {\n      return next.handle(req.clone({ params, url }));\n    }\n\n    if (this.isAuth(options)) {\n      req = this.setReq(req, options);\n    } else {\n      ToLogin(options, this.injector);\n      // Interrupt Http request, so need to generate a new Observable\n      const err$ = new Observable((observer: Observer<HttpEvent<any>>) => {\n        const res = new HttpErrorResponse({\n          url: req.url,\n          headers: req.headers,\n          status: 401,\n          statusText: `来自 @delon/auth 的拦截，所请求URL未授权，若是登录API可加入 [url?_allow_anonymous=true] 来表示忽略校验，更多方法请参考： https://ng-alain.com/auth/getting-started#AlainAuthConfig\\nThe interception from @delon/auth, the requested URL is not authorized. If the login API can add [url?_allow_anonymous=true] to ignore the check, please refer to: https://ng-alain.com/auth/getting-started#AlainAuthConfig`,\n        });\n        observer.error(res);\n      });\n      if (options.executeOtherInterceptors) {\n        const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n        const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n        if (lastInterceptors.length > 0) {\n          const chain = lastInterceptors.reduceRight((_next, _interceptor) => new HttpAuthInterceptorHandler(_next, _interceptor), {\n            handle: (_: HttpRequest<any>) => err$,\n          });\n          return chain.handle(req);\n        }\n      }\n      return err$;\n    }\n    return next.handle(req);\n  }\n}\n","export function urlBase64Decode(str: string): string {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n  switch (output.length % 4) {\n    case 0: {\n      break;\n    }\n    case 2: {\n      output += '==';\n      break;\n    }\n    case 3: {\n      output += '=';\n      break;\n    }\n    default: {\n      throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n    }\n  }\n  return b64DecodeUnicode(output);\n}\n\nfunction b64decode(str: string): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let output = '';\n\n  str = String(str).replace(/=+$/, '');\n\n  for (\n    // initialize result and counters\n    // tslint:disable:no-conditional-assignment binary-expression-operand-order\n    let bc = 0, bs: any, buffer: any, idx = 0;\n    // get next character\n    (buffer = str.charAt(idx++));\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer &&\n    // tslint:disable-next-line: ban-comma-operator\n    ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n    // and if not first of each 4 characters,\n    // convert the first 8 bits to one ascii character\n    bc++ % 4)\n      ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n      : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str: string): string {\n  return decodeURIComponent(\n    Array.prototype.map\n      .call(b64decode(str), (c: string) => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(''),\n  );\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ITokenModel } from '../interface';\nimport { urlBase64Decode } from './jwt.helper';\n\nexport interface JWT {\n  /**\n   * Issuerd\n   */\n  iss: string;\n  /**\n   * Issued At\n   */\n  iat: string;\n  /**\n   * Subject\n   */\n  sub: string;\n  /**\n   * Expiration Time\n   */\n  exp: number;\n  /**\n   * Audience\n   */\n  aud: string;\n  /**\n   * Not Before\n   */\n  nbf: string;\n  /**\n   * JWT ID\n   */\n  jti: string;\n\n  [key: string]: any;\n  [key: number]: any;\n}\n\nexport class JWTTokenModel implements ITokenModel {\n  [key: string]: NzSafeAny;\n\n  token: string | null | undefined;\n\n  expired?: number;\n\n  /**\n   * 获取载荷信息\n   */\n  get payload(): JWT {\n    const parts = (this.token || '').split('.');\n    if (parts.length !== 3) throw new Error('JWT must have 3 parts');\n\n    const decoded = urlBase64Decode(parts[1]);\n    return JSON.parse(decoded);\n  }\n\n  /**\n   * 获取过期时间戳（单位：ms）\n   */\n  get exp(): number | null {\n    const decoded = this.payload;\n    if (!decoded.hasOwnProperty('exp')) return null;\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    return date.valueOf();\n  }\n\n  /**\n   * 检查Token是否过期，当`payload` 包含 `exp` 字段时有效，若无 `exp` 字段直接返回 `null`\n   *\n   * @param offsetSeconds 偏移量\n   */\n  isExpired(offsetSeconds: number = 0): boolean | null {\n    const exp = this.exp;\n    if (exp == null) return null;\n\n    return !(exp > new Date().valueOf() + offsetSeconds * 1000);\n  }\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AlainAuthConfig } from '@delon/util';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckJwt } from '../helper';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\n\n/**\n * JWT 拦截器\n *\n * ```\n * // app.module.ts\n * { provide: HTTP_INTERCEPTORS, useClass: JWTInterceptor, multi: true}\n * ```\n */\n@Injectable()\nexport class JWTInterceptor extends BaseInterceptor {\n  isAuth(options: AlainAuthConfig): boolean {\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get<JWTTokenModel>(JWTTokenModel);\n    return CheckJwt(this.model as JWTTokenModel, options.token_exp_offset!);\n  }\n\n  setReq(req: HttpRequest<any>, _options: AlainAuthConfig): HttpRequest<any> {\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.model.token}`,\n      },\n    });\n  }\n}\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanLoad, Route, RouterStateSnapshot, UrlSegment } from '@angular/router';\nimport { AlainAuthConfig } from '@delon/util';\nimport { CheckJwt, ToLogin } from '../helper';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\n\n/**\n * JWT 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ JWTGuard ]\n * },\n * {\n *   path: 'my',\n *   canActivateChild: [JWTGuard],\n *   children: [\n *     { path: 'profile', component: MockComponent }\n *   ],\n * },\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class JWTGuard implements CanActivate, CanActivateChild, CanLoad {\n  private url: string | undefined;\n\n  private get cog(): AlainAuthConfig {\n    return this.srv.options;\n  }\n\n  constructor(@Inject(DA_SERVICE_TOKEN) private srv: ITokenService, private injector: Injector) {}\n\n  private process(): boolean {\n    const res = CheckJwt(this.srv.get<JWTTokenModel>(JWTTokenModel), this.cog.token_exp_offset!);\n    if (!res) {\n      ToLogin(this.cog, this.injector, this.url);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(route: Route, _segments: UrlSegment[]): boolean {\n    this.url = route.path;\n    return this.process();\n  }\n  // all children route\n  canActivateChild(_childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n  // route\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ITokenModel } from '../interface';\n\nexport class SimpleTokenModel implements ITokenModel {\n  [key: string]: NzSafeAny;\n\n  token: string;\n\n  expired?: number;\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AlainAuthConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckSimple } from '../helper';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { SimpleTokenModel } from './simple.model';\n\n/**\n * Simple 拦截器\n *\n * ```\n * // app.module.ts\n * { provide: HTTP_INTERCEPTORS, useClass: SimpleInterceptor, multi: true}\n * ```\n */\n@Injectable()\nexport class SimpleInterceptor extends BaseInterceptor {\n  isAuth(_options: AlainAuthConfig): boolean {\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get() as SimpleTokenModel;\n    return CheckSimple(this.model as SimpleTokenModel);\n  }\n\n  setReq(req: HttpRequest<any>, options: AlainAuthConfig): HttpRequest<any> {\n    const { token_send_template, token_send_key } = options;\n    const token = token_send_template!.replace(/\\$\\{([\\w]+)\\}/g, (_: string, g) => this.model[g]);\n    switch (options.token_send_place) {\n      case 'header':\n        const obj: NzSafeAny = {};\n        obj[token_send_key!] = token;\n        req = req.clone({\n          setHeaders: obj,\n        });\n        break;\n      case 'body':\n        const body = req.body || {};\n        body[token_send_key!] = token;\n        req = req.clone({\n          body,\n        });\n        break;\n      case 'url':\n        req = req.clone({\n          params: req.params.append(token_send_key!, token),\n        });\n        break;\n    }\n    return req;\n  }\n}\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanLoad, Route, RouterStateSnapshot, UrlSegment } from '@angular/router';\nimport { AlainAuthConfig } from '@delon/util';\nimport { CheckSimple, ToLogin } from '../helper';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { SimpleTokenModel } from './simple.model';\n\n/**\n * Simple 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ SimpleGuard ]\n * },\n * {\n *   path: 'my',\n *   canActivateChild: [SimpleGuard],\n *   children: [\n *     { path: 'profile', component: MockComponent }\n *   ],\n * },\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class SimpleGuard implements CanActivate, CanActivateChild, CanLoad {\n  private url?: string;\n\n  private get cog(): AlainAuthConfig {\n    return this.srv.options;\n  }\n\n  constructor(@Inject(DA_SERVICE_TOKEN) private srv: ITokenService, private injector: Injector) {}\n\n  private process(): boolean {\n    const res = CheckSimple(this.srv.get() as SimpleTokenModel);\n    if (!res) {\n      ToLogin(this.cog, this.injector, this.url);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(route: Route, _segments: UrlSegment[]): boolean {\n    this.url = route.path;\n    return this.process();\n  }\n  // all children route\n  canActivateChild(_childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n  // route\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class DelonAuthModule {}\n"],"names":[],"mappings":"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"}