{"version":3,"file":"auth.js.map","sources":["ng://@delon/auth/src/token/interface.ts","ng://@delon/auth/src/social/social.service.ts","ng://@delon/auth/src/store/interface.ts","ng://@delon/auth/src/store/local-storage.service.ts","ng://@delon/auth/src/store/memory.service.ts","ng://@delon/auth/src/store/session-storage.service.ts","ng://@delon/auth/src/auth.config.ts","ng://@delon/auth/src/win_tokens.ts","ng://@delon/auth/src/token/helper.ts","ng://@delon/auth/src/token/base.interceptor.ts","ng://@delon/auth/src/token/token.service.ts","ng://@delon/auth/src/token/jwt/jwt.helper.ts","ng://@delon/auth/src/token/jwt/jwt.model.ts","ng://@delon/auth/src/token/jwt/jwt.interceptor.ts","ng://@delon/auth/src/token/jwt/jwt.guard.ts","ng://@delon/auth/src/token/simple/simple.model.ts","ng://@delon/auth/src/token/simple/simple.interceptor.ts","ng://@delon/auth/src/token/simple/simple.guard.ts","ng://@delon/auth/src/auth.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport const DA_SERVICE_TOKEN = new InjectionToken<ITokenService>(\r\n  'DELON_AUTH_TOKEN_SERVICE_TOKEN',\r\n);\r\n\r\nexport interface ITokenModel {\r\n  [key: string]: any;\r\n\r\n  token: string;\r\n}\r\n\r\nexport interface ITokenService {\r\n  set(data: ITokenModel): boolean;\r\n\r\n  /**\r\n   * è·åTokenï¼å½¢å¼åæ¬ï¼\r\n   * - `get()` è·å Simple Token\r\n   * - `get<JWTTokenModel>(JWTTokenModel)` è·å JWT Token\r\n   */\r\n  get(type?: any): ITokenModel;\r\n\r\n  /**\r\n   * è·åTokenï¼å½¢å¼åæ¬ï¼\r\n   * - `get()` è·å Simple Token\r\n   * - `get<JWTTokenModel>(JWTTokenModel)` è·å JWT Token\r\n   */\r\n  get<T extends ITokenModel>(type?: any): T;\r\n\r\n  clear(): void;\r\n\r\n  change(): Observable<ITokenModel>;\r\n\r\n  /** è·åç»å½å°å */\r\n  readonly login_url: string;\r\n\r\n  /** ç»å½åè·³è½¬å°åï¼æªæå®æ¶è¿å `/` */\r\n  redirect: string;\r\n}\r\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Observer, Observable } from 'rxjs';\r\n\r\nimport {\r\n  ITokenModel,\r\n  ITokenService,\r\n  DA_SERVICE_TOKEN,\r\n} from '../token/interface';\r\n\r\nconst OPENTYPE = '_delonAuthSocialType';\r\nconst HREFCALLBACK = '_delonAuthSocialCallbackByHref';\r\n\r\nexport type SocialOpenType = 'href' | 'window';\r\n\r\n@Injectable()\r\nexport class SocialService implements OnDestroy {\r\n  private _win: Window;\r\n  private _win$: any;\r\n  private observer: Observer<ITokenModel>;\r\n\r\n  constructor(\r\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\r\n    @Inject(DOCUMENT) private doc: any,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  /**\r\n   * ä½¿ç¨çªä½æå¼ææé¡µï¼è¿åå¼æ¯ `Observable<ITokenModel>` ç¨äºè®¢éææåè¿åçç»æ\r\n   * @param url è·åææå°å\r\n   * @param callback åè°è·¯ç±å°å\r\n   * @param options.windowFeatures ç­å `window.open` ç `features` åæ°å¼\r\n   */\r\n  login(\r\n    url: string,\r\n    callback?: string,\r\n    options?: {\r\n      type?: 'window';\r\n      windowFeatures?: string;\r\n    },\r\n  ): Observable<ITokenModel>;\r\n\r\n  /**\r\n   * è·³è½¬è³ææé¡µ\r\n   * @param url è·åææå°å\r\n   * @param callback åè°è·¯ç±å°å\r\n   */\r\n  login(\r\n    url: string,\r\n    callback?: string,\r\n    options?: {\r\n      type?: 'href';\r\n    },\r\n  ): void;\r\n\r\n  /**\r\n   * è·³è½¬è³ç»å½é¡µï¼è¥ä¸º `type=window` æ¶ï¼è¿åå¼æ¯ `Observable<ITokenModel>`\r\n   * @param url è·åææå°å\r\n   * @param callback å½ `type=href` æåæ¶çåè°è·¯ç±å°å\r\n   * @param options.type æå¼æ¹å¼ï¼é»è®¤ `window`\r\n   * @param options.windowFeatures ç­å `window.open` ç `features` åæ°å¼\r\n   */\r\n  login(\r\n    url: string,\r\n    callback: string = '/',\r\n    options: {\r\n      type?: SocialOpenType;\r\n      windowFeatures?: string;\r\n    } = {},\r\n  ): Observable<ITokenModel> | void {\r\n    options = Object.assign(\r\n      {\r\n        type: 'window',\r\n        windowFeatures:\r\n          'location=yes,height=570,width=520,scrollbars=yes,status=yes',\r\n      },\r\n      options,\r\n    );\r\n    localStorage.setItem(OPENTYPE, options.type);\r\n    localStorage.setItem(HREFCALLBACK, callback);\r\n    if (options.type === 'href') {\r\n      this.doc.location.href = url;\r\n      return;\r\n    }\r\n\r\n    this._win = window.open(url, '_blank', options.windowFeatures);\r\n    this._win$ = setInterval(() => {\r\n      if (this._win && this._win.closed) {\r\n        this.ngOnDestroy();\r\n\r\n        let model = this.tokenService.get();\r\n        if (model && !model.token) model = null;\r\n\r\n        // è§¦ååæ´éç¥\r\n        if (model) {\r\n          this.tokenService.set(model);\r\n        }\r\n\r\n        this.observer.next(model);\r\n        this.observer.complete();\r\n      }\r\n    }, 100);\r\n    return Observable.create((observer: Observer<ITokenModel>) => {\r\n      this.observer = observer;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * æææååçåè°å¤ç\r\n   *\r\n   * @param rawData æå®åè°è®¤è¯ä¿¡æ¯ï¼ä¸ºç©ºæ¶ä»æ ¹æ®å½åURLè§£æ\r\n   */\r\n  callback(rawData?: string | ITokenModel): ITokenModel {\r\n    // from uri\r\n    if (!rawData && this.router.url.indexOf('?') === -1) {\r\n      throw new Error(`url muse contain a ?`);\r\n    }\r\n    // parse\r\n    let data: ITokenModel = { token: `` };\r\n    if (typeof rawData === 'string') {\r\n      const rightUrl = rawData.split('?')[1].split('#')[0];\r\n      data = <any>this.router.parseUrl('./?' + rightUrl).queryParams;\r\n    } else {\r\n      data = rawData;\r\n    }\r\n\r\n    if (!data || !data.token) throw new Error(`invalide token data`);\r\n    this.tokenService.set(data);\r\n\r\n    const url = localStorage.getItem(HREFCALLBACK) || '/';\r\n    localStorage.removeItem(HREFCALLBACK);\r\n    const type = localStorage.getItem(OPENTYPE);\r\n    localStorage.removeItem(OPENTYPE);\r\n    if (type === 'window') {\r\n      window.close();\r\n    } else {\r\n      this.router.navigateByUrl(url);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    clearInterval(this._win$);\r\n    this._win$ = null;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { ITokenModel } from '../token/interface';\r\n\r\nexport const DA_STORE_TOKEN = new InjectionToken<IStore>('AUTH_STORE_TOKEN');\r\n\r\nexport interface IStore {\r\n  get(key: string): ITokenModel;\r\n\r\n  set(key: string, value: ITokenModel): boolean;\r\n\r\n  remove(key: string);\r\n}\r\n","import { IStore } from './interface';\r\nimport { ITokenModel } from '../token/interface';\r\n\r\nexport class LocalStorageStore implements IStore {\r\n  get(key: string): ITokenModel {\r\n    return JSON.parse(localStorage.getItem(key) || '{}') || {};\r\n  }\r\n\r\n  set(key: string, value: ITokenModel): boolean {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n    return true;\r\n  }\r\n\r\n  remove(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n}\r\n","import { IStore } from './interface';\r\nimport { ITokenModel } from '../token/interface';\r\n\r\nexport class MemoryStore implements IStore {\r\n  private cache: { [key: string]: ITokenModel } = {};\r\n\r\n  get(key: string): ITokenModel {\r\n    return this.cache[key] || <any>{};\r\n  }\r\n\r\n  set(key: string, value: ITokenModel): boolean {\r\n    this.cache[key] = value;\r\n    return true;\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.cache[key] = null;\r\n  }\r\n}\r\n","import { IStore } from './interface';\r\nimport { ITokenModel } from '../token/interface';\r\n\r\nexport class SessionStorageStore implements IStore {\r\n  get(key: string): ITokenModel {\r\n    return JSON.parse(sessionStorage.getItem(key) || '{}') || {};\r\n  }\r\n\r\n  set(key: string, value: ITokenModel): boolean {\r\n    sessionStorage.setItem(key, JSON.stringify(value));\r\n    return true;\r\n  }\r\n\r\n  remove(key: string) {\r\n    sessionStorage.removeItem(key);\r\n  }\r\n}\r\n","export class DelonAuthConfig {\r\n  /**\r\n   * å­å¨KEYå¼\r\n   */\r\n  store_key? = '_token';\r\n  /**\r\n   * æ ææ¶è·³è½¬è³ç»å½é¡µï¼åæ¬ï¼\r\n   * - æ ætokenå¼\r\n   * - tokenå·²è¿æï¼éJWTï¼\r\n   */\r\n  token_invalid_redirect? = true;\r\n  /**\r\n   * tokenè¿ææ¶é´åç§»å¼ï¼é»è®¤ï¼`10` ç§ï¼åä½ï¼ç§ï¼\r\n   */\r\n  token_exp_offset? = 10;\r\n  /**\r\n   * åétokenåæ°åï¼é»è®¤ï¼token\r\n   */\r\n  token_send_key? = 'token';\r\n  /**\r\n   * åétokenæ¨¡æ¿ï¼é»è®¤ä¸ºï¼`${token}`ï¼ï¼ä½¿ç¨ `${token}` è¡¨ç¤ºtokenç¹ä½ç¬¦ï¼ä¾å¦ï¼\r\n   *\r\n   * - `Bearer ${token}`\r\n   */\r\n  token_send_template? = '${token}';\r\n  /**\r\n   * åétokenåæ°ä½ç½®ï¼é»è®¤ï¼header\r\n   */\r\n  token_send_place?: 'header' | 'body' | 'url' = 'header';\r\n  /**\r\n   * ç»å½é¡µè·¯ç±å°å\r\n   */\r\n  login_url? = `/login`;\r\n  /**\r\n   * å¿½ç¥TOKENçURLå°ååè¡¨ï¼é»è®¤å¼ä¸ºï¼[ /\\/login/, /assets\\//, /passport\\// ]\r\n   */\r\n  ignores?: RegExp[] = [/\\/login/, /assets\\//, /passport\\//];\r\n  /**\r\n   * åè®¸å¿åç»å½KEYï¼è¥è¯·æ±åæ°ä¸­å¸¦æè¯¥KEYè¡¨ç¤ºå¿½ç¥TOKEN\r\n   */\r\n  allow_anonymous_key? = `_allow_anonymous`;\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const WINDOW = new InjectionToken<any>('Window');\r\n","import { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SimpleTokenModel } from './simple/simple.model';\r\nimport { JWTTokenModel } from './jwt/jwt.model';\r\nimport { DelonAuthConfig } from '../auth.config';\r\nimport { WINDOW } from '../win_tokens';\r\n\r\nexport function CheckSimple(model: SimpleTokenModel): boolean {\r\n  return (\r\n    model != null && typeof model.token === 'string' && model.token.length > 0\r\n  );\r\n}\r\n\r\nexport function CheckJwt(model: JWTTokenModel, offset: number): boolean {\r\n  return model != null && model.token && !model.isExpired(offset);\r\n}\r\n\r\nexport function ToLogin(options: DelonAuthConfig, injector: Injector) {\r\n  if (options.token_invalid_redirect === true) {\r\n    setTimeout(() => {\r\n      if (/^https?:\\/\\//g.test(options.login_url)) {\r\n        injector.get(WINDOW).location.href = options.login_url;\r\n      } else {\r\n        injector.get(Router).navigate([options.login_url]);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injector, Optional } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpSentEvent,\r\n  HttpHeaderResponse,\r\n  HttpProgressEvent,\r\n  HttpResponse,\r\n  HttpUserEvent,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { _HttpClient } from '@delon/theme';\r\n\r\nimport { ITokenModel } from './interface';\r\nimport { DelonAuthConfig } from '../auth.config';\r\nimport { ToLogin } from './helper';\r\n\r\nexport abstract class BaseInterceptor implements HttpInterceptor {\r\n  constructor(@Optional() protected injector: Injector) {}\r\n\r\n  protected model: ITokenModel;\r\n\r\n  abstract isAuth(options: DelonAuthConfig): boolean;\r\n\r\n  abstract setReq(\r\n    req: HttpRequest<any>,\r\n    options: DelonAuthConfig,\r\n  ): HttpRequest<any>;\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable<\r\n    | HttpSentEvent\r\n    | HttpHeaderResponse\r\n    | HttpProgressEvent\r\n    | HttpResponse<any>\r\n    | HttpUserEvent<any>\r\n  > {\r\n    const options = Object.assign(\r\n      new DelonAuthConfig(),\r\n      this.injector.get(DelonAuthConfig, null),\r\n    );\r\n    if (options.ignores) {\r\n      for (const item of options.ignores as RegExp[]) {\r\n        if (item.test(req.url)) return next.handle(req);\r\n      }\r\n    }\r\n\r\n    if (\r\n      options.allow_anonymous_key &&\r\n      (req.params.has(options.allow_anonymous_key) ||\r\n        this.injector\r\n          .get(Router)\r\n          .parseUrl(req.urlWithParams)\r\n          .queryParamMap.has(options.allow_anonymous_key))\r\n    ) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    if (this.isAuth(options)) {\r\n      req = this.setReq(req, options);\r\n    } else {\r\n      ToLogin(options, this.injector);\r\n      // observer.errorï¼ä¼å¯¼ååç»­æ¦æªå¨æ æ³è§¦åï¼å æ­¤ï¼éè¦å¤ç `_HttpClient` ç¶æé®é¢\r\n      const hc = this.injector.get(_HttpClient, null);\r\n      if (hc) hc.end();\r\n      return new Observable((observer: Observer<HttpEvent<any>>) => {\r\n        const res = new HttpErrorResponse({\r\n          status: 401,\r\n          statusText: `From Simple Intercept --> https://ng-alain.com/docs/auth`,\r\n        });\r\n        observer.error(res);\r\n      });\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { ITokenService, ITokenModel } from './interface';\r\nimport { DA_STORE_TOKEN, IStore } from '../store/interface';\r\nimport { DelonAuthConfig } from '../auth.config';\r\n\r\n@Injectable()\r\nexport class TokenService implements ITokenService {\r\n  private change$: BehaviorSubject<ITokenModel> = new BehaviorSubject<\r\n    ITokenModel\r\n  >(null);\r\n  private data: ITokenModel;\r\n  private _redirect: string;\r\n\r\n  constructor(\r\n    private options: DelonAuthConfig,\r\n    @Inject(DA_STORE_TOKEN) private store: IStore,\r\n  ) {}\r\n\r\n  get login_url(): string {\r\n    return this.options.login_url;\r\n  }\r\n\r\n  set redirect(url: string) {\r\n    this._redirect = url;\r\n  }\r\n\r\n  get redirect() {\r\n    return this._redirect || '/';\r\n  }\r\n\r\n  set(data: ITokenModel): boolean {\r\n    this.change$.next(data);\r\n    return this.store.set(this.options.store_key, data);\r\n  }\r\n\r\n  get(type?: any);\r\n  get<T extends ITokenModel>(type?: { new (): T }): T {\r\n    const data = this.store.get(this.options.store_key);\r\n    return type ? (Object.assign(new type(), data) as T) : (data as T);\r\n  }\r\n\r\n  clear() {\r\n    this.change$.next(null);\r\n    this.store.remove(this.options.store_key);\r\n  }\r\n\r\n  change(): Observable<ITokenModel> {\r\n    return this.change$.pipe(share());\r\n  }\r\n}\r\n","export function urlBase64Decode(str: string): string {\r\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n  switch (output.length % 4) {\r\n    case 0: {\r\n      break;\r\n    }\r\n    case 2: {\r\n      output += '==';\r\n      break;\r\n    }\r\n    case 3: {\r\n      output += '=';\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error(\r\n        `'atob' failed: The string to be decoded is not correctly encoded.`,\r\n      );\r\n    }\r\n  }\r\n  return b64DecodeUnicode(output);\r\n}\r\n\r\nfunction b64decode(str: string): string {\r\n  const chars =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n  let output: string = '';\r\n\r\n  str = String(str).replace(/=+$/, '');\r\n\r\n  for (\r\n    // initialize result and counters\r\n    let bc: number = 0, bs: any, buffer: any, idx: number = 0;\r\n    // get next character\r\n    (buffer = str.charAt(idx++));\r\n    // character found in table? initialize bit storage and add its ascii value;\r\n    ~buffer &&\r\n    ((bs = bc % 4 ? bs * 64 + buffer : buffer),\r\n    // and if not first of each 4 characters,\r\n    // convert the first 8 bits to one ascii character\r\n    bc++ % 4)\r\n      ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\r\n      : 0\r\n  ) {\r\n    // try to find character in table (0-63, not found => -1)\r\n    buffer = chars.indexOf(buffer);\r\n  }\r\n  return output;\r\n}\r\n\r\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\nfunction b64DecodeUnicode(str: any) {\r\n  return decodeURIComponent(\r\n    Array.prototype.map\r\n      .call(b64decode(str), (c: any) => {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join(''),\r\n  );\r\n}\r\n","import { ITokenModel } from '../interface';\r\nimport { urlBase64Decode } from './jwt.helper';\r\n\r\nexport class JWTTokenModel implements ITokenModel {\r\n  [key: string]: any;\r\n\r\n  token: string;\r\n\r\n  /**\r\n   * è·åè½½è·ä¿¡æ¯\r\n   */\r\n  get payload(): any {\r\n    const parts = (this.token || '').split('.');\r\n    if (parts.length !== 3) throw new Error('JWT must have 3 parts');\r\n\r\n    const decoded = urlBase64Decode(parts[1]);\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  /**\r\n   * æ£æ¥Tokenæ¯å¦è¿æï¼`payload` å¿é¡»åå« `exp` æ¶ææ\r\n   *\r\n   * @param offsetSeconds åç§»é\r\n   */\r\n  isExpired(offsetSeconds: number = 0): boolean {\r\n    const decoded = this.payload;\r\n    if (!decoded.hasOwnProperty('exp')) return null;\r\n\r\n    const date = new Date(0);\r\n    date.setUTCSeconds(decoded.exp);\r\n\r\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest } from '@angular/common/http';\r\n\r\nimport { DelonAuthConfig } from '../../auth.config';\r\nimport { BaseInterceptor } from '../base.interceptor';\r\nimport { DA_SERVICE_TOKEN } from '../interface';\r\nimport { JWTTokenModel } from './jwt.model';\r\nimport { CheckJwt } from '../helper';\r\n\r\n@Injectable()\r\nexport class JWTInterceptor extends BaseInterceptor {\r\n  isAuth(options: DelonAuthConfig): boolean {\r\n    this.model = this.injector\r\n      .get(DA_SERVICE_TOKEN)\r\n      .get<JWTTokenModel>(JWTTokenModel);\r\n    return CheckJwt(this.model as JWTTokenModel, options.token_exp_offset);\r\n  }\r\n\r\n  setReq(req: HttpRequest<any>, options: DelonAuthConfig): HttpRequest<any> {\r\n    return req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.model.token}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable, Inject, Injector } from '@angular/core';\r\nimport { CanActivate, CanActivateChild, CanLoad } from '@angular/router';\r\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\r\nimport { JWTTokenModel } from './jwt.model';\r\nimport { DelonAuthConfig } from '../../auth.config';\r\nimport { CheckJwt, ToLogin } from '../helper';\r\n\r\n@Injectable()\r\nexport class JWTGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  private cog: DelonAuthConfig;\r\n  constructor(\r\n    @Inject(DA_SERVICE_TOKEN) private srv: ITokenService,\r\n    private injector: Injector,\r\n    cog: DelonAuthConfig,\r\n  ) {\r\n    this.cog = Object.assign(new DelonAuthConfig(), cog);\r\n  }\r\n\r\n  private process(): boolean {\r\n    const res = CheckJwt(\r\n      this.srv.get<JWTTokenModel>(JWTTokenModel),\r\n      this.cog.token_exp_offset,\r\n    );\r\n    if (!res) {\r\n      ToLogin(this.cog, this.injector);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // lazy loading\r\n  canLoad(): boolean {\r\n    return this.process();\r\n  }\r\n  // all children route\r\n  canActivateChild(): boolean {\r\n    return this.process();\r\n  }\r\n  // route\r\n  canActivate(): boolean {\r\n    return this.process();\r\n  }\r\n}\r\n","import { ITokenModel } from '../interface';\r\n\r\nexport class SimpleTokenModel implements ITokenModel {\r\n  [key: string]: any;\r\n\r\n  token: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest } from '@angular/common/http';\r\n\r\nimport { DelonAuthConfig } from '../../auth.config';\r\nimport { SimpleTokenModel } from './simple.model';\r\nimport { BaseInterceptor } from '../base.interceptor';\r\nimport { DA_SERVICE_TOKEN } from '../interface';\r\nimport { CheckSimple } from '../helper';\r\n\r\n@Injectable()\r\nexport class SimpleInterceptor extends BaseInterceptor {\r\n  isAuth(options: DelonAuthConfig): boolean {\r\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get() as SimpleTokenModel;\r\n    return CheckSimple(this.model as SimpleTokenModel);\r\n  }\r\n\r\n  setReq(req: HttpRequest<any>, options: DelonAuthConfig): HttpRequest<any> {\r\n    const token = options.token_send_template.replace(\r\n      /\\$\\{([\\w]+)\\}/g,\r\n      (_: string, g) => this.model[g],\r\n    );\r\n    switch (options.token_send_place) {\r\n      case 'header':\r\n        const obj = {};\r\n        obj[options.token_send_key] = token;\r\n        req = req.clone({\r\n          setHeaders: obj,\r\n        });\r\n        break;\r\n      case 'body':\r\n        const body = req.body || {};\r\n        body[options.token_send_key] = token;\r\n        req = req.clone({\r\n          body: body,\r\n        });\r\n        break;\r\n      case 'url':\r\n        req = req.clone({\r\n          params: req.params.append(options.token_send_key, token),\r\n        });\r\n        break;\r\n    }\r\n    return req;\r\n  }\r\n}\r\n","import { Injectable, Inject, Injector } from '@angular/core';\r\nimport { CanActivate, CanActivateChild, CanLoad } from '@angular/router';\r\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\r\nimport { CheckSimple, ToLogin } from '../helper';\r\nimport { DelonAuthConfig } from '../../auth.config';\r\n\r\n@Injectable()\r\nexport class SimpleGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  private cog: DelonAuthConfig;\r\n\r\n  constructor(\r\n    @Inject(DA_SERVICE_TOKEN) private srv: ITokenService,\r\n    private injector: Injector,\r\n    cog: DelonAuthConfig,\r\n  ) {\r\n    this.cog = Object.assign(new DelonAuthConfig(), cog);\r\n  }\r\n\r\n  private process(): boolean {\r\n    const res = CheckSimple(this.srv.get());\r\n    if (!res) {\r\n      ToLogin(this.cog, this.injector);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // lazy loading\r\n  canLoad(): boolean {\r\n    return this.process();\r\n  }\r\n  // all children route\r\n  canActivateChild(): boolean {\r\n    return this.process();\r\n  }\r\n  // route\r\n  canActivate(): boolean {\r\n    return this.process();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { DelonAuthConfig } from './auth.config';\r\nimport { DA_STORE_TOKEN } from './store/interface';\r\nimport { DA_SERVICE_TOKEN } from './token/interface';\r\nimport { LocalStorageStore } from './store/local-storage.service';\r\nimport { TokenService } from './token/token.service';\r\nimport { SimpleGuard } from './token/simple/simple.guard';\r\nimport { JWTGuard } from './token/jwt/jwt.guard';\r\nimport { WINDOW } from './win_tokens';\r\n\r\n@NgModule({})\r\nexport class DelonAuthModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DelonAuthModule,\r\n      providers: [\r\n        { provide: WINDOW, useValue: window },\r\n        DelonAuthConfig,\r\n        SimpleGuard,\r\n        JWTGuard,\r\n        { provide: DA_STORE_TOKEN, useClass: LocalStorageStore },\r\n        { provide: DA_SERVICE_TOKEN, useClass: TokenService },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}
