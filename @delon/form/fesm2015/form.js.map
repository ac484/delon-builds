{"version":3,"file":"form.js.map","sources":["ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { FormProperty, PropertyGroup } from './model/form.property';\r\n\r\nexport const ERRORSDEFAULT = {\r\n  'false schema':         `å¸å°æ¨¡å¼åºé`,\r\n  '$ref':                 `æ æ³æ¾å°å¼ç¨{ref}`,\r\n  additionalItems:        `ä¸åè®¸è¶è¿{ref}`,\r\n  additionalProperties:   `ä¸åè®¸æé¢å¤çå±æ§`,\r\n  anyOf:                  `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\r\n  dependencies:           `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\r\n  enum:                   `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\r\n  format:                 `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\r\n  type:                   `ç±»ååºå½æ¯ {type}`,\r\n  required:               `å¿å¡«é¡¹`,\r\n  maxLength:              `è³å¤ {limit} ä¸ªå­ç¬¦`,\r\n  minLength:              `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\r\n  minimum:                `å¿é¡» {comparison}{limit}`,\r\n  formatMinimum:          `å¿é¡» {comparison}{limit}`,\r\n  maximum:                `å¿é¡» {comparison}{limit}`,\r\n  formatMaximum:          `å¿é¡» {comparison}{limit}`,\r\n  maxItems:               `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\r\n  minItems:               `ä¸åºå°äº {limit} ä¸ªé¡¹`,\r\n  maxProperties:          `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\r\n  minProperties:          `ä¸åºå°äº {limit} ä¸ªå±æ§`,\r\n  multipleOf:             `åºå½æ¯ {multipleOf} çæ´æ°å`,\r\n  not:                    `ä¸åºå½å¹é \"not\" schema`,\r\n  oneOf:                  `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\r\n  pattern:                `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\r\n  uniqueItems:            `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\r\n  custom:                 `æ ¼å¼ä¸æ­£ç¡®`,\r\n  propertyNames:          `å±æ§å \"{propertyName}\" æ æ`,\r\n  patternRequired:        `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\r\n  switch:                 `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\r\n  const:                  `åºå½ç­äºå¸¸é`,\r\n  contains:               `åºå½åå«ä¸ä¸ªææé¡¹`,\r\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\r\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\r\n  if:                     `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\r\n};\r\n\r\nexport interface ErrorData {\r\n  keyword: string;\r\n  dataPath?: string;\r\n  schemaPath?: string;\r\n  params?: { [key: string]: any };\r\n  message?: string;\r\n  _custom?: boolean;\r\n}\r\n\r\nexport interface ErrorSchema {\r\n  /**\r\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\r\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\r\n   * - `false` æäº¤æ¶æ ¡éª\r\n   */\r\n  liveValidate?: boolean;\r\n  /**\r\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\r\n   */\r\n  errors?: { [ key: string ]: string | ((obj: ErrorData) => string) };\r\n  /**\r\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\r\n   */\r\n  firstVisual?: boolean;\r\n  /**\r\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\r\n   */\r\n  onlyVisual?: boolean;\r\n  /**\r\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\r\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\r\n   */\r\n  ingoreKeywords?: string[];\r\n  /**\r\n   * èªå®ä¹æ ¡éª\r\n   */\r\n  validator?: (value: any, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\r\n}\r\n","import { SFUISchemaItem } from './schema/ui';\r\nimport { ERRORSDEFAULT } from './errors';\r\nimport { SFButton } from './interface';\r\n\r\nexport class DelonFormConfig {\r\n  /**\r\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\r\n   *\r\n   * - `type` éå® Schema ä¸­ `type` ç±»å\r\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\r\n   */\r\n  ingoreKeywords?: string[] = ['type', 'enum'];\r\n  /**\r\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\r\n   */\r\n  ajv?: any;\r\n  /**\r\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\r\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\r\n   * - `false` æäº¤æ¶æ ¡éª\r\n   */\r\n  liveValidate? = true;\r\n  /**\r\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\r\n   */\r\n  autocomplete?: 'on' | 'off' = null;\r\n  /**\r\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\r\n   */\r\n  firstVisual? = false;\r\n  /**\r\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\r\n   */\r\n  onlyVisual? = false;\r\n  /**\r\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\r\n   */\r\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\r\n  /**\r\n   * é»è®¤å¨å±å¸å±\r\n   */\r\n  ui?: SFUISchemaItem;\r\n  /**\r\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\r\n   */\r\n  size?: 'default' | 'large' | 'small';\r\n  /**\r\n   * æé®é£æ ¼\r\n   */\r\n  button?: SFButton = {\r\n    submit_type: 'primary',\r\n    reset_type: 'default',\r\n  };\r\n  /**\r\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\r\n   */\r\n  uiDateStringFormat? = 'YYYY-MM-DD HH:mm:ss';\r\n  /**\r\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\r\n   */\r\n  uiDateNumberFormat? = 'x';\r\n  /**\r\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\r\n   */\r\n  uiTimeStringFormat? = 'HH:mm:ss';\r\n  /**\r\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\r\n   */\r\n  uiTimeNumberFormat? = 'x';\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { map, takeWhile } from 'rxjs/operators';\r\nimport { deepCopy } from '@delon/util';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\r\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\r\n\r\nexport const FORMATMAPS = {\r\n  'date-time': {\r\n    widget: 'date',\r\n    showTime: true,\r\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\r\n  },\r\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\r\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\r\n  time: { widget: 'time' },\r\n  'full-time': { widget: 'time' },\r\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\r\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\r\n  uri: { widget: 'upload' },\r\n  email: { widget: 'autocomplete', type: 'email' },\r\n  color: { widget: 'string', type: 'color' },\r\n  '': { widget: 'string' },\r\n};\r\n\r\nexport function isBlank(o: any) {\r\n  return o == null;\r\n}\r\n\r\nexport function toBool(value: any, defaultValue: boolean) {\r\n  return value == null ? defaultValue : `${value}` !== 'false';\r\n}\r\n\r\nexport function di(...args) {\r\n  // tslint:disable-next-line:no-console\r\n  console.warn(...args);\r\n}\r\n\r\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\r\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\r\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\r\n  if (match && match[1]) {\r\n    // parser JSON Pointer\r\n    const parts = match[1].split('/');\r\n    let current: any = definitions;\r\n    for (let part of parts) {\r\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\r\n      if (current.hasOwnProperty(part)) {\r\n        current = current[part];\r\n      } else {\r\n        throw new Error(`Could not find a definition for ${$ref}.`);\r\n      }\r\n    }\r\n    return current;\r\n  }\r\n  throw new Error(`Could not find a definition for ${$ref}.`);\r\n}\r\n\r\n/**\r\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\r\n */\r\nexport function retrieveSchema(\r\n  schema: SFSchema,\r\n  definitions: SFSchemaDefinition = {},\r\n): SFSchema {\r\n  if (schema.hasOwnProperty('$ref')) {\r\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\r\n    // remove $ref property\r\n    const { $ref, ...localSchema } = schema;\r\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\r\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\r\n\r\n  if (!schema.if.properties)\r\n    throw new Error(`if: does not contain 'properties'`);\r\n\r\n  const allKeys = Object.keys(schema.properties),\r\n    ifKeys = Object.keys(schema.if.properties);\r\n  detectKey(allKeys, ifKeys);\r\n  detectKey(allKeys, schema.then.required);\r\n  schema.required = schema.required.concat(schema.then.required);\r\n  const hasElse = schema.hasOwnProperty('else');\r\n  if (hasElse) {\r\n    detectKey(allKeys, schema.else.required);\r\n    schema.required = schema.required.concat(schema.else.required);\r\n  }\r\n\r\n  const visibleIf: any = {};\r\n  const visibleElse: any = {};\r\n  ifKeys.forEach(key => {\r\n    const cond = schema.if.properties[key].enum;\r\n    visibleIf[key] = cond;\r\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\r\n  });\r\n\r\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\r\n  if (hasElse)\r\n    schema.else.required.forEach(\r\n      key => (ui[`$${key}`].visibleIf = visibleElse),\r\n    );\r\n\r\n  return schema;\r\n}\r\n\r\nfunction detectKey(keys: string[], detectKeys: string[]) {\r\n  detectKeys.forEach(key => {\r\n    if (!keys.includes(key)) {\r\n      throw new Error(`if: properties does not contain '${key}'`);\r\n    }\r\n  });\r\n}\r\n\r\nexport function orderProperties(properties: string[], order: string[]) {\r\n  if (!Array.isArray(order)) return properties;\r\n  const arrayToHash = arr =>\r\n    arr.reduce((prev, curr) => {\r\n      prev[curr] = true;\r\n      return prev;\r\n    }, {});\r\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\r\n\r\n  const propertyHash = arrayToHash(properties);\r\n  const orderHash = arrayToHash(order);\r\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\r\n  if (extraneous.length) {\r\n    throw new Error(\r\n      `ui schema order list contains extraneous ${errorPropList(extraneous)}`,\r\n    );\r\n  }\r\n  const rest = properties.filter(prop => !orderHash[prop]);\r\n  const restIndex = order.indexOf('*');\r\n  if (restIndex === -1) {\r\n    if (rest.length) {\r\n      throw new Error(\r\n        `ui schema order list does not contain ${errorPropList(rest)}`,\r\n      );\r\n    }\r\n    return order;\r\n  }\r\n  if (restIndex !== order.lastIndexOf('*')) {\r\n    throw new Error(\r\n      'ui schema order list contains more than one wildcard item',\r\n    );\r\n  }\r\n  const complete = [...order];\r\n  complete.splice(restIndex, 1, ...rest);\r\n  return complete;\r\n}\r\n\r\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\r\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\r\n  if (typeof list[0] !== 'object') {\r\n    list = list.map((item: any) => {\r\n      return <SFSchemaEnum>{ label: item, value: item };\r\n    });\r\n  }\r\n  if (formData) {\r\n    if (!Array.isArray(formData)) formData = [formData];\r\n    list.forEach((item: SFSchemaEnum) => {\r\n      if (~formData.indexOf(item.value)) item.checked = true;\r\n    });\r\n  }\r\n  // fix disabled status\r\n  if (readOnly) {\r\n    list.forEach((item: SFSchemaEnum) => item.disabled = true);\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\r\n  return getEnum(deepCopy(list || []), formData, readOnly);\r\n}\r\n\r\nexport function getData(\r\n  schema: SFSchema,\r\n  ui: SFUISchemaItem,\r\n  formData: any,\r\n  asyncArgs?: any,\r\n): Observable<SFSchemaEnum[]> {\r\n  if (typeof ui.asyncData === 'function') {\r\n    return ui\r\n      .asyncData(asyncArgs)\r\n      .pipe(\r\n        takeWhile(() => ui.__destroy !== true),\r\n        map(list => getEnum(list, formData, schema.readOnly)),\r\n      );\r\n  }\r\n  return of(getCopyEnum(schema.enum, formData, schema.readOnly));\r\n}\r\n","import { Subject } from 'rxjs';\r\n\r\nexport class TerminatorService {\r\n  onDestroy: Subject<boolean>;\r\n\r\n  constructor() {\r\n    this.onDestroy = new Subject();\r\n  }\r\n\r\n  destroy() {\r\n    this.onDestroy.next(true);\r\n  }\r\n}\r\n","// tslint:disable:no-use-before-declare\r\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\r\nimport { DelonFormConfig } from '../config';\r\nimport { ErrorData } from '../errors';\r\nimport { Widget } from '../widget';\r\nimport { isBlank } from '../utils';\r\n\r\nexport abstract class FormProperty {\r\n  schemaValidator: (value: any) => ErrorData[];\r\n  schema: SFSchema;\r\n  ui: SFUISchema | SFUISchemaItemRun;\r\n  formData: {};\r\n  _value: any = null;\r\n  widget: Widget<any>;\r\n  private _errors: ErrorData[] = null;\r\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\r\n  private _valueChanges = new BehaviorSubject<any>(null);\r\n  private _errorsChanges = new BehaviorSubject<any>(null);\r\n  private _visible = true;\r\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\r\n  private _root: PropertyGroup;\r\n  private _parent: PropertyGroup;\r\n  private _path: string;\r\n\r\n  constructor(\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    private options: DelonFormConfig,\r\n  ) {\r\n    this.schema = schema;\r\n    this.ui = ui;\r\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\r\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\r\n    });\r\n    this.formData = formData || schema.default;\r\n    this._parent = parent;\r\n    if (parent) {\r\n      this._root = parent.root;\r\n    } else if (this instanceof PropertyGroup) {\r\n      this._root = <PropertyGroup>(<any>this);\r\n    }\r\n    this._path = path;\r\n  }\r\n\r\n  get valueChanges() {\r\n    return this._valueChanges;\r\n  }\r\n\r\n  get errorsChanges() {\r\n    return this._errorsChanges;\r\n  }\r\n\r\n  get type(): string {\r\n    return this.schema.type;\r\n  }\r\n\r\n  get parent(): PropertyGroup {\r\n    return this._parent;\r\n  }\r\n\r\n  get root(): PropertyGroup {\r\n    return this._root || <PropertyGroup>(<any>this);\r\n  }\r\n\r\n  get path(): string {\r\n    return this._path;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  get errors() {\r\n    return this._errors;\r\n  }\r\n\r\n  get visible() {\r\n    return this._visible;\r\n  }\r\n\r\n  get valid() {\r\n    return this._errors === null;\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®å¼\r\n   *\r\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\r\n   */\r\n  abstract setValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\r\n   *\r\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\r\n   */\r\n  abstract resetValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  abstract _hasValue(): boolean;\r\n\r\n  /**\r\n   *  @internal\r\n   */\r\n  abstract _updateValue(): any;\r\n\r\n  /**\r\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\r\n   *\r\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\r\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\r\n   */\r\n  updateValueAndValidity(\r\n    onlySelf = false,\r\n    emitValueEvent = true,\r\n    emitValidator = true,\r\n  ) {\r\n    this._updateValue();\r\n\r\n    if (emitValueEvent) {\r\n      this.valueChanges.next(this.value);\r\n    }\r\n\r\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\r\n    if (emitValidator && this.ui.liveValidate === true) {\r\n      this._runValidation();\r\n    }\r\n\r\n    if (this.parent && !onlySelf) {\r\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\r\n    }\r\n  }\r\n\r\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\r\n  searchProperty(path: string): FormProperty {\r\n    let prop: FormProperty = this;\r\n    let base: PropertyGroup = null;\r\n\r\n    let result = null;\r\n    if (path[0] === '/') {\r\n      base = this.findRoot();\r\n      result = base.getProperty(path.substr(1));\r\n    } else {\r\n      while (result === null && prop.parent !== null) {\r\n        prop = base = prop.parent;\r\n        result = base.getProperty(path);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\r\n  findRoot(): PropertyGroup {\r\n    let property: FormProperty = this;\r\n    while (property.parent !== null) {\r\n      property = property.parent;\r\n    }\r\n    return <PropertyGroup>property;\r\n  }\r\n\r\n  // region: process errors\r\n\r\n  private isEmptyData(value: any) {\r\n    if (isBlank(value)) return true;\r\n    switch (this.type) {\r\n      case 'string':\r\n        return ('' + value).length === 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  _runValidation() {\r\n    let errors: ErrorData[];\r\n    // The definition of some rules:\r\n    // 1. Should not ajv validator when is empty data and required fields\r\n    // 2. Should not ajv validator when is empty data\r\n    const isEmpty = this.isEmptyData(this._value);\r\n    if (isEmpty && this.ui._required) {\r\n      errors = [{ keyword: 'required' }];\r\n    } else if (isEmpty) {\r\n      errors = [];\r\n    } else {\r\n      errors = this.schemaValidator(this._value) || [];\r\n    }\r\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\r\n    if (typeof customValidator === 'function') {\r\n      const customErrors = customValidator(this.value, this, this.findRoot());\r\n      if (customErrors instanceof Observable) {\r\n        customErrors.subscribe(res => {\r\n          this.setCustomErrors(errors, res);\r\n          this.widget.detectChanges();\r\n        });\r\n        return;\r\n      }\r\n      this.setCustomErrors(errors, customErrors);\r\n      return;\r\n    }\r\n\r\n    this._errors = errors;\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\r\n    // fix error format\r\n    const hasCustomError = list != null && list.length > 0;\r\n    if (hasCustomError) {\r\n      list.forEach((err, idx: number) => {\r\n        if (!err.message)\r\n          throw new Error(\r\n            `èªå®ä¹æ ¡éªå¨å¿é¡»è³å°è¿åä¸ä¸ª 'message' å±æ§ï¼ç¨äºè¡¨ç¤ºéè¯¯ææ¬`,\r\n          );\r\n        err._custom = true;\r\n      });\r\n    }\r\n    this._errors = this.mergeErrors(errors, list);\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\r\n    if (newErrors) {\r\n      if (Array.isArray(newErrors)) {\r\n        errors = errors.concat(...newErrors);\r\n      } else {\r\n        errors.push(newErrors);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\r\n    if (emitFormat && errors && !this.ui.onlyVisual) {\r\n      errors = errors.map((err: ErrorData) => {\r\n        let message =\r\n          err._custom === true && err.message\r\n            ? err.message\r\n            : (this.ui.errors || {})[err.keyword] ||\r\n              this.options.errors[err.keyword] ||\r\n              ``;\r\n\r\n        if (message && typeof message === 'function')\r\n          message = message(err) as string;\r\n\r\n        if (message) {\r\n          if (~(message as string).indexOf('{')) {\r\n            message = (message as string).replace(\r\n              /{([\\.a-z0-9]+)}/g,\r\n              (v: string, key: string) => err.params[key] || '',\r\n            );\r\n          }\r\n          err.message = message as string;\r\n        }\r\n        return err;\r\n      });\r\n    }\r\n    this._errors = errors;\r\n    this._errorsChanges.next(errors);\r\n    // Should send errors to parent field\r\n    if (this._parent) {\r\n      this._parent.setParentAndPlatErrors(errors, this.path);\r\n    }\r\n  }\r\n\r\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\r\n    this._objErrors[path] = errors;\r\n    const platErrors: ErrorData[] = [];\r\n    Object.keys(this._objErrors).forEach(p => {\r\n      const property = this.searchProperty(p);\r\n      if (property && !property.visible) return;\r\n      platErrors.push(...this._objErrors[p]);\r\n    });\r\n    this.setErrors(platErrors, false);\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: condition\r\n\r\n  private setVisible(visible: boolean) {\r\n    this._visible = visible;\r\n    this._visibilityChanges.next(visible);\r\n    // é¨åæ°æ®æºæ¥èª reset\r\n    this.resetValue(this.value, true);\r\n  }\r\n\r\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\r\n  _bindVisibility() {\r\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\r\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\r\n      this.setVisible(false);\r\n    } else if (visibleIf !== undefined) {\r\n      const propertiesBinding: Observable<boolean>[] = [];\r\n      for (const dependencyPath in visibleIf) {\r\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\r\n          const property = this.searchProperty(dependencyPath);\r\n          if (property) {\r\n            const valueCheck = property.valueChanges.pipe(\r\n              map((value: any) => {\r\n                const vi = visibleIf[dependencyPath];\r\n                if (typeof vi === 'function') return vi(value);\r\n                if (vi.indexOf('$ANY$') !== -1) {\r\n                  return value.length > 0;\r\n                } else {\r\n                  return vi.indexOf(value) !== -1;\r\n                }\r\n              }),\r\n            );\r\n            const visibilityCheck = property._visibilityChanges;\r\n            const and = combineLatest(\r\n              valueCheck, visibilityCheck\r\n            ).pipe(map(results => results[0] && results[1]));\r\n            propertiesBinding.push(and);\r\n          } else {\r\n            console.warn(\r\n              `Can't find property ${dependencyPath} for visibility check of ${\r\n                this.path\r\n              }`,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      combineLatest(propertiesBinding)\r\n        .pipe(\r\n          map(values => values.indexOf(true) !== -1),\r\n          distinctUntilChanged()\r\n        )\r\n        .subscribe(visible => this.setVisible(visible));\r\n    }\r\n  }\r\n\r\n  // endregion\r\n}\r\n\r\nexport abstract class PropertyGroup extends FormProperty {\r\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\r\n\r\n  getProperty(path: string) {\r\n    const subPathIdx = path.indexOf('/');\r\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\r\n\r\n    let property = this.properties[propertyId];\r\n    if (\r\n      property !== null &&\r\n      subPathIdx !== -1 &&\r\n      property instanceof PropertyGroup\r\n    ) {\r\n      const subPath = path.substr(subPathIdx + 1);\r\n      property = (<PropertyGroup>property).getProperty(subPath);\r\n    }\r\n    return property;\r\n  }\r\n\r\n  forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\r\n    for (const propertyId in this.properties) {\r\n      if (this.properties.hasOwnProperty(propertyId)) {\r\n        const property = this.properties[propertyId];\r\n        fn(property, propertyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\r\n    this.forEachChild(child => {\r\n      fn(child);\r\n      if (child instanceof PropertyGroup) {\r\n        (<PropertyGroup>child).forEachChildRecursive(fn);\r\n      }\r\n    });\r\n  }\r\n\r\n  _bindVisibility() {\r\n    super._bindVisibility();\r\n    this._bindVisibilityRecursive();\r\n  }\r\n\r\n  private _bindVisibilityRecursive() {\r\n    this.forEachChildRecursive(property => {\r\n      property._bindVisibility();\r\n    });\r\n  }\r\n\r\n  isRoot() {\r\n    return this === this.root;\r\n  }\r\n}\r\n","import { FormProperty } from './form.property';\r\n\r\nexport abstract class AtomicProperty extends FormProperty {\r\n  abstract fallbackValue(): any;\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    if (value == null) {\r\n      if (this.schema.default !== undefined) {\r\n        value = this.schema.default;\r\n      } else {\r\n        value = this.fallbackValue();\r\n      }\r\n    }\r\n    this._value = value;\r\n\r\n    this.updateValueAndValidity(onlySelf, true);\r\n\r\n    if (this.widget) this.widget.reset(value);\r\n  }\r\n\r\n  _hasValue(): boolean {\r\n    return this.fallbackValue() !== this.value;\r\n  }\r\n\r\n  _updateValue() {}\r\n}\r\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class NumberProperty extends AtomicProperty {\r\n  fallbackValue() {\r\n    return null;\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    if (typeof value === 'string') {\r\n      if (value.length) {\r\n        value =\r\n          value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\r\n      } else {\r\n        value = undefined;\r\n      }\r\n    }\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n}\r\n","import { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class BooleanProperty extends AtomicProperty {\r\n  fallbackValue(): any {\r\n    return null;\r\n  }\r\n}\r\n","import { PropertyGroup, FormProperty } from './form.property';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { DelonFormConfig } from '../config';\r\nimport { FormPropertyFactory } from './form.property.factory';\r\nimport { ObjectProperty } from './object.property';\r\nimport { ErrorData } from '../errors';\r\n\r\nexport class ArrayProperty extends PropertyGroup {\r\n  tick = 1;\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: any,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    options: DelonFormConfig,\r\n  ) {\r\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\r\n    this.properties = [];\r\n  }\r\n\r\n  getProperty(path: string) {\r\n    const subPathIdx = path.indexOf('/');\r\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\r\n    const list = this.properties as PropertyGroup[];\r\n    if (isNaN(pos) || pos >= list.length) return undefined;\r\n    const subPath = path.substr(subPathIdx + 1);\r\n    return list[pos].getProperty(subPath);\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    this.properties = [];\r\n    this.clearErrors();\r\n    this.resetProperties(value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    this._value = value || this.schema.default || [];\r\n    this.properties = [];\r\n    this.clearErrors();\r\n    this.resetProperties(this._value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  _hasValue(): boolean {\r\n    return true;\r\n  }\r\n\r\n  _updateValue() {\r\n    const value: any[] = [];\r\n    this.forEachChild((property: ObjectProperty, _) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value.push(Object.assign({}, property.formData, property.value));\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n\r\n  private addProperty(value: any) {\r\n    const newProperty = this.formPropertyFactory.createProperty(\r\n      this.schema.items,\r\n      this.ui.$items,\r\n      value,\r\n      this,\r\n    ) as ObjectProperty;\r\n    (<FormProperty[]>this.properties).push(newProperty);\r\n    return newProperty;\r\n  }\r\n\r\n  private resetProperties(value: any[]) {\r\n    for (const item of value) {\r\n      const property = this.addProperty(item);\r\n      property.resetValue(item, true);\r\n    }\r\n  }\r\n\r\n  private clearErrors(path?: string) {\r\n    if (path) delete this._objErrors[path];\r\n    else this._objErrors = {};\r\n  }\r\n\r\n  // region: actions\r\n\r\n  add(value: any): FormProperty {\r\n    const newProperty = this.addProperty(value);\r\n    newProperty.resetValue(value, false);\r\n    return newProperty;\r\n  }\r\n\r\n  remove(index: number) {\r\n    const list = <FormProperty[]>this.properties;\r\n    this.clearErrors(list[index].path);\r\n    list.splice(index, 1);\r\n    this.updateValueAndValidity(false, true);\r\n  }\r\n\r\n  // endregion\r\n}\r\n","import { PropertyGroup } from './form.property';\r\nimport { FormPropertyFactory } from './form.property.factory';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { DelonFormConfig } from '../config';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { orderProperties } from '../utils';\r\n\r\nexport class ObjectProperty extends PropertyGroup {\r\n  private _propertiesId: string[] = [];\r\n\r\n  get propertiesId() {\r\n    return this._propertiesId;\r\n  }\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: any,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    options: DelonFormConfig,\r\n  ) {\r\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\r\n    this.createProperties();\r\n  }\r\n\r\n  private createProperties() {\r\n    this.properties = {};\r\n    this._propertiesId = [];\r\n    let orderedProperties: string[];\r\n    try {\r\n      orderedProperties = orderProperties(\r\n        Object.keys(this.schema.properties),\r\n        this.ui.order as string[],\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        `Invalid ${this.schema.title || 'root'} object field configuration:`,\r\n        e,\r\n      );\r\n    }\r\n    orderedProperties.forEach(propertyId => {\r\n      this.properties[propertyId] = this.formPropertyFactory.createProperty(\r\n        this.schema.properties[propertyId],\r\n        this.ui['$' + propertyId],\r\n        (this.formData || {})[propertyId],\r\n        this,\r\n        propertyId,\r\n      );\r\n      this._propertiesId.push(propertyId);\r\n    });\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    for (const propertyId in value) {\r\n      if (value.hasOwnProperty(propertyId)) {\r\n        this.properties[propertyId].setValue(value[propertyId], true);\r\n      }\r\n    }\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    value = value || this.schema.default || {};\r\n    // tslint:disable-next-line:forin\r\n    for (const propertyId in this.schema.properties) {\r\n      this.properties[propertyId].resetValue(value[propertyId], true);\r\n    }\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n  _hasValue(): boolean {\r\n    return this.value != null && !!Object.keys(this.value).length;\r\n  }\r\n  _updateValue() {\r\n    const value: any = {};\r\n    this.forEachChild((property: any, propertyId: string) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value[propertyId] = property.value;\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n}\r\n","import { DelonFormConfig } from '../config';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { PropertyGroup, FormProperty } from './form.property';\r\nimport { NumberProperty } from './number.property';\r\nimport { StringProperty } from './string.property';\r\nimport { BooleanProperty } from './boolean.property';\r\nimport { ArrayProperty } from './array.property';\r\nimport { ObjectProperty } from './object.property';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { retrieveSchema } from '../utils';\r\n\r\nexport class FormPropertyFactory {\r\n  constructor(\r\n    private schemaValidatorFactory: SchemaValidatorFactory,\r\n    private options: DelonFormConfig,\r\n  ) {}\r\n\r\n  createProperty(\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup = null,\r\n    propertyId?: string,\r\n  ): FormProperty {\r\n    let newProperty = null;\r\n    let path = '';\r\n    if (parent) {\r\n      path += parent.path;\r\n      if (parent.parent !== null) {\r\n        path += '/';\r\n      }\r\n      if (parent.type === 'object') {\r\n        path += propertyId;\r\n      } else if (parent.type === 'array') {\r\n        path += (parent as ArrayProperty).tick++;\r\n      } else {\r\n        throw new Error(\r\n          'Instanciation of a FormProperty with an unknown parent type: ' +\r\n            parent.type,\r\n        );\r\n      }\r\n    } else {\r\n      path = '/';\r\n    }\r\n\r\n    if (schema.$ref) {\r\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\r\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\r\n    } else {\r\n      // fix required\r\n      if (\r\n        propertyId &&\r\n        ((parent!.schema.required || []) as string[]).indexOf(propertyId) !== -1\r\n      ) {\r\n        ui._required = true;\r\n      }\r\n      // fix title\r\n      if (schema.title == null) schema.title = propertyId;\r\n      // fix date\r\n      if (\r\n        (schema.type === 'string' || schema.type === 'number') &&\r\n        !schema.format &&\r\n        !(ui as SFUISchemaItem).format\r\n      ) {\r\n        if ((ui as SFUISchemaItem).widget === 'date')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiDateStringFormat\r\n              : this.options.uiDateNumberFormat;\r\n        else if ((ui as SFUISchemaItem).widget === 'time')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiTimeStringFormat\r\n              : this.options.uiTimeNumberFormat;\r\n      }\r\n      switch (schema.type) {\r\n        case 'integer':\r\n        case 'number':\r\n          newProperty = new NumberProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'string':\r\n          newProperty = new StringProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'boolean':\r\n          newProperty = new BooleanProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'object':\r\n          newProperty = new ObjectProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'array':\r\n          newProperty = new ArrayProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        default:\r\n          throw new TypeError(`Undefined type ${schema.type}`);\r\n      }\r\n    }\r\n\r\n    if (newProperty instanceof PropertyGroup) {\r\n      this.initializeRoot(newProperty);\r\n    }\r\n\r\n    return newProperty;\r\n  }\r\n\r\n  private initializeRoot(rootProperty: PropertyGroup) {\r\n    // rootProperty.init();\r\n    rootProperty._bindVisibility();\r\n  }\r\n}\r\n","import { Inject, Optional } from '@angular/core';\r\nimport { DelonFormConfig } from './config';\r\nimport { ErrorData } from './errors';\r\nimport { SFSchema } from './schema';\r\n\r\ndeclare var Ajv: any;\r\n\r\nexport abstract class SchemaValidatorFactory {\r\n  abstract createValidatorFn(\r\n    schema: SFSchema,\r\n    extraOptions: { ingoreKeywords: string[] },\r\n  ): (value: SFSchema) => ErrorData[];\r\n}\r\n\r\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\r\n  protected ajv: any;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Inject(DelonFormConfig)\r\n    private options: DelonFormConfig,\r\n  ) {\r\n    super();\r\n    this.ajv = new Ajv(\r\n      Object.assign({}, options.ajv, {\r\n        errorDataPath: 'property',\r\n        allErrors: true,\r\n        jsonPointers: true,\r\n      }),\r\n    );\r\n    this.ajv.addFormat(\r\n      'data-url',\r\n      /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\r\n    );\r\n    this.ajv.addFormat(\r\n      'color',\r\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\r\n    );\r\n    this.ajv.addFormat(\r\n      'mobile',\r\n      /^(0|\\+?86|17951)?1[0-9]{10}$/,\r\n    );\r\n    this.ajv.addFormat(\r\n      'id-card',\r\n      /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/,\r\n    );\r\n  }\r\n\r\n  createValidatorFn(\r\n    schema: SFSchema,\r\n    extraOptions: { ingoreKeywords: string[] },\r\n  ): (value: any) => ErrorData[] {\r\n    const ingoreKeywords: string[] = []\r\n      .concat(this.options.ingoreKeywords)\r\n      .concat(extraOptions.ingoreKeywords);\r\n\r\n    return (value: any): ErrorData[] => {\r\n      try {\r\n        this.ajv.validate(schema, value);\r\n      } catch (e) {\r\n        // swallow errors thrown in ajv due to invalid schemas, these\r\n        // still get displayed\r\n      }\r\n      let errors = this.ajv.errors;\r\n      if (this.options && ingoreKeywords && errors) {\r\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\r\n      }\r\n      return errors;\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Injectable,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n} from '@angular/core';\r\nimport { Widget } from './widget';\r\n\r\nexport class WidgetRegistry {\r\n  private widgets: { [type: string]: any } = {};\r\n\r\n  private defaultWidget: any;\r\n\r\n  setDefault(widget: any) {\r\n    this.defaultWidget = widget;\r\n  }\r\n\r\n  register(type: string, widget: any) {\r\n    this.widgets[type] = widget;\r\n  }\r\n\r\n  has(type: string) {\r\n    return this.widgets.hasOwnProperty(type);\r\n  }\r\n\r\n  getType(type: string): any {\r\n    if (this.has(type)) {\r\n      return this.widgets[type];\r\n    }\r\n    return this.defaultWidget;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class WidgetFactory {\r\n  constructor(\r\n    private registry: WidgetRegistry,\r\n    private resolver: ComponentFactoryResolver,\r\n  ) {}\r\n\r\n  createWidget(\r\n    container: ViewContainerRef,\r\n    type: string,\r\n  ): ComponentRef<Widget<any>> {\r\n    if (!this.registry.has(type)) {\r\n      console.warn(`No widget for type \"${type}\"`);\r\n    }\r\n\r\n    const componentClass = this.registry.getType(type);\r\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<any>>(\r\n      componentClass,\r\n    );\r\n    return container.createComponent(componentFactory);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  TemplateRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { deepCopy, InputBoolean } from '@delon/util';\r\nimport { DelonLocaleService } from '@delon/theme';\r\n\r\nimport { DelonFormConfig } from './config';\r\nimport { di, retrieveSchema, FORMATMAPS, resolveIf } from './utils';\r\nimport { TerminatorService } from './terminator.service';\r\nimport { SFSchema } from './schema/index';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\r\nimport { FormProperty } from './model/form.property';\r\nimport { FormPropertyFactory } from './model/form.property.factory';\r\nimport { SchemaValidatorFactory } from './validator.factory';\r\nimport { WidgetFactory } from './widget.factory';\r\nimport { SFButton } from './interface';\r\nimport { ErrorData } from './errors';\r\n\r\nexport function useFactory(\r\n  schemaValidatorFactory: any,\r\n  options: DelonFormConfig,\r\n) {\r\n  return new FormPropertyFactory(schemaValidatorFactory, options);\r\n}\r\n\r\n@Component({\r\n  selector: 'sf, [sf]',\r\n  templateUrl: './sf.component.html',\r\n  preserveWhitespaces: false,\r\n  providers: [\r\n    WidgetFactory,\r\n    {\r\n      provide: FormPropertyFactory,\r\n      useFactory: useFactory,\r\n      deps: [SchemaValidatorFactory, DelonFormConfig],\r\n    },\r\n    TerminatorService,\r\n  ],\r\n  host: {\r\n    '[class.sf]': 'true',\r\n    '[class.sf-search]': `mode === 'search'`,\r\n    '[class.sf-edit]': `mode === 'edit'`,\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\r\n  private i18n$: Subscription;\r\n  private locale: any = {};\r\n  private _renders = new Map<string, TemplateRef<any>>();\r\n  private _item: any;\r\n  private _valid = true;\r\n  private _defUi: SFUISchemaItem;\r\n  private _inited = false;\r\n\r\n  rootProperty: FormProperty = null;\r\n  _formData: any;\r\n  _btn: SFButton;\r\n  _schema: SFSchema;\r\n  _ui: SFUISchema;\r\n\r\n  // #region fields\r\n\r\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\r\n  @Input()\r\n  layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\r\n\r\n  /** JSON Schema */\r\n  @Input()\r\n  schema: SFSchema;\r\n\r\n  /** UI Schema */\r\n  @Input()\r\n  ui: SFUISchema;\r\n\r\n  /** è¡¨åé»è®¤å¼ */\r\n  @Input()\r\n  formData: {};\r\n\r\n  /**\r\n   * æé®\r\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\r\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\r\n   * - ä½¿ç¨åºå® `label` æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\r\n   */\r\n  @Input()\r\n  button: SFButton | 'none' = {};\r\n\r\n  /**\r\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\r\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\r\n   * - `false` æäº¤æ¶æ ¡éª\r\n   */\r\n  @Input()\r\n  @InputBoolean()\r\n  liveValidate = true;\r\n\r\n  /** æå®è¡¨å `autocomplete` å¼ */\r\n  @Input()\r\n  autocomplete: 'on' | 'off';\r\n\r\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\r\n  @Input()\r\n  @InputBoolean()\r\n  firstVisual = true;\r\n\r\n  /** è¡¨åæ¨¡å¼ */\r\n  @Input()\r\n  set mode(value: 'default' | 'search' | 'edit') {\r\n    switch (value) {\r\n      case 'search':\r\n        this.layout = 'inline';\r\n        this.firstVisual = false;\r\n        this.liveValidate = false;\r\n        if (this._btn) this._btn.submit = this._btn.search;\r\n        break;\r\n      case 'edit':\r\n        this.layout = 'horizontal';\r\n        this.firstVisual = false;\r\n        this.liveValidate = true;\r\n        if (this._btn) this._btn.submit = this._btn.edit;\r\n        break;\r\n    }\r\n    this._mode = value;\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n  private _mode: 'default' | 'search' | 'edit';\r\n\r\n  /** æ°æ®åæ´æ¶åè° */\r\n  @Output()\r\n  formChange = new EventEmitter<{}>();\r\n\r\n  /** æäº¤è¡¨åæ¶åè° */\r\n  @Output()\r\n  formSubmit = new EventEmitter<{}>();\r\n\r\n  /** éç½®è¡¨åæ¶åè° */\r\n  @Output()\r\n  formReset = new EventEmitter<{}>();\r\n\r\n  /** è¡¨åæ ¡éªç»æåè° */\r\n  @Output()\r\n  formError = new EventEmitter<ErrorData[]>();\r\n\r\n  // #endregion\r\n\r\n  /** è¡¨åæ ¡éªç¶æ */\r\n  get valid(): boolean {\r\n    return this._valid;\r\n  }\r\n\r\n  /** è¡¨åå¼ */\r\n  get value(): any {\r\n    return this._item;\r\n  }\r\n\r\n  onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!this.liveValidate) this.validator();\r\n    if (!this.valid) return;\r\n    this.formSubmit.emit(this.value);\r\n  }\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    private terminator: TerminatorService,\r\n    private options: DelonFormConfig,\r\n    private cd: ChangeDetectorRef,\r\n    private i18n: DelonLocaleService,\r\n  ) {\r\n    this.liveValidate = options.liveValidate;\r\n    this.firstVisual = options.firstVisual;\r\n    this.autocomplete = options.autocomplete;\r\n    this.i18n$ = this.i18n.change.subscribe(() => {\r\n      this.locale = this.i18n.getData('sf');\r\n      if (this._inited) {\r\n        this.coverButtonProperty();\r\n        this.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  private coverProperty() {\r\n    const isHorizontal = this.layout === 'horizontal';\r\n    const _schema = deepCopy(this.schema);\r\n    const { definitions } = _schema;\r\n\r\n    const inFn = (\r\n      schema: SFSchema,\r\n      parentSchema: SFSchema,\r\n      uiSchema: SFUISchemaItemRun,\r\n      parentUiSchema: SFUISchemaItemRun,\r\n      uiRes: SFUISchemaItemRun,\r\n    ) => {\r\n      Object.keys(schema.properties).forEach(key => {\r\n        const uiKey = `$${key}`;\r\n        const property = retrieveSchema(\r\n          schema.properties[key] as SFSchema,\r\n          definitions,\r\n        );\r\n        const ui = Object.assign(\r\n          { widget: property.type },\r\n          property.format && FORMATMAPS[property.format],\r\n          typeof property.ui === 'string' ? { widget: property.ui } : null,\r\n          !property.ui &&\r\n          Array.isArray(property.enum) &&\r\n          property.enum.length > 0\r\n            ? { widget: 'select' }\r\n            : null,\r\n          this._defUi,\r\n          property.ui,\r\n          uiSchema[uiKey],\r\n        ) as SFUISchemaItemRun;\r\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\r\n        if (isHorizontal) {\r\n          if (parentUiSchema.spanLabelFixed) {\r\n            if (!ui.spanLabelFixed) {\r\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\r\n            }\r\n          } else {\r\n            if (!ui.spanLabel)\r\n              ui.spanLabel =\r\n                typeof parentUiSchema.spanLabel === 'undefined'\r\n                  ? 5\r\n                  : parentUiSchema.spanLabel;\r\n            if (!ui.spanControl)\r\n              ui.spanControl =\r\n                typeof parentUiSchema.spanControl === 'undefined'\r\n                  ? 19\r\n                  : parentUiSchema.spanControl;\r\n            if (!ui.offsetControl)\r\n              ui.offsetControl =\r\n                typeof parentUiSchema.offsetControl === 'undefined'\r\n                  ? null\r\n                  : parentUiSchema.offsetControl;\r\n          }\r\n        } else {\r\n          ui.spanLabel = null;\r\n          ui.spanControl = null;\r\n          ui.offsetControl = null;\r\n        }\r\n        if (ui.widget === 'date' && ui.end != null && parentSchema) {\r\n          const dateEndProperty = parentSchema.properties[ui.end];\r\n          if (dateEndProperty) {\r\n            dateEndProperty.ui = Object.assign({}, dateEndProperty.ui, {\r\n              hidden: true,\r\n            });\r\n          } else {\r\n            ui.end = '';\r\n          }\r\n        }\r\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\r\n\r\n        uiRes[uiKey] = ui;\r\n        delete property.ui;\r\n\r\n        if (property.items) {\r\n          uiRes[uiKey]['$items'] = uiRes[uiKey]['$items'] || {};\r\n          inFn(\r\n            property.items,\r\n            property.items,\r\n            (uiSchema[uiKey] || {})['$items'] || {},\r\n            ui,\r\n            uiRes[uiKey]['$items'],\r\n          );\r\n        }\r\n\r\n        if (property.properties && Object.keys(property.properties).length) {\r\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\r\n        }\r\n      });\r\n    };\r\n\r\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\r\n      Object.keys(schema.properties).forEach(key => {\r\n        const property = schema.properties[key];\r\n        const uiKey = `$${key}`;\r\n        resolveIf(property, ui[uiKey]);\r\n        if (property.items) {\r\n          inIfFn(property.items, ui[uiKey].$items);\r\n        }\r\n        if (property.properties) {\r\n          inIfFn(property, ui[uiKey]);\r\n        }\r\n      });\r\n    };\r\n\r\n    if (this.ui == null) this.ui = {};\r\n    this._defUi = Object.assign(\r\n      <SFUISchemaItem>{\r\n        onlyVisual: this.options.onlyVisual,\r\n        size: this.options.size,\r\n        liveValidate: this.liveValidate,\r\n        firstVisual: this.firstVisual,\r\n      },\r\n      this.options.ui,\r\n      _schema.ui,\r\n      this.ui['*'],\r\n    );\r\n\r\n    // root\r\n    this._ui = Object.assign({}, this._defUi);\r\n\r\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\r\n\r\n    // cond\r\n    resolveIf(_schema, this._ui);\r\n    inIfFn(_schema, this._ui);\r\n\r\n    this._schema = _schema;\r\n\r\n    if (this._ui.debug) {\r\n      di('cover schema & ui', this._ui, _schema);\r\n    }\r\n  }\r\n\r\n  private coverButtonProperty() {\r\n    this._btn = Object.assign(\r\n      { render: {} },\r\n      this.locale,\r\n      this.options.button,\r\n      this.button,\r\n    );\r\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\r\n    if (this.layout === 'horizontal') {\r\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\r\n      if (!this._btn.render.grid) {\r\n        this._btn.render.grid = {\r\n          offset: btnUi.spanLabel,\r\n          span: btnUi.spanControl,\r\n        };\r\n      }\r\n      // fixed label\r\n      if (!this._btn.render.spanLabelFixed) {\r\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\r\n      }\r\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\r\n      if (\r\n        !this._btn.render.class &&\r\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\r\n      ) {\r\n        this._btn.render.class = 'text-center';\r\n      }\r\n    } else {\r\n      this._btn.render.grid = {};\r\n    }\r\n    if (this._mode) {\r\n      this.mode = this._mode;\r\n    }\r\n    if (this._ui.debug) di('button property', this._btn);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._inited = true;\r\n    this.validator();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.refreshSchema();\r\n  }\r\n\r\n  /** @internal */\r\n  _addTpl(path: string, templateRef: TemplateRef<{}>) {\r\n    const property = this.rootProperty.searchProperty(path);\r\n    if (!property) {\r\n      console.warn(`æªæ¾å°è·¯å¾ï¼${path}`);\r\n      return;\r\n    }\r\n    if (this._renders.has(path)) {\r\n      console.warn(`å·²ç»å­å¨ç¸åèªå®ä¹è·¯å¾ï¼${path}`);\r\n      return;\r\n    }\r\n    this._renders.set(path, templateRef);\r\n    const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\r\n    pui._render = templateRef;\r\n  }\r\n\r\n  private attachCustomRender() {\r\n    this._renders.forEach((tpl, path) => {\r\n      const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\r\n      if (!pui._render) pui._render = tpl;\r\n    });\r\n  }\r\n\r\n  validator() {\r\n    this.rootProperty._runValidation();\r\n    const errors = this.rootProperty.errors;\r\n    this._valid = !(errors && errors.length);\r\n    if (!this._valid) this.formError.emit(errors);\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\r\n   */\r\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema) {\r\n    if (newSchema) this.schema = newSchema;\r\n    if (newUI) this.ui = newUI;\r\n\r\n    if (!this.schema || typeof this.schema.properties === 'undefined')\r\n      throw new Error(`Invalid Schema`);\r\n    if (this.schema.ui && typeof this.schema.ui === 'string')\r\n      throw new Error(`Don't support string with root ui property`);\r\n\r\n    this.schema.type = 'object';\r\n\r\n    this._formData = { ...this.formData };\r\n\r\n    if (this._inited) this.terminator.destroy();\r\n\r\n    this.coverProperty();\r\n    this.coverButtonProperty();\r\n\r\n    this.rootProperty = this.formPropertyFactory.createProperty(\r\n      this._schema,\r\n      this._ui,\r\n      this.formData,\r\n    );\r\n    this.attachCustomRender();\r\n\r\n    this.rootProperty.valueChanges.subscribe(value => {\r\n      this._item = Object.assign({}, this.formData, value);\r\n      this.formChange.emit(this._item);\r\n    });\r\n    this.rootProperty.errorsChanges.subscribe(errors => {\r\n      this._valid = !(errors && errors.length);\r\n      this.formError.emit(errors);\r\n      this.cd.detectChanges();\r\n    });\r\n\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * éç½®è¡¨å\r\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\r\n   */\r\n  reset(emit = false) {\r\n    this.rootProperty.resetValue(this.formData, false);\r\n    Promise.resolve().then(() => this.cd.detectChanges());\r\n    if (emit) {\r\n      this.formReset.emit(this.value);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.terminator.destroy();\r\n    this.i18n$.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FormProperty } from './model/form.property';\r\nimport { Widget } from './widget';\r\nimport { WidgetFactory } from './widget.factory';\r\nimport { TerminatorService } from './terminator.service';\r\nimport { SFUISchemaItem } from './schema/ui';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Component({\r\n  selector: 'sf-item',\r\n  template: `<ng-template #target></ng-template>`,\r\n})\r\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\r\n  private ref: ComponentRef<any>;\r\n  widget: Widget<any> = null;\r\n\r\n  // region: fields\r\n\r\n  @Input() formProperty: FormProperty;\r\n\r\n  @ViewChild('target', { read: ViewContainerRef })\r\n  container: ViewContainerRef;\r\n\r\n  // endregion\r\n\r\n  constructor(\r\n    private widgetFactory: WidgetFactory,\r\n    private terminator: TerminatorService,\r\n  ) {}\r\n\r\n  onWidgetInstanciated(widget: Widget<any>) {\r\n    this.widget = widget;\r\n    const id = `_sf-${nextUniqueId++}`;\r\n\r\n    const ui = this.formProperty.ui as SFUISchemaItem;\r\n    this.widget.formProperty = this.formProperty;\r\n    this.widget.schema = this.formProperty.schema;\r\n    this.widget.ui = ui;\r\n    this.widget.id = id;\r\n    this.widget.firstVisual = ui.firstVisual;\r\n    this.formProperty.widget = widget;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.terminator.onDestroy.subscribe(() => {\r\n      this.ngOnDestroy();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.ref = this.widgetFactory.createWidget(\r\n      this.container,\r\n      (this.formProperty.ui.widget || this.formProperty.schema.type) as string,\r\n    );\r\n    this.onWidgetInstanciated(this.ref.instance);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.formProperty.ui.__destroy = true;\r\n    this.ref.destroy();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2,\r\n  AfterViewInit,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { InputNumber } from '@delon/util';\r\n\r\n@Directive({ selector: '[fixed-label]' })\r\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\r\n  private el: HTMLDivElement;\r\n  private _inited = false;\r\n\r\n  @Input('fixed-label')\r\n  @InputNumber()\r\n  num: number;\r\n\r\n  private init() {\r\n    if (!this._inited || this.num == null || this.num <= 0) return;\r\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\r\n    this.render.addClass(widgetEl, 'sf-fixed');\r\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\r\n    const unit = this.num + 'px';\r\n    if (labelEl) {\r\n      this.render.setStyle(labelEl, 'width', unit);\r\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\r\n    } else {\r\n      const controlEl = widgetEl.querySelector(\r\n        '.ant-form-item-control-wrapper',\r\n      );\r\n      this.render.setStyle(controlEl, 'margin-left', unit);\r\n    }\r\n  }\r\n\r\n  constructor(er: ElementRef, private render: Renderer2) {\r\n    this.el = er.nativeElement as HTMLDivElement;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._inited = true;\r\n    this.init();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this._inited) this.init();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { SFSchema } from './schema/index';\r\nimport { SFUISchemaItem } from './schema/ui';\r\n\r\n@Component({\r\n  selector: 'sf-item-wrap',\r\n  template: `\r\n  <nz-form-item [style.width.px]=\"ui.width\">\r\n    <nz-col *ngIf=\"showTitle\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\r\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\r\n        {{ schema.title }}\r\n        <span class=\"optional\">\r\n          {{ ui.optional }}\r\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\r\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\r\n          </nz-tooltip>\r\n        </span>\r\n      </label>\r\n    </nz-col>\r\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\r\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\r\n        <ng-content></ng-content>\r\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\r\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\r\n      </div>\r\n    </nz-col>\r\n  </nz-form-item>`,\r\n})\r\nexport class SFItemWrapComponent {\r\n  @Input() id: string;\r\n  @Input() schema: SFSchema;\r\n  @Input() ui: SFUISchemaItem;\r\n  @Input() showError: boolean;\r\n  @Input() error: string;\r\n  @Input() showTitle: boolean;\r\n}\r\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\r\nimport { SFComponent } from '../../sf.component';\r\n\r\n@Directive({\r\n  selector: '[sf-template]',\r\n})\r\nexport class SFTemplateDirective implements OnInit {\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('sf-template') path: string;\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private table: SFComponent,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.table._addTpl(\r\n      this.path.startsWith('/') ? this.path : `/` + this.path,\r\n      this.templateRef,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HostBinding,\r\n  Optional,\r\n  AfterViewInit,\r\n  Inject,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { di } from './utils';\r\nimport { FormProperty } from './model/form.property';\r\nimport { ArrayProperty } from './model/array.property';\r\nimport { ObjectProperty } from './model/object.property';\r\nimport { SFSchema } from './schema';\r\nimport { SFUISchemaItem } from './schema/ui';\r\nimport { ErrorData } from './errors';\r\nimport { SFComponent } from './sf.component';\r\n\r\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\r\n  formProperty: T;\r\n  error: string;\r\n  showError = false;\r\n  id = '';\r\n  schema: SFSchema;\r\n  ui: SFUISchemaItem;\r\n  firstVisual = false;\r\n\r\n  @HostBinding('class')\r\n  get cls() {\r\n    return this.ui.class || '';\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    if (typeof this.schema.readOnly !== 'undefined')\r\n      return this.schema.readOnly;\r\n\r\n    return null;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\r\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.formProperty.errorsChanges\r\n      .pipe(filter(w => w != null))\r\n      .subscribe((errors: ErrorData[]) => {\r\n        if (this.ui.debug) di('errorsChanges', this.formProperty.path, errors);\r\n\r\n        // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\r\n        if (this.firstVisual) {\r\n          this.showError = errors.length > 0;\r\n          this.error = this.showError ? errors[0].message : '';\r\n\r\n          if (this.ui.__destroy !== true) this.cd.detectChanges();\r\n        }\r\n        this.firstVisual = true;\r\n      });\r\n  }\r\n\r\n  setValue(value: any) {\r\n    this.formProperty.setValue(value, false);\r\n    if (this.ui.debug) {\r\n      di('valueChanges', this.formProperty.path, this.formProperty);\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.formProperty.value;\r\n  }\r\n\r\n  detectChanges() {\r\n    this.cd.detectChanges();\r\n    this.formProperty.root.widget.cd.markForCheck();\r\n  }\r\n\r\n  abstract reset(value: any);\r\n}\r\n\r\nexport class ControlWidget extends Widget<FormProperty> {\r\n  reset(value: any) {}\r\n}\r\n\r\nexport class ArrayLayoutWidget extends Widget<ArrayProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n\r\nexport class ObjectLayoutWidget extends Widget<ObjectProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ObjectLayoutWidget } from '../../widget';\r\nimport { SFGridSchema } from '../../schema/ui';\r\nimport { FormProperty } from '../../model/form.property';\r\n\r\n@Component({\r\n  selector: 'sf-object',\r\n  template: `\r\n  <ng-container *ngIf=\"grid; else noGrid\">\r\n    <nz-row [nzGutter]=\"grid.gutter\">\r\n      <ng-container *ngFor=\"let i of list\">\r\n        <ng-container *ngIf=\"i.property.visible && i.show\">\r\n          <nz-col\r\n            [nzSpan]=\"i.grid.span\" [nzOffset]=\"i.grid.offset\"\r\n            [nzXs]=\"i.grid.xs\" [nzSm]=\"i.grid.sm\" [nzMd]=\"i.grid.md\"\r\n            [nzLg]=\"i.grid.lg\" [nzXl]=\"i.grid.xl\" [nzXXl]=\"i.grid.xxl\">\r\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\r\n          </nz-col>\r\n        </ng-container>\r\n      </ng-container>\r\n    </nz-row>\r\n  </ng-container>\r\n  <ng-template #noGrid>\r\n    <ng-container *ngFor=\"let i of list\">\r\n      <ng-container *ngIf=\"i.property.visible && i.show\">\r\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-template>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\r\n  grid: SFGridSchema;\r\n  list: any[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.grid = this.ui.grid;\r\n    const list: any[] = [];\r\n    for (const key of this.formProperty.propertiesId) {\r\n      const property = this.formProperty.properties[key] as FormProperty;\r\n      const item = {\r\n        property,\r\n        grid: property.ui.grid || this.grid || {},\r\n        spanLabelFixed: property.ui.spanLabelFixed,\r\n        show: property.ui.hidden === false\r\n      };\r\n      list.push(item);\r\n    }\r\n    this.list = list;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ArrayLayoutWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-array',\r\n  template: `\r\n  <nz-form-item>\r\n    <nz-col *ngIf=\"schema.title\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\r\n      <label>\r\n        {{ schema.title }}\r\n        <span class=\"optional\">\r\n          {{ ui.optional }}\r\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\r\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\r\n          </nz-tooltip>\r\n        </span>\r\n      </label>\r\n      <div class=\"add\">\r\n        <button nz-button [nzType]=\"addType\" [disabled]=\"addDisabled\" (click)=\"addItem()\" [innerHTML]=\"addTitle\"></button>\r\n      </div>\r\n    </nz-col>\r\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\r\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\r\n\r\n        <nz-row class=\"sf-array-container\">\r\n          <ng-container *ngFor=\"let i of formProperty.properties; let idx=index\">\r\n            <nz-col *ngIf=\"i.visible && !i.ui.hidden\" [nzSpan]=\"arraySpan\" [attr.data-index]=\"idx\" class=\"sf-array-item\">\r\n              <nz-card>\r\n                <sf-item [formProperty]=\"i\"></sf-item>\r\n                <span *ngIf=\"removeTitle\" class=\"remove\" (click)=\"removeItem(idx)\" [attr.title]=\"removeTitle\">\r\n                  <i class=\"anticon anticon-delete\"></i>\r\n                </span>\r\n              </nz-card>\r\n            </nz-col>\r\n          </ng-container>\r\n        </nz-row>\r\n\r\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\r\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\r\n\r\n      </div>\r\n    </nz-col>\r\n  </nz-form-item>\r\n  `,\r\n})\r\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\r\n  addTitle: string;\r\n  addType: string;\r\n  removeTitle: string;\r\n  arraySpan = 8;\r\n\r\n  get addDisabled() {\r\n    return (\r\n      this.schema.maxItems &&\r\n      (this.formProperty.properties as any[]).length >= this.schema.maxItems\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.ui.grid && this.ui.grid.arraySpan)\r\n      this.arraySpan = this.ui.grid.arraySpan;\r\n\r\n    this.addTitle = this.ui.addTitle || 'æ·»å ';\r\n    this.addType = this.ui.addType || 'dashed';\r\n    this.removeTitle =\r\n      this.ui.removable === false ? null : this.ui.removeTitle || 'ç§»é¤';\r\n  }\r\n\r\n  addItem() {\r\n    this.formProperty.add(null);\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.formProperty.remove(index);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-string',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <ng-template #ipt>\r\n      <input nz-input\r\n        [attr.id]=\"id\"\r\n        [disabled]=\"disabled\"\r\n        [attr.disabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [ngModel]=\"value\"\r\n        (ngModelChange)=\"setValue($event)\"\r\n        [attr.maxLength]=\"schema.maxLength || null\"\r\n        [attr.type]=\"ui.type || 'text'\"\r\n        [attr.placeholder]=\"ui.placeholder\"\r\n        [attr.autocomplete]=\"ui.autocomplete\"\r\n        [attr.autoFocus]=\"ui.autofocus\">\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"type === 'addon'; else ipt\">\r\n      <nz-input-group\r\n        [nzAddOnBefore]=\"ui.addOnBefore\" [nzAddOnAfter]=\"ui.addOnAfter\"\r\n        [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\" [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\r\n        [nzPrefix]=\"ui.prefix\" [nzPrefixIcon]=\"ui.prefixIcon\"\r\n        [nzSuffix]=\"ui.suffix\" [nzSuffixIcon]=\"ui.suffixIcon\">\r\n        <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\r\n      </nz-input-group>\r\n    </ng-container>\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class StringWidget extends ControlWidget implements OnInit {\r\n  type: string;\r\n\r\n  ngOnInit(): void {\r\n    this.type = !!(\r\n      this.ui.addOnAfter ||\r\n      this.ui.addOnBefore ||\r\n      this.ui.addOnAfterIcon ||\r\n      this.ui.addOnBeforeIcon ||\r\n      this.ui.prefix ||\r\n      this.ui.prefixIcon ||\r\n      this.ui.suffix ||\r\n      this.ui.suffixIcon\r\n    )\r\n      ? 'addon'\r\n      : '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-number',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    <nz-input-number\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzMin]=\"min\"\r\n      [nzMax]=\"max\"\r\n      [nzStep]=\"step\"\r\n      [nzFormatter]=\"formatter\"\r\n      [nzParser]=\"parser\"\r\n      [nzPrecision]=\"ui.precision\"\r\n      [nzPlaceHolder]=\"ui.placeholder || ''\">\r\n    </nz-input-number>\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class NumberWidget extends ControlWidget implements OnInit {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  formatter = value => value;\r\n  parser = value => value;\r\n\r\n  ngOnInit(): void {\r\n    const { schema, ui } = this;\r\n    if (typeof schema.minimum !== 'undefined') {\r\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\r\n    }\r\n    if (typeof schema.maximum !== 'undefined') {\r\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\r\n    }\r\n    this.step = schema.multipleOf || 1;\r\n    if (schema.type === 'integer') {\r\n      this.min = Math.trunc(this.min);\r\n      this.max = Math.trunc(this.max);\r\n      this.step = Math.trunc(this.step);\r\n    }\r\n    if (ui.prefix != null) {\r\n      ui.formatter = value => `${ui.prefix} ${value}`;\r\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\r\n    }\r\n    if (ui.unit != null) {\r\n      ui.formatter = value => `${value} ${ui.unit}`;\r\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\r\n    }\r\n    if (ui.formatter) this.formatter = ui.formatter;\r\n    if (ui.parser) this.parser = ui.parser;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport format from 'date-fns/format';\r\nimport { toBool } from '../../utils';\r\nimport { FormProperty } from '../../model/form.property';\r\n\r\n@Component({\r\n  selector: 'sf-date',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    <ng-container [ngSwitch]=\"mode\">\r\n\r\n      <nz-month-picker *ngSwitchCase=\"'month'\"\r\n        [nzDisabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [nzFormat]=\"displayFormat\"\r\n        [(ngModel)]=\"displayValue\"\r\n        (ngModelChange)=\"_change($event)\"\r\n        [nzAllowClear]=\"i.allowClear\"\r\n        [nzClassName]=\"ui.className\"\r\n        [nzDisabledDate]=\"ui.disabledDate\"\r\n        [nzLocale]=\"ui.locale\"\r\n        [nzPlaceHolder]=\"ui.placeholder\"\r\n        [nzPopupStyle]=\"ui.popupStyle\"\r\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\r\n        (nzOnOpenChange)=\"_openChange($event)\"\r\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\r\n      ></nz-month-picker>\r\n\r\n      <nz-week-picker *ngSwitchCase=\"'week'\"\r\n        [nzDisabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [nzFormat]=\"displayFormat\"\r\n        [(ngModel)]=\"displayValue\"\r\n        (ngModelChange)=\"_change($event)\"\r\n        [nzAllowClear]=\"i.allowClear\"\r\n        [nzClassName]=\"ui.className\"\r\n        [nzDisabledDate]=\"ui.disabledDate\"\r\n        [nzLocale]=\"ui.locale\"\r\n        [nzPlaceHolder]=\"ui.placeholder\"\r\n        [nzPopupStyle]=\"ui.popupStyle\"\r\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\r\n        (nzOnOpenChange)=\"_openChange($event)\"\r\n      ></nz-week-picker>\r\n\r\n      <nz-range-picker *ngSwitchCase=\"'range'\"\r\n        [nzDisabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [nzFormat]=\"displayFormat\"\r\n        [(ngModel)]=\"displayValue\"\r\n        (ngModelChange)=\"_change($event)\"\r\n        [nzAllowClear]=\"i.allowClear\"\r\n        [nzClassName]=\"ui.className\"\r\n        [nzDisabledDate]=\"ui.disabledDate\"\r\n        [nzLocale]=\"ui.locale\"\r\n        [nzPlaceHolder]=\"ui.placeholder\"\r\n        [nzPopupStyle]=\"ui.popupStyle\"\r\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\r\n        (nzOnOpenChange)=\"_openChange($event)\"\r\n        [nzDisabledTime]=\"ui.disabledTime\"\r\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\r\n        [nzRanges]=\"ui.ranges\"\r\n        (nzOnOk)=\"_ok($event)\"\r\n      ></nz-range-picker>\r\n\r\n      <nz-date-picker *ngSwitchDefault\r\n        [nzDisabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [nzFormat]=\"displayFormat\"\r\n        [(ngModel)]=\"displayValue\"\r\n        (ngModelChange)=\"_change($event)\"\r\n        [nzAllowClear]=\"i.allowClear\"\r\n        [nzClassName]=\"ui.className\"\r\n        [nzDisabledDate]=\"ui.disabledDate\"\r\n        [nzLocale]=\"ui.locale\"\r\n        [nzPlaceHolder]=\"ui.placeholder\"\r\n        [nzPopupStyle]=\"ui.popupStyle\"\r\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\r\n        (nzOnOpenChange)=\"_openChange($event)\"\r\n        [nzDisabledTime]=\"ui.disabledTime\"\r\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\r\n        [nzShowTime]=\"ui.showTime\"\r\n        [nzShowToday]=\"i.showToday\"\r\n        (nzOnOk)=\"_ok($event)\"\r\n      ></nz-date-picker>\r\n    </ng-container>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class DateWidget extends ControlWidget implements OnInit {\r\n  mode: string;\r\n  displayValue: Date | Date[] = null;\r\n  displayFormat: string;\r\n  format: string;\r\n  i: any;\r\n  flatRange = false;\r\n\r\n  ngOnInit(): void {\r\n    const ui = this.ui;\r\n    this.mode = ui.mode || 'date';\r\n    this.flatRange = ui.end != null;\r\n    if (this.flatRange) {\r\n      this.mode = 'range';\r\n    }\r\n    if (!ui.displayFormat) {\r\n      switch (this.mode) {\r\n        case 'month':\r\n          this.displayFormat = `yyyy-MM`;\r\n          break;\r\n        case 'week':\r\n          this.displayFormat = `yyyy-ww`;\r\n          break;\r\n      }\r\n    } else {\r\n      this.displayFormat = ui.displayFormat;\r\n    }\r\n    this.format = ui.format\r\n      ? ui.format\r\n      : this.schema.type === 'number'\r\n        ? 'x'\r\n        : 'YYYY-MM-DD HH:mm:ss';\r\n    // å¬å±API\r\n    this.i = {\r\n      allowClear: toBool(ui.allowClear, true),\r\n      // nz-date-picker\r\n      showToday: toBool(ui.showToday, true),\r\n    };\r\n  }\r\n\r\n  reset(value: any) {\r\n    if (this.flatRange) {\r\n      this.displayValue = value == null ? [] : [value, this.endProperty.formData];\r\n    } else {\r\n      this.displayValue = value;\r\n    }\r\n  }\r\n\r\n  _change(value: Date | Date[]) {\r\n    if (value == null) {\r\n      this.setValue(null);\r\n      this.setEnd(null);\r\n      return;\r\n    }\r\n\r\n    const res = Array.isArray(value)\r\n      ? value.map(d => format(d, this.format))\r\n      : format(value, this.format);\r\n\r\n    if (this.flatRange) {\r\n      this.setEnd(res[1]);\r\n      this.setValue(res[0]);\r\n    } else {\r\n      this.setValue(res);\r\n    }\r\n  }\r\n\r\n  _openChange(status: boolean) {\r\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\r\n  }\r\n\r\n  _ok(value: any) {\r\n    if (this.ui.onOk) this.ui.onOk(value);\r\n  }\r\n\r\n  private get endProperty(): FormProperty {\r\n    return this.formProperty.parent.properties[this.ui.end];\r\n  }\r\n\r\n  private setEnd(value: any) {\r\n    this.endProperty.setValue(value, true);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport format from 'date-fns/format';\r\nimport { toBool } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-time',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-time-picker\r\n      [(ngModel)]=\"displayValue\"\r\n      (ngModelChange)=\"_change($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzFormat]=\"i.displayFormat\"\r\n      [nzAllowEmpty]=\"i.allowEmpty\"\r\n      [nzClearText]=\"i.clearText\"\r\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\r\n      [nzDisabledHours]=\"ui.disabledHours\"\r\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\r\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\r\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\r\n      [nzHourStep]=\"i.hourStep\"\r\n      [nzMinuteStep]=\"i.minuteStep\"\r\n      [nzSecondStep]=\"i.secondStep\"\r\n      [nzPopupClassName]=\"ui.popupClassName\"\r\n      >\r\n    </nz-time-picker>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class TimeWidget extends ControlWidget implements OnInit {\r\n  displayValue: Date = null;\r\n  format: string;\r\n  i: any;\r\n\r\n  ngOnInit(): void {\r\n    const ui = this.ui;\r\n    this.format = ui.format\r\n      ? ui.format\r\n      : this.schema.type === 'number'\r\n        ? 'x'\r\n        : 'HH:mm:ss';\r\n    this.i = {\r\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\r\n      allowEmpty: toBool(ui.allowEmpty, true),\r\n      clearText: ui.clearText || 'æ¸é¤',\r\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\r\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\r\n      hourStep: ui.hourStep || 1,\r\n      minuteStep: ui.nzMinuteStep || 1,\r\n      secondStep: ui.secondStep || 1,\r\n    };\r\n  }\r\n\r\n  reset(value: any) {\r\n    if (value instanceof Date) {\r\n      this.displayValue = value;\r\n      return;\r\n    }\r\n    let v = value != null && value.toString().length ? new Date(value) : null;\r\n\r\n    // trying restore full Date format\r\n    if (v != null && v.toString() === 'Invalid Date') {\r\n      if (value.toString().split(':').length <= 1) value += ':00';\r\n      v = new Date(`1970-1-1 ` + value);\r\n    }\r\n    this.displayValue = v;\r\n  }\r\n\r\n  _change(value: Date) {\r\n    if (value == null) {\r\n      this.setValue(null);\r\n      return;\r\n    }\r\n    if (this.ui.utcEpoch === true) {\r\n      this.setValue(\r\n        Date.UTC(\r\n          1970,\r\n          0,\r\n          1,\r\n          value.getHours(),\r\n          value.getMinutes(),\r\n          value.getSeconds(),\r\n        ),\r\n      );\r\n      return;\r\n    }\r\n    this.setValue(format(value, this.format));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-radio',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-radio-group\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzName]=\"id\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\">\r\n      <ng-container *ngIf=\"styleType\">\r\n        <label *ngFor=\"let option of data\"\r\n          nz-radio\r\n          [nzValue]=\"option.value\"\r\n          [nzDisabled]=\"option.disabled\">\r\n          <span [innerHTML]=\"option.label\"></span>\r\n        </label>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!styleType\">\r\n        <label *ngFor=\"let option of data\"\r\n          nz-radio-button\r\n          [nzValue]=\"option.value\"\r\n          [nzDisabled]=\"option.disabled\">\r\n          <span [innerHTML]=\"option.label\"></span>\r\n        </label>\r\n      </ng-container>\r\n    </nz-radio-group>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class RadioWidget extends ControlWidget {\r\n  data: any[] = [];\r\n  styleType: boolean;\r\n\r\n  reset(value: any) {\r\n    this.styleType = (this.ui.styleType || 'default') === 'default';\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => (this.data = list),\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\nimport { SFSchemaEnum } from '../../schema';\r\n\r\n@Component({\r\n  selector: 'sf-checkbox',\r\n  template: `\r\n  <ng-template #all>\r\n    <label *ngIf=\"ui.checkAll\" nz-checkbox class=\"mr-sm\"\r\n      [(ngModel)]=\"allChecked\"\r\n      [nzIndeterminate]=\"indeterminate\"\r\n      (click)=\"onAllChecked($event)\">\r\n      {{ ui.checkAllText || 'å¨é' }}\r\n    </label>\r\n  </ng-template>\r\n  <nz-form-item [style.width.px]=\"ui.width\">\r\n    <nz-col *ngIf=\"data.length > 0\" [nzSpan]=\"label\" class=\"ant-form-item-label\">\r\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\r\n        {{ schema.title }}\r\n        <span class=\"optional\">\r\n          {{ ui.optional }}\r\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\r\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\r\n          </nz-tooltip>\r\n        </span>\r\n      </label>\r\n    </nz-col>\r\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"control\" [nzOffset]=\"offset\">\r\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\r\n\r\n          <ng-container *ngIf=\"data.length === 0\">\r\n            <label nz-checkbox\r\n              [nzDisabled]=\"disabled\"\r\n              [ngModel]=\"value\"\r\n              (ngModelChange)=\"_setValue($event)\">\r\n              <span [innerHTML]=\"schema.title\"></span>\r\n              <span class=\"optional\">\r\n                {{ ui.optional }}\r\n                <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\r\n                  <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\r\n                </nz-tooltip>\r\n              </span>\r\n            </label>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"data.length > 0\">\r\n            <ng-container *ngIf=\"grid_span === 0\">\r\n              <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\r\n              <nz-checkbox-group [ngModel]=\"data\" (ngModelChange)=\"notifySet()\"></nz-checkbox-group>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"grid_span !== 0\">\r\n              <nz-checkbox-wrapper class=\"checkbox-grid-list\" (nzOnChange)=\"groupInGridChange($event)\">\r\n                <nz-row>\r\n                  <nz-col [nzSpan]=\"grid_span\" *ngIf=\"ui.checkAll\">\r\n                    <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\r\n                  </nz-col>\r\n                  <nz-col [nzSpan]=\"grid_span\" *ngFor=\"let i of data\">\r\n                    <label nz-checkbox [nzValue]=\"i.value\" [ngModel]=\"i.checked\" [nzDisabled]=\"i.disabled\">{{i.label}}</label>\r\n                  </nz-col>\r\n                </nz-row>\r\n              </nz-checkbox-wrapper>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\r\n          <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\r\n      </div>\r\n    </nz-col>\r\n  </nz-form-item>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CheckboxWidget extends ControlWidget {\r\n  data: SFSchemaEnum[] = [];\r\n  allChecked = false;\r\n  indeterminate = false;\r\n  grid_span: number;\r\n  label: number;\r\n  control: number;\r\n  offset: number;\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n\r\n        this.label = this.ui.spanLabel;\r\n        this.control = this.ui.spanControl;\r\n        if (list.length === 0) {\r\n          this.label = null;\r\n          this.offset = this.ui.spanLabel;\r\n        }\r\n        this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\r\n        this.updateAllChecked();\r\n      },\r\n    );\r\n  }\r\n\r\n  _setValue(value: any) {\r\n    this.setValue(value);\r\n    this.detectChanges();\r\n    this.notifyChange(value);\r\n  }\r\n\r\n  notifySet() {\r\n    const checkList = this.data.filter(w => w.checked);\r\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\r\n    this.notifyChange(checkList);\r\n  }\r\n\r\n  groupInGridChange(values: any[]) {\r\n    this.data.forEach(\r\n      item => (item.checked = values.indexOf(item.value) !== -1),\r\n    );\r\n    this.notifySet();\r\n  }\r\n\r\n  onAllChecked(e: Event) {\r\n    e.stopPropagation();\r\n    this.data.forEach(item => (item.checked = this.allChecked));\r\n    this.notifySet();\r\n  }\r\n\r\n  updateAllChecked(): this {\r\n    if (this.data.every(item => item.checked === false)) {\r\n      this.allChecked = false;\r\n      this.indeterminate = false;\r\n    } else if (this.data.every(item => item.checked === true)) {\r\n      this.allChecked = true;\r\n      this.indeterminate = false;\r\n    } else {\r\n      this.indeterminate = true;\r\n    }\r\n    this.detectChanges();\r\n    return this;\r\n  }\r\n\r\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\r\n    if (this.ui.change) this.ui.change(res);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-boolean',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    <nz-switch\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzCheckedChildren]=\"ui.checkedChildren\"\r\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\r\n    </nz-switch>\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class BooleanWidget extends ControlWidget {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { toBool } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-textarea',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <textarea nz-input\r\n      [attr.id]=\"id\"\r\n      [disabled]=\"disabled\"\r\n      [attr.disabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [attr.maxLength]=\"schema.maxLength || null\"\r\n      [attr.placeholder]=\"ui.placeholder\"\r\n      [nzAutosize]=\"autosize\">\r\n    </textarea>\r\n\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class TextareaWidget extends ControlWidget implements OnInit {\r\n  autosize: any = true;\r\n  ngOnInit(): void {\r\n    if (this.ui.autosize != null) {\r\n      this.autosize = this.ui.autosize;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { SFSchemaEnum } from '../../schema';\r\nimport { getData, toBool } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-select',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-select\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"change($event)\"\r\n      [nzPlaceHolder]=\"ui.placeholder\"\r\n      [nzAllowClear]=\"i.allowClear\"\r\n      [nzAutoFocus]=\"i.autoFocus\"\r\n      [nzDropdownClassName]=\"i.dropdownClassName\"\r\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\r\n      [nzServerSearch]=\"i.serverSearch\"\r\n      [nzMaxMultipleCount]=\"i.maxMultipleCount\"\r\n      [nzMode]=\"i.mode\"\r\n      [nzNotFoundContent]=\"i.notFoundContent\"\r\n      [nzShowSearch]=\"i.showSearch\"\r\n      (nzOpenChange)=\"openChange($event)\"\r\n      (nzOnSearch)=\"searchChange($event)\"\r\n      (nzScrollToBottom)=\"scrollToBottom($event)\">\r\n      <ng-container *ngIf=\"!hasGroup\">\r\n        <nz-option\r\n          *ngFor=\"let o of data\"\r\n          [nzLabel]=\"o.label\"\r\n          [nzValue]=\"o.value\"\r\n          [nzDisabled]=\"o.disabled\">\r\n        </nz-option>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"hasGroup\">\r\n        <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\r\n          <nz-option\r\n            *ngFor=\"let o of i.children\"\r\n            [nzLabel]=\"o.label\"\r\n            [nzValue]=\"o.value\"\r\n            [nzDisabled]=\"o.disabled\">\r\n          </nz-option>\r\n        </nz-option-group>\r\n      </ng-container>\r\n    </nz-select>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SelectWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  data: SFSchemaEnum[];\r\n  hasGroup = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      allowClear: this.ui.allowClear,\r\n      autoFocus: toBool(this.ui.autoFocus, false),\r\n      dropdownClassName: this.ui.dropdownClassName || null,\r\n      dropdownMatchSelectWidth: toBool(this.ui.dropdownMatchSelectWidth, true),\r\n      serverSearch: toBool(this.ui.serverSearch, false),\r\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\r\n      mode: this.ui.mode || 'default',\r\n      notFoundContent: this.ui.notFoundContent || 'æ æ³æ¾å°',\r\n      showSearch: toBool(this.ui.showSearch, true),\r\n    };\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n        this.hasGroup = list.filter(w => w.group === true).length > 0;\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  change(values: any) {\r\n    if (this.ui.change) this.ui.change(values);\r\n    this.setValue(values);\r\n  }\r\n\r\n  openChange(value: any) {\r\n    if (this.ui.openChange) this.ui.openChange(value);\r\n  }\r\n\r\n  searchChange(text: string) {\r\n    if (this.ui.onSearch) {\r\n      this.ui.onSearch(text).then((res: any[]) => {\r\n        this.data = res;\r\n        this.detectChanges();\r\n      });\r\n      return;\r\n    }\r\n    this.detectChanges();\r\n  }\r\n\r\n  scrollToBottom(value: any) {\r\n    if (this.ui.scrollToBottom) this.ui.scrollToBottom(value);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { toBool, getData } from '../../utils';\nimport { NzTreeNode, NzFormatEmitEvent } from 'ng-zorro-antd';\nimport { map } from 'rxjs/operators';\nimport { deepCopy } from '@delon/util';\n\n@Component({\n  selector: 'sf-tree-select',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-tree-select\n      [nzAllowClear]=\"i.allowClear\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzDisabled]=\"disabled\"\n      [nzShowSearch]=\"i.showSearch\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzDropdownStyle]=\"ui.dropdownStyle\"\n      [nzMultiple]=\"i.multiple\"\n      [nzSize]=\"ui.size\"\n      [nzCheckable]=\"i.checkable\"\n      [nzShowExpand]=\"i.showExpand\"\n      [nzShowLine]=\"i.showLine\"\n      [nzAsyncData]=\"i.asyncData\"\n      [nzNodes]=\"data\"\n      [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n      [nzDefaultExpandedKeys]=\"ui.defaultExpandedKeys\"\n      [nzDisplayWith]=\"i.displayWith\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      (nzExpandChange)=\"expandChange($event)\">\n    </nz-tree-select>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  private dc() {\n    // Muse wait `nz-tree-select` write values\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.detectChanges();\n        resolve();\n      }, 101);\n    });\n  }\n\n  private tranData(list: SFSchemaEnum[]) {\n    return list.map(node => new NzTreeNode(deepCopy(node) as any));\n  }\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title),\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData)\n      .pipe(map(list => this.tranData(list)))\n      .subscribe(list => {\n        this.data = list;\n        this.dc();\n      });\n  }\n\n  change(value: any) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e)\n      .pipe(map((list: SFSchemaEnum[]) => this.tranData(list)))\n      .subscribe(res => {\n        e.node.addChildren(res);\n        this.dc();\n      });\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { SFSchemaEnum } from '../../schema';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-tag',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-tag\r\n      *ngFor=\"let i of data\"\r\n      nzMode=\"checkable\"\r\n      [nzChecked]=\"i.checked\"\r\n      (nzAfterClose)=\"_afterClose()\"\r\n      (nzOnClose)=\"_close($event)\"\r\n      (nzCheckedChange)=\"onChange(i)\">\r\n      {{i.label}}\r\n    </nz-tag>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class TagWidget extends ControlWidget {\r\n  data: SFSchemaEnum[];\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  onChange(item: SFSchemaEnum) {\r\n    item.checked = !item.checked;\r\n    this.updateValue();\r\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\r\n  }\r\n\r\n  _afterClose() {\r\n    if (this.ui.afterClose) this.ui.afterClose();\r\n  }\r\n\r\n  _close(e: any) {\r\n    if (this.ui.onClose) this.ui.onClose(e);\r\n  }\r\n\r\n  private updateValue() {\r\n    this.formProperty.setValue(\r\n      this.data.filter(w => w.checked).map(i => i.value),\r\n      false,\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { deepGet } from '@delon/util';\r\nimport { UploadFile, UploadChangeParam, NzModalService } from 'ng-zorro-antd';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData, toBool } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-upload',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-upload\r\n      [nzType]=\"i.type\"\r\n      [nzFileList]=\"fileList\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzAction]=\"i.action\"\r\n      [nzAccept]=\"i.accept\"\r\n      [nzLimit]=\"i.limit\"\r\n      [nzSize]=\"i.size\"\r\n      [nzFileType]=\"i.fileType\"\r\n      [nzHeaders]=\"ui.headers\"\r\n      [nzData]=\"ui.data\"\r\n      [nzListType]=\"i.listType\"\r\n      [nzMultiple]=\"i.multiple\"\r\n      [nzName]=\"i.name\"\r\n      [nzShowUploadList]=\"i.showUploadList\"\r\n      [nzWithCredentials]=\"i.withCredentials\"\r\n      [nzRemove]=\"ui.remove\"\r\n      [nzPreview]=\"handlePreview\"\r\n      (nzChange)=\"change($event)\">\r\n      <ng-container [ngSwitch]=\"btnType\">\r\n        <ng-container *ngSwitchCase=\"'plus'\">\r\n          <i class=\"anticon anticon-plus\"></i>\r\n          <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"'drag'\">\r\n          <p class=\"ant-upload-drag-icon\"><i class=\"anticon anticon-inbox\"></i></p>\r\n          <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\r\n          <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n          <button type=\"button\" nz-button>\r\n            <i class=\"anticon anticon-upload\"></i><span [innerHTML]=\"i.text\"></span>\r\n          </button>\r\n        </ng-container>\r\n      </ng-container>\r\n    </nz-upload>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class UploadWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  fileList: UploadFile[] = [];\r\n  btnType = '';\r\n\r\n  constructor(cd: ChangeDetectorRef, private modalSrv: NzModalService) {\r\n    super(cd);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      type: this.ui.type || 'select',\r\n      text: this.ui.text || 'ç¹å»ä¸ä¼ ',\r\n      action: this.ui.action || '',\r\n      accept: this.ui.accept || '',\r\n      limit: this.ui.limit == null ? 0 : +this.ui.limit,\r\n      size: this.ui.size == null ? 0 : +this.ui.size,\r\n      fileType: this.ui.fileType || '',\r\n      listType: this.ui.listType || 'text',\r\n      multiple: toBool(this.ui.multiple, false),\r\n      name: this.ui.name || 'file',\r\n      showUploadList: toBool(this.ui.showUploadList, true),\r\n      withCredentials: toBool(this.ui.withCredentials, false),\r\n      resReName: (this.ui.resReName || '').split('.'),\r\n    };\r\n    if (this.i.listType === 'picture-card') this.btnType = 'plus';\r\n    if (this.i.type === 'drag') {\r\n      this.i.listType = null;\r\n      this.btnType = 'drag';\r\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\r\n      this.i.hint =\r\n        this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\r\n    }\r\n  }\r\n\r\n  change(args: UploadChangeParam) {\r\n    if (this.ui.change) this.ui.change(args);\r\n    if (args.type !== 'success') return;\r\n    this.notify(args.fileList);\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.fileList = list as UploadFile[];\r\n        this.notify(this.fileList);\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  private notify(fileList: UploadFile[]) {\r\n    const res = fileList.map(item =>\r\n      deepGet(item.response, this.i.resReName, item.response),\r\n    );\r\n    this.formProperty.setValue(\r\n      this.i.multiple === true ? res : res.pop(),\r\n      false,\r\n    );\r\n  }\r\n\r\n  handlePreview = (file: UploadFile) => {\r\n    this.modalSrv\r\n      .create({\r\n        nzContent: `<img src=\"${file.url ||\r\n          file.thumbUrl}\" class=\"img-fluid\" />`,\r\n        nzFooter: null,\r\n      })\r\n      .afterClose.subscribe(() => this.detectChanges());\r\n  };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\nimport { SFSchemaEnum } from '../../schema';\r\n\r\n@Component({\r\n  selector: 'sf-transfer',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-transfer\r\n      [nzDataSource]=\"list\"\r\n      [nzTitles]=\"i.titles\"\r\n      [nzOperations]=\"i.operations\"\r\n      [nzListStyle]=\"ui.listStyle\"\r\n      [nzItemUnit]=\"i.itemUnit\"\r\n      [nzItemsUnit]=\"i.itemsUnit\"\r\n      [nzShowSearch]=\"ui.showSearch\"\r\n      [nzFilterOption]=\"ui.filterOption\"\r\n      [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\r\n      [nzNotFoundContent]=\"ui.notFoundContent\"\r\n      [nzCanMove]=\"_canMove\"\r\n      (nzChange)=\"_change($event)\"\r\n      (nzSearchChange)=\"_searchChange($event)\"\r\n      (nzSelectChange)=\"_selectChange($event)\">\r\n    </nz-transfer>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class TransferWidget extends ControlWidget implements OnInit {\r\n  list: any[] = [];\r\n  i: any;\r\n  private _data: any[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      titles: this.ui.titles || ['', ''],\r\n      operations: this.ui.operations || ['', ''],\r\n      itemUnit: this.ui.itemUnit || 'é¡¹',\r\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\r\n    };\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, null).subscribe(list => {\r\n      let formData = this.formProperty.formData;\r\n      if (!Array.isArray(formData)) formData = [formData];\r\n      list.forEach((item: SFSchemaEnum) => {\r\n        if (~(formData as any[]).indexOf(item.value)) item.direction = 'right';\r\n      });\r\n      this.list = list;\r\n      this._data = list.filter(w => w.direction === 'right');\r\n      this.notify();\r\n      this.detectChanges();\r\n    });\r\n  }\r\n\r\n  private notify() {\r\n    this.formProperty.setValue(this._data.map(i => i.value), false);\r\n  }\r\n\r\n  _canMove = (arg: any): Observable<any[]> => {\r\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\r\n  };\r\n\r\n  _change(options: any) {\r\n    if (options.to === 'right') {\r\n      this._data = this._data.concat(...options.list);\r\n    } else {\r\n      this._data = this._data.filter(w => options.list.indexOf(w) === -1);\r\n    }\r\n    if (this.ui.change) this.ui.change(options);\r\n    this.notify();\r\n  }\r\n\r\n  _searchChange(options: any) {\r\n    if (this.ui.searchChange) this.ui.searchChange(options);\r\n  }\r\n\r\n  _selectChange(options: any) {\r\n    if (this.ui.selectChange) this.ui.selectChange(options);\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-slider',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-slider\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzRange]=\"ui.range\"\r\n      [nzMin]=\"min\"\r\n      [nzMax]=\"max\"\r\n      [nzStep]=\"step\"\r\n      [nzMarks]=\"marks\"\r\n      [nzDots]=\"ui.dots\"\r\n      [nzIncluded]=\"included\"\r\n      [nzVertical]=\"ui.vertical\"\r\n      [nzTipFormatter]=\"_formatter\"\r\n      (nzOnAfterChange)=\"_afterChange($event)\">\r\n    </nz-slider>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SliderWidget extends ControlWidget implements OnInit {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  marks: any;\r\n  included: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.min = this.schema.minimum || 0;\r\n    this.max = this.schema.maximum || 100;\r\n    this.step = this.schema.multipleOf || 1;\r\n\r\n    this.marks = this.ui.marks || null;\r\n    const included = this.ui.included;\r\n    this.included = typeof included === 'undefined' ? true : included;\r\n  }\r\n\r\n  _formatter = (value: any) => {\r\n    if (this.ui.formatter) return this.ui.formatter(value);\r\n    return value;\r\n  }\r\n\r\n  _afterChange(value: any) {\r\n    if (this.ui.afterChange) this.ui.afterChange(value);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-custom',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"$any(ui)._render\"\r\n      [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"></ng-template>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CustomWidget extends ControlWidget {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { toBool } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-rate',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-rate\r\n      [nzDisabled]=\"disabled\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzAllowClear]=\"allowClear\"\r\n      [nzAllowHalf]=\"allowHalf\"\r\n      [nzAutoFocus]=\"autoFocus\"\r\n      [nzCount]=\"count\"></nz-rate>\r\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class RateWidget extends ControlWidget implements OnInit {\r\n  count: number;\r\n  allowHalf: boolean;\r\n  allowClear: boolean;\r\n  autoFocus: boolean;\r\n  hasText = false;\r\n  ngOnInit(): void {\r\n    this.count = this.schema.maximum || 5;\r\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\r\n    this.allowClear = toBool(this.ui.allowClear, true);\r\n    this.autoFocus = toBool(this.ui.autoFocus, false);\r\n    this.hasText = !!this.ui.text;\r\n  }\r\n\r\n  genText() {\r\n    return this.hasText\r\n      ? (this.ui.text as string).replace('{{value}}', this.formProperty.value)\r\n      : '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { startWith, map, flatMap, debounceTime } from 'rxjs/operators';\r\nimport { ControlWidget } from '../../widget';\r\nimport { SFSchemaEnum } from '../../schema';\r\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\r\n\r\nexport const EMAILSUFFIX = [\r\n  'qq.com',\r\n  '163.com',\r\n  'gmail.com',\r\n  '126.com',\r\n  'aliyun.com',\r\n];\r\n\r\n@Component({\r\n  selector: 'sf-autocomplete',\r\n  template: `\r\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n      <input nz-input [nzAutocomplete]=\"auto\"\r\n        [attr.id]=\"id\"\r\n        [disabled]=\"disabled\"\r\n        [attr.disabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [ngModel]=\"value\"\r\n        (ngModelChange)=\"setValue($event)\"\r\n        [attr.maxLength]=\"schema.maxLength || null\"\r\n        [attr.placeholder]=\"ui.placeholder\"\r\n        autocomplete=\"off\">\r\n      <nz-autocomplete #auto\r\n        [nzBackfill]=\"i.backfill\"\r\n        [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\r\n        [nzWidth]=\"i.width\"\r\n        (selectionChange)=\"setValue($event?.nzValue)\">\r\n        <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i.label\">{{i.label}}</nz-auto-option>\r\n      </nz-autocomplete>\r\n    </sf-item-wrap>\r\n    `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class AutoCompleteWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  fixData: SFSchemaEnum[] = [];\r\n  list: Observable<SFSchemaEnum[]>;\r\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\r\n  private isAsync = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      backfill: toBool(this.ui.backfill, false),\r\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\r\n      width: this.ui.width || undefined,\r\n    };\r\n\r\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\r\n    if (typeof this.filterOption === 'boolean') {\r\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\r\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\r\n    }\r\n\r\n    this.isAsync = !!this.ui.asyncData;\r\n    const orgTime = +(this.ui.debounceTime || 0);\r\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\r\n    this.list = this.formProperty.valueChanges.pipe(\r\n      debounceTime(time),\r\n      startWith(''),\r\n      flatMap(\r\n        input =>\r\n          this.isAsync ? this.ui.asyncData(input) : this.filterData(input),\r\n      ),\r\n      map(res => getEnum(res, null, this.schema.readOnly)),\r\n    );\r\n  }\r\n\r\n  reset(value: any) {\r\n    if (this.isAsync) return;\r\n    switch (this.ui.type) {\r\n      case 'email':\r\n        this.fixData = getCopyEnum(EMAILSUFFIX, null, this.schema.readOnly);\r\n        break;\r\n      default:\r\n        this.fixData = getCopyEnum(\r\n          this.schema.enum,\r\n          this.formProperty.formData,\r\n          this.schema.readOnly\r\n        );\r\n        break;\r\n    }\r\n  }\r\n\r\n  private filterData(input: string) {\r\n    switch (this.ui.type) {\r\n      case 'email':\r\n        return this.addEmailSuffix(input);\r\n      default:\r\n        return of(\r\n          this.fixData.filter(option => this.filterOption(input, option)),\r\n        );\r\n    }\r\n  }\r\n\r\n  private addEmailSuffix(value: string) {\r\n    return of(\r\n      !value || ~value.indexOf('@')\r\n        ? []\r\n        : this.fixData.map(domain => `${value}@${domain.label}`),\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData, toBool } from '../../utils';\r\nimport { SFSchemaEnum } from '../../schema';\r\n\r\n@Component({\r\n  selector: 'sf-cascader',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-cascader\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"_change($event)\"\r\n      [nzOptions]=\"data\"\r\n      [nzAllowClear]=\"ui.allowClear\"\r\n      [nzAutoFocus]=\"ui.autoFocus\"\r\n      [nzChangeOn]=\"ui.changeOn\"\r\n      [nzChangeOnSelect]=\"ui.changeOnSelect\"\r\n      [nzColumnClassName]=\"ui.columnClassName\"\r\n      [nzExpandTrigger]=\"ui.expandTrigger\"\r\n      [nzMenuClassName]=\"ui.menuClassName\"\r\n      [nzMenuStyle]=\"ui.menuStyle\"\r\n      [nzLabelProperty]=\"ui.labelProperty\"\r\n      [nzValueProperty]=\"ui.valueProperty\"\r\n      [nzLoadData]=\"loadData\"\r\n      [nzPlaceHolder]=\"ui.placeholder\"\r\n      [nzShowArrow]=\"showArrow\"\r\n      [nzShowInput]=\"showInput\"\r\n      [nzShowSearch]=\"ui.showSearch\"\r\n      (nzClear)=\"_clear($event)\"\r\n      (nzVisibleChange)=\"_visibleChange($event)\"\r\n      (nzSelect)=\"_select($event)\"\r\n      (nzSelectionChange)=\"_selectionChange($event)\">\r\n    </nz-cascader>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CascaderWidget extends ControlWidget implements OnInit {\r\n  clearText: string;\r\n  showArrow: boolean;\r\n  showInput: boolean;\r\n  triggerAction: string[];\r\n  data: SFSchemaEnum[] = [];\r\n  loadData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.clearText = this.ui.clearText || 'æ¸é¤';\r\n    this.showArrow = toBool(this.ui.showArrow, true);\r\n    this.showInput = toBool(this.ui.showInput, true);\r\n    this.triggerAction = this.ui.triggerAction || ['click'];\r\n    if (!!this.ui.asyncData) {\r\n      this.loadData = (node: any, index: number) =>\r\n        (this.ui.asyncData as any)(node, index, this);\r\n    }\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  _visibleChange(status: boolean) {\r\n    this.ui.visibleChange && this.ui.visibleChange(status);\r\n  }\r\n\r\n  _change(value: string) {\r\n    this.setValue(value);\r\n    this.ui.change && this.ui.change(value);\r\n  }\r\n\r\n  _selectionChange(options: any) {\r\n    this.ui.selectionChange && this.ui.selectionChange(options);\r\n  }\r\n\r\n  _select(options: any) {\r\n    this.ui.select && this.ui.select(options);\r\n  }\r\n\r\n  _clear(options: any) {\r\n    this.ui.clear && this.ui.clear(options);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData, getEnum } from '../../utils';\r\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\r\nimport { FormProperty, PropertyGroup } from '../../model/form.property';\r\nimport { NzMentionComponent } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  selector: 'sf-mention',\r\n  template: `\r\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n      <nz-mention #mentions\r\n        [nzSuggestions]=\"data\"\r\n        [nzValueWith]=\"i.valueWith\"\r\n        [nzLoading]=\"loading\"\r\n        [nzNotFoundContent]=\"i.notFoundContent\"\r\n        [nzPlacement]=\"i.placement\"\r\n        [nzPrefix]=\"i.prefix\"\r\n        (nzOnSelect)=\"_select($event)\"\r\n        (nzOnSearchChange)=\"_search($event)\">\r\n\r\n        <ng-container *ngIf=\"ui.inputStyle !== 'textarea'\">\r\n          <input nzMentionTrigger nz-input\r\n            [attr.id]=\"id\"\r\n            [disabled]=\"disabled\"\r\n            [attr.disabled]=\"disabled\"\r\n            [nzSize]=\"ui.size\"\r\n            [ngModel]=\"value\"\r\n            (ngModelChange)=\"setValue($event)\"\r\n            [attr.maxLength]=\"schema.maxLength || null\"\r\n            [attr.placeholder]=\"ui.placeholder\"\r\n            autocomplete=\"off\">\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"ui.inputStyle === 'textarea'\">\r\n          <textarea nzMentionTrigger nz-input\r\n            [attr.id]=\"id\"\r\n            [disabled]=\"disabled\"\r\n            [attr.disabled]=\"disabled\"\r\n            [nzSize]=\"ui.size\"\r\n            [ngModel]=\"value\"\r\n            (ngModelChange)=\"setValue($event)\"\r\n            [attr.maxLength]=\"schema.maxLength || null\"\r\n            [attr.placeholder]=\"ui.placeholder\"\r\n            [nzAutosize]=\"ui.autosize\">\r\n          </textarea>\r\n        </ng-container>\r\n\r\n      </nz-mention>\r\n\r\n    </sf-item-wrap>\r\n    `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MentionWidget extends ControlWidget implements OnInit {\r\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\r\n  data: SFSchemaEnum[] = [];\r\n  i: any;\r\n  loading = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      valueWith: this.ui.valueWith || (item => item.label),\r\n      notFoundContent:\r\n        this.ui.notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\r\n      placement: this.ui.placement || 'bottom',\r\n      prefix: this.ui.prefix || '@',\r\n    };\r\n    const min =\r\n        typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1,\r\n      max =\r\n        typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\r\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\r\n      this.ui.validator = (\r\n        value: any,\r\n        formProperty: FormProperty,\r\n        form: PropertyGroup,\r\n      ) => {\r\n        const count = this.mentionChild.getMentions().length;\r\n        if (min !== -1 && count < min) {\r\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\r\n        }\r\n        if (max !== -1 && count > max) {\r\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\r\n        }\r\n        return null;\r\n      };\r\n    }\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, null).subscribe(list => {\r\n      this.data = list;\r\n      this.detectChanges();\r\n    });\r\n  }\r\n\r\n  _select(options: any) {\r\n    if (this.ui.select) this.ui.select(options);\r\n  }\r\n\r\n  _search(option: any) {\r\n    if (typeof this.ui.loadData !== 'function') return;\r\n\r\n    this.loading = true;\r\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\r\n      .pipe(tap(() => (this.loading = false)), map(res => getEnum(res, null, this.schema.readOnly)))\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.cd.detectChanges();\r\n      });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-text',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    {{ value || ui.defaultText || '-' }}\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class TextWidget extends ControlWidget implements OnInit {\r\n  ngOnInit(): void {\r\n    this.ui._required = false;\r\n  }\r\n}\r\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ObjectWidget } from './object/object.widget';\nimport { ArrayWidget } from './array/array.widget';\nimport { StringWidget } from './string/string.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { DateWidget } from './date/date.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { UploadWidget } from './upload/upload.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { TextWidget } from './text/text.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { DelonUtilModule } from '@delon/util';\r\nimport { DelonLocaleModule } from '@delon/theme';\r\n\r\nimport { DelonFormConfig } from './config';\r\nimport {\r\n  SchemaValidatorFactory,\r\n  AjvSchemaValidatorFactory,\r\n} from './validator.factory';\r\nimport { SFComponent } from './sf.component';\r\nimport { SFItemComponent } from './sf-item.component';\r\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\r\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\r\nimport { SFFixedDirective } from './sf-fixed.directive';\r\n\r\nconst COMPONENTS = [\r\n  SFComponent,\r\n  SFItemComponent,\r\n  SFItemWrapComponent,\r\n  SFTemplateDirective,\r\n  SFFixedDirective,\r\n];\r\n\r\n// region: widgets\r\n\r\nimport { WidgetRegistry } from './widget.factory';\r\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\r\nimport { ObjectWidget } from './widgets/object/object.widget';\r\nimport { ArrayWidget } from './widgets/array/array.widget';\r\nimport { StringWidget } from './widgets/string/string.widget';\r\nimport { NumberWidget } from './widgets/number/number.widget';\r\nimport { DateWidget } from './widgets/date/date.widget';\r\nimport { TimeWidget } from './widgets/time/time.widget';\r\nimport { RadioWidget } from './widgets/radio/radio.widget';\r\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\r\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\r\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\r\nimport { SelectWidget } from './widgets/select/select.widget';\r\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\r\nimport { TagWidget } from './widgets/tag/tag.widget';\r\nimport { UploadWidget } from './widgets/upload/upload.widget';\r\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\r\nimport { SliderWidget } from './widgets/slider/slider.widget';\r\nimport { CustomWidget } from './widgets/custom/custom.widget';\r\nimport { RateWidget } from './widgets/rate/rate.widget';\r\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\r\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\r\nimport { MentionWidget } from './widgets/mention/mention.widget';\r\nimport { TextWidget } from './widgets/text/text.widget';\r\n\r\nconst WIDGETS = [\r\n  ObjectWidget,\r\n  ArrayWidget,\r\n  StringWidget,\r\n  NumberWidget,\r\n  DateWidget,\r\n  TimeWidget,\r\n  RadioWidget,\r\n  CheckboxWidget,\r\n  BooleanWidget,\r\n  TextareaWidget,\r\n  SelectWidget,\r\n  TreeSelectWidget,\r\n  TagWidget,\r\n  UploadWidget,\r\n  TransferWidget,\r\n  SliderWidget,\r\n  RateWidget,\r\n  AutoCompleteWidget,\r\n  CascaderWidget,\r\n  MentionWidget,\r\n  CustomWidget,\r\n  TextWidget,\r\n];\r\n\r\n// endregion\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, NgZorroAntdModule],\r\n  declarations: [...COMPONENTS, ...WIDGETS],\r\n  entryComponents: [...WIDGETS],\r\n  exports: [...COMPONENTS],\r\n})\r\nexport class DelonFormModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DelonFormModule,\r\n      providers: [\r\n        DelonFormConfig,\r\n        {\r\n          provide: SchemaValidatorFactory,\r\n          useClass: AjvSchemaValidatorFactory,\r\n        },\r\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
