{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/const.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts","ng://@delon/form/src/errors.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","SF_DEFAULT_CONFIG","formatMap","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","orderProperties","order","isArray","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","prop","rest","restIndex","lastIndexOf","complete","splice","getEnum","list","formData","readOnly","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","pathValue","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","options","onlySelf","emitValidator","emitValueEvent","updatePath","updateValue","_updateValue","valueChanges","_runValidation","searchProperty","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","_b","_a","sfComp","_inited","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","_propertiesId","createProperties","orderedProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","cleanValue","addProperty","newProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","showRequired","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","Injectable","AjvSchemaValidatorFactory","document","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","platform","unsubscribe$","_renders","Map","_valid","locale","layout","compact","loading","noColon","formValueChange","EventEmitter","formChange","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","spanLabelFixed","spanLabel","spanControl","offsetControl","grid","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","items","uiSchemaInArr","inIfFn","size","_ui","render","firstKey","find","startsWith","btnRender","btnUi","offset","span","class","ngOnInit","isBrowser","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__horizontal]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","[class.sf__compact]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Platform","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","controlEl","unit","setStyle","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","showError","get","afterViewInit","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","addTitle","addType","removable","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","data","nzValue","_setValue","val","toString","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","formatString","setTimeout","emitModelChange","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","floor","ObjectWidget","showExpand","expand","showTitle","_c","propertiesId","_d","show","changeExpand","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","borderless","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","optionHeightPx","optionOverflowSize","Infinity","o1","o2","getOrgData","children","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showIcon","showLine","checkStrictly","hideUnMatched","defaultExpandAll","displayWith","expandChange","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","pureValue","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","getDateLocale","formatDistance"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-WW' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","export const SF_SEQ = '/';\n","import { AlainSFConfig } from '@delon/util';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity) {\n    options = { onlySelf: false, emitValidator: true, emitValueEvent: true, updatePath: '', updateValue: null, ...options };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue || this.value;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    if (this.root.widget?.sfComp?._inited === true) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig, deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<{}>();\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  @Output() readonly formReset = new EventEmitter<{}>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** 表单校验状态 */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** 表单值 */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * 根据路径获取表单元素属性\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * 根据路径获取表单元素当前值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * 根据路径设置某个表单元素属性值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   * @param value 新值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * 刷新整个 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 若希望对某个表单元素进行刷新请使用：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) protected readonly cd: ChangeDetectorRef,\n    @Inject(Injector) protected readonly injector: Injector,\n    @Inject(SFItemComponent) protected readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n}\n\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.disabled || (this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems);\n  }\n\n  get showRemove() {\n    return !this.disabled && this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    const property = this.formProperty.add({});\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null) {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]) {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear() {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      this.displayValue =\n        value == null\n          ? []\n          : [\n              value,\n              toDate(this.endProperty.formData as NzSafeAny, { formatString: this.endFormat || this.startFormat, defaultValue: null }),\n            ];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange = true) {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null) {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    if (!Array.isArray(values)) {\n      return this.data.find(w => w.value === values)!;\n    }\n    return values.map(value => {\n      let item: SFSchemaEnum | null = null;\n      this.data.forEach(list => {\n        item = list.children?.find(w => w.value === value)!;\n      });\n      return item;\n    });\n  }\n\n  openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue) {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as NzUploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: NzUploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]) {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService, DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}