{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts","ng://@delon/form/src/errors.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","DelonFormConfig","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","Injectable","args","providedIn","FORMATMAPS","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","isBlank","toBool","defaultValue","toBoolean","di","ui","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","PropertyGroup","_path","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ArrayProperty","formPropertyFactory","options","tick","pos","isNaN","setValue","clearErrors","resetProperties","_hasValue","addProperty","newProperty","createProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","splice","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","ObjectProperty","_propertiesId","createProperties","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","orderProperties","title","StringProperty","FormPropertyFactory","refSchema","pop","TypeError","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","SchemaValidatorFactory","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","aclSrv","cdr","i18n","unsubscribe$","_renders","Map","_valid","_inited","locale","layout","loading","formChange","EventEmitter","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","deepMergeKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","optionalHelp","text","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","acl","can","idx","items","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ACLService","Optional","ChangeDetectorRef","DelonLocaleService","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","_a","addTitle","addType","removable","removeTitle","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_select","select","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","displayValue","flatRange","displayFormat","allowClear","showToday","compCd","setTimeout","toDate","endProperty","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","valueWith","notFoundContent","prefix","autosize","_b","minimum","maximum","min","count","mentionChild","getMentions","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","Infinity","o1","o2","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_afterClose","afterClose","_close","onClose","TextWidget","TextareaWidget","TimeWidget","allowEmpty","defaultOpenValue","hideDisabledOptions","hourStep","minuteStep","nzMinuteStep","secondStep","v","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","get","NzModalService","nzContent","nzFooter","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","hint","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' | null = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = {};\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat?: string = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat?: string = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat?: string = 'x';\n  /**\n   * æå® `format: 'email'` çé»è®¤Emailåç¼\n   */\n  uiEmailSuffixes?: string[] = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\n}\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n","import { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  private _path: string;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = this as PropertyGroup;\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type as string;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root || ((this as any) as PropertyGroup);\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(valueCheck, visibilityCheck).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties![propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>) {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = this.properties as FormProperty[];\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() { }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup, FormProperty } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      this.properties![propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && this.properties![propertyId]) {\n        (this.properties![propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      (this.properties![propertyId] as FormProperty).resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nconst SEQ = '/';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private options: DelonFormConfig) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SEQ;\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && ((parent!.schema.required || []) as string[]).indexOf(propertyId.split(SEQ).pop()!) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: any;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv({\n      ...options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ACLService } from '@delon/acl';\nimport { DelonLocaleService, LocaleData } from '@delon/theme';\nimport { deepCopy, InputBoolean, deepMergeKey } from '@delon/util';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun, SFOptionalHelp } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema, FORMATMAPS } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, options: DelonFormConfig) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** è¡¨åé»è®¤å¼ */\n  @Input() formData: {};\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨ `spanLabelFixed` åºå®æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input() autocomplete: 'on' | 'off';\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input() @InputBoolean() firstVisual = true;\n  /** æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load statusï¼when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  /** æ°æ®åæ´æ¶åè° */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** éç½®è¡¨åæ¶åè° */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å±æ§\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å½åå¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è®¾ç½®æä¸ªè¡¨ååç´ å±æ§å¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   * @param value æ°å¼\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    @Optional() private aclSrv: ACLService,\n    private cdr: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate as boolean;\n    this.firstVisual = options.firstVisual as boolean;\n    this.autocomplete = options.autocomplete as 'on' | 'off';\n    this.i18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    if (this.aclSrv) {\n      this.aclSrv.change\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = deepMergeKey(\n          {},\n          true,\n          { widget: property.type },\n          property.format && FORMATMAPS[property.format],\n          typeof property.ui === 'string' ? { widget: property.ui } : null,\n          !property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null,\n          this._defUi,\n          property.ui,\n          uiSchema[uiKey],\n        ) as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          };\n          if (!ui.optionalHelp.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          uiRes[uiKey].$items = uiRes[uiKey].$items || {};\n          inFn(property.items, property.items, (uiSchema[uiKey] || {}).$items || {}, ui, uiRes[uiKey].$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render!.grid) {\n        this._btn.render!.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render!.spanLabelFixed == null) {\n        this._btn.render!.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (!this._btn.render!.class && (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)) {\n        this._btn.render!.class = 'text-center';\n      }\n    } else {\n      this._btn.render!.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    const fn = (property: FormProperty) => {\n      if (property == null) return;\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn(property.properties![key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...this.formData, ...value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: `\n    <ng-template #target></ng-template>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem, SFOptionalHelp } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith('/') ? this.path : `/` + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { LocaleData } from '@delon/theme';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem, SFOptionalHelp } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n}\n\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue) {}\n}\n\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = addTitle || this.l.addText;\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add(null!);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { of, Observable } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> implements AfterViewInit {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n  }\n\n  ngAfterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFCascaderWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: CascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || 'æ¸é¤';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: CascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n\n  _selectionChange(options: any) {\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _clear() {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  format: string;\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    // tslint:disable-next-line: no-shadowed-variable\n    const { mode, end, displayFormat, format, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = format!;\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.compCd();\n  }\n\n  _change(value: Date | Date[] | null) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value) ? value.map(d => format(d, this.format)) : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent!.properties![this.ui.end!];\n  }\n\n  private setEnd(value: string | null) {\n    if (this.flatRange) {\n      this.endProperty.setValue(value, true);\n    }\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NzMentionComponent, MentionOnSearchTypes } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = formProperty.properties![key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  _value: any;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      allowClear,\n      autoFocus,\n      dropdownClassName,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      notFoundContent,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      allowClear,\n      autoFocus: toBool(autoFocus, false),\n      dropdownClassName: dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      notFoundContent,\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Marks, SliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: Marks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: SliderValue) {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(this.data.filter(w => w.checked).map(i => i.value), false);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  displayValue: Date | null = null;\n  format: string | undefined;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { of, Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || 'é¡¹',\n      itemsUnit: itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { UploadChangeParam, UploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    this.i = {\n      type: type || 'select',\n      text: text || 'ç¹å»ä¸ä¼ ',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: toBool(showUploadList, true),\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (this.i.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint = this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this._setValue(this.fileList);\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `å¸å°æ¨¡å¼åºé`,\n  $ref: `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems: `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties: `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf: `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies: `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum: `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format: `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type: `ç±»ååºå½æ¯ {type}`,\n  required: `å¿å¡«é¡¹`,\n  maxLength: `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength: `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum: `å¿é¡» {comparison}{limit}`,\n  formatMinimum: `å¿é¡» {comparison}{limit}`,\n  maximum: `å¿é¡» {comparison}{limit}`,\n  formatMaximum: `å¿é¡» {comparison}{limit}`,\n  maxItems: `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems: `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties: `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties: `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf: `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not: `ä¸åºå½å¹é \"not\" schema`,\n  oneOf: `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern: `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems: `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom: `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames: `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired: `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch: `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const: `åºå½ç­äºå¸¸é`,\n  contains: `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if: `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup,\n  ) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}