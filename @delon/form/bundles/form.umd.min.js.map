{"version":3,"sources":["ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","node_modules/tslib/tslib.es6.js","ng://@delon/form/src/utils.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"names":["ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","this","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","Injectable","args","providedIn","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","FORMATMAPS","date-time","widget","showTime","date","full-date","time","full-time","week","mode","month","uri","email","color","","isBlank","toBool","defaultValue","toBoolean","di","ui","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","findSchemaDefinition","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","localSchema","__rest","indexOf","getOwnPropertySymbols","resolveIf","properties","allKeys","keys","ifKeys","detectKey","then","hasElse","else","visibleIf","visibleElse","forEach","cond","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","options","_value","_errors","_objErrors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","schemaValidator","createValidatorFn","default","_parent","_root","root","PropertyGroup","_path","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","idx","message","_custom","mergeErrors","newErrors","emitFormat","v","params","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ArrayProperty","formPropertyFactory","tick","pos","isNaN","setValue","clearErrors","resetProperties","_hasValue","addProperty","newProperty","createProperty","items","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","splice","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","ObjectProperty","_propertiesId","createProperties","orderedProperties","orderProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","title","StringProperty","FormPropertyFactory","refSchema","pop","TypeError","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","WidgetRegistry","widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","cdr","i18n","locale","_renders","Map","_valid","_inited","layout","formChange","EventEmitter","formSubmit","formReset","formError","i18n$","change","coverButtonProperty","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","coverProperty","isHorizontal","_schema","inFn","parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","refreshSchema","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","errorsChanges","Promise","resolve","unsubscribe","ngOnDestroy","Component","selector","template","providers","provide","deps","host","[class.sf]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","DelonLocaleService","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","unsubscribe$","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","takeUntil","markForCheck","Injector","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","addTitle","l","addText","addType","removeTitle","removable","removeText","addItem","removeItem","EMAILSUFFIX","AutoCompleteWidget","fixData","typing","isAsync","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_select","select","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","setTimeout","CustomWidget","DateWidget","displayValue","flatRange","displayFormat","allowClear","showToday","compCd","toDate","endProperty","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","loading","_a","valueWith","notFoundContent","placement","prefix","autosize","min","count","mentionChild","getMentions","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","text","SelectWidget","hasGroup","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","Infinity","showSearch","group","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnBefore","addOnAfterIcon","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_afterClose","afterClose","_close","onClose","TextWidget","TextareaWidget","TimeWidget","allowEmpty","defaultOpenValue","hideDisabledOptions","hourStep","minuteStep","nzMinuteStep","secondStep","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","dc","tranData","NzTreeNode","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handlePreview","file","preview","get","NzModalService","nzContent","url","thumbUrl","nzFooter","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","beforeUpload","customRequest","directory","openFileDialogOnClick","hint","deepGet","response","NzWidgetRegistry","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","NgZorroAntdModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `å¸å°æ¨¡å¼åºé`,\n  $ref: `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems: `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties: `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf: `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies: `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum: `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format: `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type: `ç±»ååºå½æ¯ {type}`,\n  required: `å¿å¡«é¡¹`,\n  maxLength: `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength: `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum: `å¿é¡» {comparison}{limit}`,\n  formatMinimum: `å¿é¡» {comparison}{limit}`,\n  maximum: `å¿é¡» {comparison}{limit}`,\n  formatMaximum: `å¿é¡» {comparison}{limit}`,\n  maxItems: `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems: `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties: `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties: `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf: `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not: `ä¸åºå½å¹é \"not\" schema`,\n  oneOf: `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern: `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems: `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom: `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames: `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired: `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch: `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const: `åºå½ç­äºå¸¸é`,\n  contains: `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if: `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  // tslint:disable-next-line:no-any\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup,\n  ) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { ERRORSDEFAULT } from './errors';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  // tslint:disable-next-line:no-any\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat?: string = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat?: string = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat?: string = 'x';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// tslint:disable:no-any\nimport { deepCopy, toBoolean } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\n\n  if (!schema.if.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties);\n  const ifKeys = Object.keys(schema.if.properties);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then.required);\n  schema.required = schema.required.concat(schema.then.required);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else.required);\n    schema.required = schema.required.concat(schema.else.required);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if.properties[key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\n  });\n\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else.required.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: any,\n  asyncArgs?: any,\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map(list => getEnum(list, formData, schema.readOnly)));\n  }\n  return of(getCopyEnum(schema.enum, formData, schema.readOnly));\n}\n","import { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty>;\n  private _errors: ErrorData[] = null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[]>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    private options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = this as PropertyGroup;\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type;\n  }\n\n  get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    // tslint:disable-next-line:no-any\n    return this._root || ((this as any) as PropertyGroup);\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach((err, idx: number) => {\n        if (!err.message)\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this.options.errors[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(\n              /{([\\.a-z0-9]+)}/g,\n              (v: string, key: string) => err.params[key] || '',\n            );\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(valueCheck, visibilityCheck).pipe(\n              map(results => results[0] && results[1]),\n            );\n            propertiesBinding.push(and);\n          } else {\n            console.warn(\n              `Can't find property ${dependencyPath} for visibility check of ${this.path}`,\n            );\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    // tslint:disable-next-line:no-any\n    const value: any[] = [];\n    this.forEachChild((property: ObjectProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items,\n      this.ui.$items,\n      formData,\n      this,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>) {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = this.properties as FormProperty[];\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties), this.ui\n        .order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties.forEach(propertyId => {\n      this.properties[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties[propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && this.properties[propertyId]) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    for (const propertyId in this.schema.properties) {\n      this.properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nconst SEQ = '/';\n\nexport class FormPropertyFactory {\n  constructor(\n    private schemaValidatorFactory: SchemaValidatorFactory,\n    private options: DelonFormConfig,\n  ) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SEQ;\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error(\n          'Instanciation of a FormProperty with an unknown parent type: ' + parent.type,\n        );\n      }\n    } else {\n      path = SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && ((parent!.schema.required || []) as string[]).indexOf(propertyId.split(SEQ).pop()) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if (\n        (schema.type === 'string' || schema.type === 'number') &&\n        !schema.format &&\n        !(ui as SFUISchemaItem).format\n      ) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiDateStringFormat\n              : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiTimeStringFormat\n              : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\n// tslint:disable-next-line:no-any\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[] },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  // tslint:disable-next-line:no-any\n  protected ajv: any;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv({\n      ...options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[] },\n  ): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = []\n      .concat(this.options.ingoreKeywords)\n      .concat(extraOptions.ingoreKeywords);\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private widgets: { [type: string]: Widget<FormProperty> } = {};\n\n  private defaultWidget: Widget<FormProperty>;\n\n  // tslint:disable-next-line:no-any\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  // tslint:disable-next-line:no-any\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty> {\n    if (this.has(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    // tslint:disable-next-line:no-any\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty>>(\n      componentClass,\n    );\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { DelonLocaleService } from '@delon/theme';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { Subscription } from 'rxjs';\n\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton } from './interface';\nimport { FormProperty } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema, FORMATMAPS } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(\n  schemaValidatorFactory: SchemaValidatorFactory,\n  options: DelonFormConfig,\n) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private i18n$: Subscription;\n  // tslint:disable-next-line:no-any\n  locale: any = {};\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  rootProperty: FormProperty = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input() layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** è¡¨åé»è®¤å¼ */\n  @Input() formData: {};\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨ `spanLabelFixed` åºå®æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input() autocomplete: 'on' | 'off';\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input() @InputBoolean() firstVisual = true;\n  /** æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n\n  /** æ°æ®åæ´æ¶åè° */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** éç½®è¡¨åæ¶åè° */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  // tslint:disable-next-line:no-any\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å±æ§\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty {\n    return this.rootProperty.searchProperty(path);\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å½åå¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  // tslint:disable-next-line:no-any\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è®¾ç½®æä¸ªè¡¨ååç´ å±æ§å¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   * @param value æ°å¼\n   */\n  // tslint:disable-next-line:no-any\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private cdr: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate;\n    this.firstVisual = options.firstVisual;\n    this.autocomplete = options.autocomplete;\n    this.i18n$ = this.i18n.change.subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.coverButtonProperty();\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      Object.keys(schema.properties).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties[key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && FORMATMAPS[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.ui && Array.isArray(property.enum) && property.enum.length > 0\n            ? { widget: 'select' }\n            : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel =\n                typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl =\n                typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined'\n                  ? null\n                  : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties[ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (property.items) {\n          uiRes[uiKey].$items = uiRes[uiKey].$items || {};\n          inFn(\n            property.items,\n            property.items,\n            (uiSchema[uiKey] || {}).$items || {},\n            ui,\n            uiRes[uiKey].$items,\n          );\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties).forEach(key => {\n        const property = schema.properties[key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render.grid) {\n        this._btn.render.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render.spanLabelFixed == null) {\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (\n        !this._btn.render.class &&\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\n      ) {\n        this._btn.render.class = 'text-center';\n      }\n    } else {\n      this._btn.render.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(): void {\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(): this {\n    this.rootProperty._runValidation();\n    const errors = this.rootProperty.errors;\n    this._valid = !(errors && errors.length);\n    if (!this._valid) this.formError.emit(errors);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined')\n      throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(\n      this._schema,\n      this._ui,\n      this.formData,\n    );\n    this.attachCustomRender();\n\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...this.formData, ...value };\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors);\n      this.cdr.detectChanges();\n    });\n\n    return this.reset();\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    this.i18n$.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  template: `\n    <ng-template #target></ng-template>\n  `,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty> = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget ||\n      this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith('/') ? this.path : `/` + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\n\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: SFUISchemaItem;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean {\n    if (this.schema.readOnly === true) return true;\n\n    return null;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(\n        takeUntil(this.sfItemComp.unsubscribe$),\n        filter(w => w != null),\n      )\n      .subscribe((errors: ErrorData[]) => {\n        di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n        // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n        if (this.firstVisual) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? errors[0].message : '';\n\n          this.cd.detectChanges();\n        }\n        this.firstVisual = true;\n      });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue);\n}\n\nexport class ControlWidget extends Widget<FormProperty> {\n  reset(value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty> implements AfterViewInit {\n  reset(value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty> implements AfterViewInit {\n  reset(value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return (\n      this.schema.maxItems &&\n      (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems\n    );\n  }\n\n  // tslint:disable-next-line:no-any\n  get l(): any {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  ngOnInit(): void {\n    if (this.ui.grid && this.ui.grid.arraySpan) {\n      this.arraySpan = this.ui.grid.arraySpan;\n    }\n\n    this.addTitle = this.ui.addTitle || this.l.addText;\n    this.addType = this.ui.addType || 'dashed';\n    this.removeTitle =\n      this.ui.removable === false ? null : this.ui.removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add(null);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd';\nimport { of, Observable } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\nexport const EMAILSUFFIX = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n})\nexport class AutoCompleteWidget extends ControlWidget implements AfterViewInit {\n  // tslint:disable-next-line:no-any\n  i: any = {};\n  fixData: SFSchemaEnum[] = [];\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n  }\n\n  ngAfterViewInit(): void {\n    this.i = {\n      backfill: toBool(this.ui.backfill, false),\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\n      width: this.ui.width || undefined,\n    };\n\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\n    if (typeof this.filterOption === 'boolean') {\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n\n    this.isAsync = !!this.ui.asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? this.ui.asyncData(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(EMAILSUFFIX, null, this.schema.readOnly);\n        break;\n      default:\n        this.fixData = getCopyEnum(\n          this.schema.enum,\n          this.formProperty.formData,\n          this.schema.readOnly,\n        );\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(\n      !value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`),\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n})\nexport class CascaderWidget extends ControlWidget implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  // tslint:disable-next-line:no-any\n  loadData: any;\n\n  ngOnInit(): void {\n    this.clearText = this.ui.clearText || 'æ¸é¤';\n    this.showArrow = toBool(this.ui.showArrow, true);\n    this.showInput = toBool(this.ui.showInput, true);\n    this.triggerAction = this.ui.triggerAction || ['click'];\n    if (!!this.ui.asyncData) {\n      // tslint:disable-next-line:no-any\n      this.loadData = (node: any, index: number) => (this.ui.asyncData as any)(node, index, this);\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: string) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n\n  // tslint:disable-next-line:no-any\n  _selectionChange(options: any) {\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\n  }\n\n  // tslint:disable-next-line:no-any\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  // tslint:disable-next-line:no-any\n  _clear(options: any) {\n    if (this.ui.clear) this.ui.clear(options);\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle = ``;\n  inited = false;\n\n  get l() {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : this.schema.title;\n      this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.cd.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(e: Event) {\n    e.stopPropagation();\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked === false)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    // issues: https://github.com/NG-ZORRO/ng-zorro-antd/issues/2025\n    setTimeout(() => this.detectChanges());\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n})\nexport class CustomWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n})\nexport class DateWidget extends ControlWidget implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] = null;\n  displayFormat: string;\n  format: string;\n  // tslint:disable-next-line:no-any\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.mode = ui.mode || 'date';\n    this.flatRange = ui.end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!ui.displayFormat) {\n      switch (this.mode) {\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = ui.displayFormat;\n    }\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(ui.allowClear, true),\n      // nz-date-picker\n      showToday: toBool(ui.showToday, true),\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.compCd();\n  }\n\n  _change(value: Date | Date[]) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? value.map(d => format(d, this.format))\n      : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  // tslint:disable-next-line:no-any\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent.properties[this.ui.end];\n  }\n\n  private setEnd(value: string) {\n    this.endProperty.setValue(value, true);\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NzMentionComponent } from 'ng-zorro-antd';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n})\nexport class MentionWidget extends ControlWidget implements OnInit {\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  // tslint:disable-next-line:no-any\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n    const min = typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1;\n    const max = typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = () => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      };\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  // tslint:disable-next-line:no-any\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  // tslint:disable-next-line:no-any\n  _search(option: any) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n})\nexport class NumberWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter = value => value;\n  parser = value => value;\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    if (typeof schema.minimum !== 'undefined') {\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\n    }\n    if (typeof schema.maximum !== 'undefined') {\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\n    }\n    this.step = schema.multipleOf || 1;\n    if (schema.type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n    if (ui.prefix != null) {\n      ui.formatter = value => `${ui.prefix} ${value}`;\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => `${value} ${ui.unit}`;\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title;\n    }\n    this.grid = grid;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = formProperty.properties[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n})\nexport class RadioWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => (this.data = list));\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n})\nexport class RateWidget extends ControlWidget implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    this.count = this.schema.maximum || 5;\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(this.ui.allowClear, true);\n    this.autoFocus = toBool(this.ui.autoFocus, false);\n    this.hasText = !!this.ui.text;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n})\nexport class SelectWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  i: any;\n  data: SFSchemaEnum[];\n  hasGroup = false;\n\n  ngOnInit(): void {\n    this.i = {\n      allowClear: this.ui.allowClear,\n      autoFocus: toBool(this.ui.autoFocus, false),\n      dropdownClassName: this.ui.dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(this.ui.dropdownMatchSelectWidth, true),\n      serverSearch: toBool(this.ui.serverSearch, false),\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\n      mode: this.ui.mode || 'default',\n      notFoundContent: this.ui.notFoundContent || 'æ æ³æ¾å°',\n      showSearch: toBool(this.ui.showSearch, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.hasGroup = list.filter(w => w.group === true).length > 0;\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values);\n  }\n\n  openChange(value: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(value);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((res: SFSchemaEnum[]) => {\n        this.data = res;\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Marks, SliderValue } from 'ng-zorro-antd';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n})\nexport class SliderWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: Marks;\n  included: boolean;\n\n  ngOnInit(): void {\n    this.min = this.schema.minimum || 0;\n    this.max = this.schema.maximum || 100;\n    this.step = this.schema.multipleOf || 1;\n\n    this.marks = this.ui.marks || null;\n    const included = this.ui.included;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    if (this.ui.formatter) return this.ui.formatter(value);\n    return value;\n  }\n\n  _afterChange(value: SliderValue) {\n    if (this.ui.afterChange) this.ui.afterChange(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n})\nexport class StringWidget extends ControlWidget implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    this.type = !!(\n      this.ui.addOnAfter ||\n      this.ui.addOnBefore ||\n      this.ui.addOnAfterIcon ||\n      this.ui.addOnBeforeIcon ||\n      this.ui.prefix ||\n      this.ui.prefixIcon ||\n      this.ui.suffix ||\n      this.ui.suffixIcon\n    )\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (this.schema.format === 'color' && !value) {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(this.data.filter(w => w.checked).map(i => i.value), false);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n})\nexport class TextWidget extends ControlWidget implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n})\nexport class TextareaWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  autosize: any = true;\n\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  // tslint:disable-next-line:no-any\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.compCd();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.compCd();\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  TransferCanMove,\n  TransferChange,\n  TransferItem,\n  TransferSearchChange,\n  TransferSelectChange,\n} from 'ng-zorro-antd';\nimport { of, Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: SFSchemaEnum[] = [];\n  // tslint:disable-next-line:no-any\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || 'é¡¹',\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        // tslint:disable-next-line:no-any\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  }\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      // tslint:disable-next-line:no-any\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.cd.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.cd.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { deepCopy } from '@delon/util';\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd';\nimport { map } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  private dc() {\n    // Muse wait `nz-tree-select` write values\n    // https://github.com/NG-ZORRO/ng-zorro-antd/issues/2316\n    setTimeout(() => this.detectChanges(), 1000);\n  }\n\n  private tranData(list: SFSchemaEnum[]) {\n    // tslint:disable-next-line:no-any\n    return list.map(node => new NzTreeNode(deepCopy(node) as any));\n  }\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData)\n      .pipe(map(list => this.tranData(list)))\n      .subscribe(list => {\n        this.data = list;\n        this.dc();\n      });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e)\n      .pipe(map((list: SFSchemaEnum[]) => this.tranData(list)))\n      .subscribe(res => {\n        e.node.clearChildren();\n        e.node.addChildren(res);\n        this.dc();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService, UploadChangeParam, UploadFile } from 'ng-zorro-antd';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n})\nexport class UploadWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    this.i = {\n      type: type || 'select',\n      text: text || 'ç¹å»ä¸ä¼ ',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: toBool(showUploadList, true),\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (this.i.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint = this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : getData(this.schema, this.ui, this.formProperty.formData)).subscribe(\n      list => {\n        this.fileList = list as UploadFile[];\n        this._setValue(this.fileList);\n        this.detectChanges();\n      },\n    );\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    const res = fileList.map(item => deepGet(item.response, this.i.resReName, item.response));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    this.injector\n      .get(NzModalService)\n      .create({\n        nzContent: `<img src=\"${file.url || file.thumbUrl}\" class=\"img-fluid\" />`,\n        nzFooter: null,\n      })\n      .afterClose.subscribe(() => this.detectChanges());\n  }\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [\n  SFComponent,\n  SFItemComponent,\n  SFItemWrapComponent,\n  SFTemplateDirective,\n  SFFixedDirective,\n];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, NgZorroAntdModule],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n"]}