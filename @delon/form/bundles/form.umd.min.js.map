{"version":3,"sources":["../../../../packages/form/src/config.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/form/src/const.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/text/text.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/tree-select/tree-select.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts","../../../../packages/form/src/errors.ts"],"names":["SF_DEFAULT_CONFIG","formatMap","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","this","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","next","value","done","TypeError","__read","n","e","ar","push","error","__spread","concat","SF_SEQ","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","apply","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","assign","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","orderProperties","order","isArray","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","prop","rest","restIndex","lastIndexOf","complete","splice","getEnum","list","formData","readOnly","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","pathValue","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","options","onlySelf","emitValidator","emitValueEvent","updatePath","updateValue","_updateValue","valueChanges","_runValidation","searchProperty","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","_b","_a","sfComp","_inited","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","_propertiesId","createProperties","orderedProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","cleanValue","addProperty","newProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","showRequired","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","Injectable","AjvSchemaValidatorFactory","document","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","SchemaValidatorFactory","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","useFactory","ComponentFactoryResolver","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","platform","unsubscribe$","_renders","Map","_valid","locale","layout","compact","loading","noColon","formValueChange","EventEmitter","formChange","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","spanLabelFixed","spanLabel","spanControl","offsetControl","grid","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","items","uiSchemaInArr","inIfFn","size","_ui","render","firstKey","find","startsWith","btnRender","btnUi","offset","span","class","ngOnInit","isBrowser","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__horizontal]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","[class.sf__compact]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Platform","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","controlEl","unit","setStyle","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","showError","get","afterViewInit","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","addTitle","addType","removable","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","data","nzValue","_setValue","val","toString","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","mergeMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","formatString","endValue","setTimeout","emitModelChange","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","floor","ObjectWidget","showExpand","expand","showTitle","_c","propertiesId","_d","show","changeExpand","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","borderless","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","optionHeightPx","optionOverflowSize","Infinity","o1","o2","getOrgData","children","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","autofocus","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showIcon","showLine","checkStrictly","hideUnMatched","defaultExpandAll","displayWith","expandChange","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","pureValue","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","getDateLocale","formatDistance"],"mappings":"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","sourcesContent":["import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-ww' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const SF_SEQ = '/';\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any): boolean {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean): boolean {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]): void {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition): any {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]): void {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]): string[] {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges(): BehaviorSubject<SFFormValueChange> {\n    return this._valueChanges;\n  }\n\n  get errorsChanges(): BehaviorSubject<ErrorData[] | null> {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get valid(): boolean {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options(): AlainSFConfig {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity): void {\n    options = { onlySelf: false, emitValidator: true, emitValueEvent: true, updatePath: '', updateValue: null, ...options };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue || this.value;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}): boolean {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation(): void {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]): void {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]): ErrorData[] {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat: boolean = true): void {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string): void {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean): void {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    if (this.root.widget?.sfComp?._inited === true) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility(): void {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void): void {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void): void {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility(): void {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive(): void {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot(): boolean {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId(): string[] {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties(): void {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue(): void {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue(): void {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup): void {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy(): void {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets(): { [type: string]: Widget<FormProperty, SFUISchemaItem> } {\n    return this._widgets;\n  }\n\n  setDefault(widget: any): void {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig, BooleanInput, deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService): FormPropertyFactory {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\nexport type SFMode = 'default' | 'search' | 'edit';\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_liveValidate: BooleanInput;\n  static ngAcceptInputType_firstVisual: BooleanInput;\n  static ngAcceptInputType_onlyVisual: BooleanInput;\n  static ngAcceptInputType_compact: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_noColon: BooleanInput;\n  static ngAcceptInputType_cleanValue: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: SFMode) {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode(): SFMode {\n    return this._mode;\n  }\n  private _mode: SFMode;\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<{}>();\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  @Output() readonly formReset = new EventEmitter<{}>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** 表单校验状态 */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** 表单值 */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * 根据路径获取表单元素属性\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * 根据路径获取表单元素当前值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * 根据路径设置某个表单元素属性值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   * @param value 新值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty(): void {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty(): void {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>): void {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender(): void {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * 刷新整个 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 若希望对某个表单元素进行刷新请使用：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit: boolean = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub(): void {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>): void {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init(): void {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t(): string {\n    return this.title === null ? this.schema.title! : this.title;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Directive, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\n@Directive()\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls(): string | string[] {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue): void {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value(): any {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf: boolean = false): void {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\n@Directive()\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled(): boolean {\n    return (\n      this.disabled || (this.schema.maxItems != null && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems!)\n    );\n  }\n\n  get showRemove(): boolean {\n    return !this.disabled && !!this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem(): void {\n    const property = this.formProperty.add({});\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number): void {\n    this.formProperty.remove(index);\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, map, mergeMap, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent): void {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      mergeMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue): void {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string): Observable<SFSchemaEnum[]> | Observable<string[]> {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string): Observable<string[]> {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean): void {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null): void {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]): void {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear(): void {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue): void {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet(): void {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]): void {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(): void {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]): void {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue): void {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      const endValue = toDate(this.endProperty.formData as NzSafeAny, {\n        formatString: this.endFormat || this.startFormat,\n        defaultValue: null,\n      });\n      this.displayValue = value == null || endValue == null ? [] : [value, endValue];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange: boolean = true): void {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any): void {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null): void {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any): void {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes): void {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number): void {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue): void {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue): void {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    if (!Array.isArray(values)) {\n      return this.data.find(w => w.value === values)!;\n    }\n    return values.map(value => {\n      let item: SFSchemaEnum | null = null;\n      this.data.forEach(list => {\n        item = list.children?.find(w => w.value === value)!;\n      });\n      return item;\n    });\n  }\n\n  openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string): void {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom(): void {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue): void {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon, autofocus } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n    if (autofocus === true) {\n      setTimeout(() => {\n        ((this.injector.get(ElementRef).nativeElement as HTMLElement).querySelector(`#${this.id}`) as HTMLElement).focus();\n      }, 20);\n    }\n  }\n\n  reset(value: SFValue): void {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum): void {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent): void {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue(): void {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue): void {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null): void {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify(): void {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange): void {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange): void {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange): void {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam): void {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue): void {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as NzUploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: NzUploadFile): any {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]): void {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]): void {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService, DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders<DelonFormModule> {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}