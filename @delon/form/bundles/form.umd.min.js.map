{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","Injectable","args","providedIn","FORMATMAPS","date-time","widget","showTime","date","full-date","time","full-time","week","mode","month","uri","email","color","","isBlank","toBool","defaultValue","toBoolean","di","ui","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","hasElse","visibleIf","visibleElse","forEach","cond","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_value","_errors","_objErrors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","schemaValidator","createValidatorFn","default","_parent","_root","root","PropertyGroup","_path","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","_v","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ArrayProperty","formPropertyFactory","options","tick","pos","isNaN","setValue","clearErrors","resetProperties","_hasValue","addProperty","newProperty","createProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","splice","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","ObjectProperty","_propertiesId","createProperties","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","orderProperties","title","StringProperty","FormPropertyFactory","refSchema","pop","TypeError","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","SchemaValidatorFactory","WidgetRegistry","widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","cdr","i18n","_renders","Map","_valid","_inited","locale","layout","loading","formChange","EventEmitter","formSubmit","formReset","formError","i18n$","change","coverButtonProperty","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","items","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","changes","refreshSchema","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","DelonLocaleService","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","unsubscribe$","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","takeUntil","markForCheck","Injector","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","addTitle","l","addText","addType","removeTitle","removable","removeText","addItem","removeItem","AutoCompleteWidget","fixData","typing","isAsync","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_select","select","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","displayValue","flatRange","displayFormat","allowClear","showToday","compCd","setTimeout","toDate","endProperty","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","_a","valueWith","notFoundContent","placement","prefix","autosize","min","count","mentionChild","getMentions","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","text","SelectWidget","hasGroup","autoClearSearchValue","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","Infinity","showSearch","tokenSeparators","maxTagCount","group","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnBefore","addOnAfterIcon","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_afterClose","afterClose","_close","onClose","TextWidget","TextareaWidget","TimeWidget","allowEmpty","defaultOpenValue","hideDisabledOptions","hourStep","minuteStep","nzMinuteStep","secondStep","v","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","get","NzModalService","nzContent","nzFooter","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","hint","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `å¸å°æ¨¡å¼åºé`,\n  $ref: `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems: `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties: `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf: `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies: `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum: `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format: `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type: `ç±»ååºå½æ¯ {type}`,\n  required: `å¿å¡«é¡¹`,\n  maxLength: `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength: `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum: `å¿é¡» {comparison}{limit}`,\n  formatMinimum: `å¿é¡» {comparison}{limit}`,\n  maximum: `å¿é¡» {comparison}{limit}`,\n  formatMaximum: `å¿é¡» {comparison}{limit}`,\n  maxItems: `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems: `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties: `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties: `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf: `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not: `ä¸åºå½å¹é \"not\" schema`,\n  oneOf: `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern: `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems: `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom: `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames: `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired: `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch: `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const: `åºå½ç­äºå¸¸é`,\n  contains: `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if: `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup,\n  ) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { ERRORSDEFAULT } from './errors';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' | null = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat?: string = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat?: string = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat?: string = 'x';\n  /**\n   * æå® `format: 'email'` çé»è®¤Emailåç¼\n   */\n  uiEmailSuffixes?: string[] = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\n}\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: any,\n  asyncArgs?: any,\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map(list => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n","import { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty>;\n  private _errors: ErrorData[] | null = null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  private _path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = this as PropertyGroup;\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type as string;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root || ((this as any) as PropertyGroup);\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message)\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(\n              /{([\\.a-z0-9]+)}/g,\n              (_v: string, key: string) => err.params![key] || '',\n            );\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(valueCheck, visibilityCheck).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties![propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>) {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = this.properties as FormProperty[];\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      this.properties![propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && this.properties![propertyId]) {\n        this.properties![propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    for (const propertyId in this.schema.properties) {\n      this.properties![propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nconst SEQ = '/';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private options: DelonFormConfig) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SEQ;\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && ((parent!.schema.required || []) as string[]).indexOf(propertyId.split(SEQ).pop()!) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: any;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv({\n      ...options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean },\n  ): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [\n      ...(this.options.ingoreKeywords as string[]),\n      ...(extraOptions.ingoreKeywords as string[] || []),\n    ];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private widgets: { [type: string]: Widget<FormProperty> } = {};\n\n  private defaultWidget: Widget<FormProperty>;\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty> {\n    if (this.has(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n} from '@angular/core';\nimport { DelonLocaleService, LocaleData } from '@delon/theme';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { Subscription } from 'rxjs';\n\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton } from './interface';\nimport { FormProperty } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema, FORMATMAPS } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, options: DelonFormConfig) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private i18n$: Subscription;\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input() layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** è¡¨åé»è®¤å¼ */\n  @Input() formData: {};\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨ `spanLabelFixed` åºå®æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input() autocomplete: 'on' | 'off';\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input() @InputBoolean() firstVisual = true;\n  /** æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load statusï¼when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  /** æ°æ®åæ´æ¶åè° */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** éç½®è¡¨åæ¶åè° */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å±æ§\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å½åå¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è®¾ç½®æä¸ªè¡¨ååç´ å±æ§å¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   * @param value æ°å¼\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private cdr: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate as boolean;\n    this.firstVisual = options.firstVisual as boolean;\n    this.autocomplete = options.autocomplete as 'on' | 'off';\n    this.i18n$ = this.i18n.change.subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.coverButtonProperty();\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && FORMATMAPS[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0\n            ? { widget: 'select' }\n            : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (property.items) {\n          uiRes[uiKey].$items = uiRes[uiKey].$items || {};\n          inFn(property.items, property.items, (uiSchema[uiKey] || {}).$items || {}, ui, uiRes[uiKey].$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render!.grid) {\n        this._btn.render!.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render!.spanLabelFixed == null) {\n        this._btn.render!.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (!this._btn.render!.class && (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)) {\n        this._btn.render!.class = 'text-center';\n      }\n    } else {\n      this._btn.render!.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.loading && Object.keys(changes).length === 1) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(): this {\n    this.rootProperty!._runValidation();\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (!this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...this.formData, ...value };\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this.reset();\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    this.i18n$.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: `\n    <ng-template #target></ng-template>\n  `,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget ||\n      this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith('/') ? this.path : `/` + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\n\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: SFUISchemaItem;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true) return true;\n\n    return null;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp!.unsubscribe$))\n      .subscribe((errors: ErrorData[] | null) => {\n        if (errors == null) return;\n        di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n        // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n        if (this.firstVisual) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? (errors[0].message as string) : '';\n\n          this.cd.detectChanges();\n        }\n        this.firstVisual = true;\n      });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue);\n}\n\nexport class ControlWidget extends Widget<FormProperty> {\n  reset(_value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp!.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp!.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LocaleData } from '@delon/theme';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  ngOnInit(): void {\n    if (this.ui.grid && this.ui.grid.arraySpan) {\n      this.arraySpan = this.ui.grid.arraySpan;\n    }\n\n    this.addTitle = this.ui.addTitle || this.l.addText;\n    this.addType = this.ui.addType || 'dashed';\n    this.removeTitle = this.ui.removable === false ? null : this.ui.removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add(null!);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { of, Observable } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n})\nexport class AutoCompleteWidget extends ControlWidget implements AfterViewInit {\n  i: any = {};\n  fixData: SFSchemaEnum[] = [];\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n  }\n\n  ngAfterViewInit(): void {\n    this.i = {\n      backfill: toBool(this.ui.backfill, false),\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\n      width: this.ui.width || undefined,\n    };\n\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\n    if (typeof this.filterOption === 'boolean') {\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n\n    this.isAsync = !!this.ui.asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? this.ui.asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(_value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(\n          this.schema.enum! || this.formProperty.options.uiEmailSuffixes,\n          null,\n          this.schema.readOnly!,\n        );\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, this.formProperty.formData, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n})\nexport class CascaderWidget extends ControlWidget implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: any;\n\n  ngOnInit(): void {\n    this.clearText = this.ui.clearText || 'æ¸é¤';\n    this.showArrow = toBool(this.ui.showArrow, true);\n    this.showInput = toBool(this.ui.showInput, true);\n    this.triggerAction = this.ui.triggerAction || ['click'];\n    if (!!this.ui.asyncData) {\n      this.loadData = (node: any, index: number) => (this.ui.asyncData as any)(node, index, this);\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, {}, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: string) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n\n  _selectionChange(options: any) {\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _clear(options: any) {\n    if (this.ui.clear) this.ui.clear(options);\n  }\n}\n","import { Component } from '@angular/core';\nimport { LocaleData } from '@delon/theme';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  reset(_value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n})\nexport class CustomWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n})\nexport class DateWidget extends ControlWidget implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  format: string;\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.mode = ui.mode || 'date';\n    this.flatRange = ui.end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!ui.displayFormat) {\n      switch (this.mode) {\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = ui.displayFormat;\n    }\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(ui.allowClear, true),\n      // nz-date-picker\n      showToday: toBool(ui.showToday, true),\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.compCd();\n  }\n\n  _change(value: Date | Date[] | null) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value) ? value.map(d => format(d, this.format)) : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent!.properties![this.ui.end];\n  }\n\n  private setEnd(value: string | null) {\n    if (this.flatRange) {\n      this.endProperty.setValue(value, true);\n    }\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n})\nexport class MentionWidget extends ControlWidget implements OnInit {\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n    const min = typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1;\n    const max = typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: any) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n})\nexport class NumberWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter = value => value;\n  parser = value => value;\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    if (typeof schema.minimum !== 'undefined') {\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\n    }\n    if (typeof schema.maximum !== 'undefined') {\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\n    }\n    this.step = schema.multipleOf || 1;\n    if (schema.type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = formProperty.properties![key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n})\nexport class RadioWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(_value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n})\nexport class RateWidget extends ControlWidget implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    this.count = this.schema.maximum || 5;\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(this.ui.allowClear, true);\n    this.autoFocus = toBool(this.ui.autoFocus, false);\n    this.hasText = !!this.ui.text;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n})\nexport class SelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  _value: any;\n  hasGroup = false;\n\n  ngOnInit(): void {\n    this.i = {\n      autoClearSearchValue: toBool(this.ui.autoClearSearchValue, true),\n      allowClear: this.ui.allowClear,\n      autoFocus: toBool(this.ui.autoFocus, false),\n      dropdownClassName: this.ui.dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(this.ui.dropdownMatchSelectWidth, true),\n      serverSearch: toBool(this.ui.serverSearch, false),\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\n      mode: this.ui.mode || 'default',\n      notFoundContent: this.ui.notFoundContent,\n      showSearch: toBool(this.ui.showSearch, true),\n      tokenSeparators: this.ui.tokenSeparators || [],\n      maxTagCount: this.ui.maxTagCount || undefined,\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.hasGroup = list.filter(w => w.group === true).length > 0;\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values);\n  }\n\n  openChange(value: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(value);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((res: SFSchemaEnum[]) => {\n        this.data = res;\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Marks, SliderValue } from 'ng-zorro-antd/slider';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n})\nexport class SliderWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: Marks;\n  included: boolean;\n\n  ngOnInit(): void {\n    this.min = this.schema.minimum || 0;\n    this.max = this.schema.maximum || 100;\n    this.step = this.schema.multipleOf || 1;\n\n    this.marks = this.ui.marks || null;\n    const included = this.ui.included;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    if (this.ui.formatter) return this.ui.formatter(value);\n    return value;\n  };\n\n  _afterChange(value: SliderValue) {\n    if (this.ui.afterChange) this.ui.afterChange(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n})\nexport class StringWidget extends ControlWidget implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    this.type = !!(\n      this.ui.addOnAfter ||\n      this.ui.addOnBefore ||\n      this.ui.addOnAfterIcon ||\n      this.ui.addOnBeforeIcon ||\n      this.ui.prefix ||\n      this.ui.prefixIcon ||\n      this.ui.suffix ||\n      this.ui.suffixIcon\n    )\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (this.schema.format === 'color' && !value) {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(this.data.filter(w => w.checked).map(i => i.value), false);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n})\nexport class TextWidget extends ControlWidget implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n})\nexport class TextareaWidget extends ControlWidget implements OnInit {\n  autosize: any = true;\n\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date | null = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  TransferCanMove,\n  TransferChange,\n  TransferItem,\n  TransferSearchChange,\n  TransferSelectChange,\n} from 'ng-zorro-antd/transfer';\nimport { of, Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || 'é¡¹',\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { UploadChangeParam, UploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n})\nexport class UploadWidget extends ControlWidget implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    this.i = {\n      type: type || 'select',\n      text: text || 'ç¹å»ä¸ä¼ ',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: toBool(showUploadList, true),\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (this.i.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint = this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(_value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : getData(this.schema, this.ui, this.formProperty.formData)).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this._setValue(this.fileList);\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n"]}