{"version":3,"sources":["../../../packages/form/src/config.ts","../../../../node_modules/tslib/tslib.es6.js","../../../packages/form/src/const.ts","../../../packages/form/src/utils.ts","../../packages/form/src/model/form.property.ts","../../packages/form/src/model/object.property.ts","../../packages/form/src/model/array.property.ts","../../packages/form/src/model/atomic.property.ts","../../packages/form/src/model/boolean.property.ts","../../packages/form/src/model/number.property.ts","../../packages/form/src/model/string.property.ts","../../packages/form/src/model/form.property.factory.ts","../../../packages/form/src/terminator.service.ts","../../../packages/form/src/validator.factory.ts","../../../packages/form/src/widget.factory.ts","../../../packages/form/src/sf.component.ts","../../../packages/form/src/sf-item.component.ts","../../../packages/form/src/sf-fixed.directive.ts","../../../packages/form/src/sf-item-wrap.component.ts","../packages/form/src/widgets/custom/sf-template.directive.ts","../../../packages/form/src/widget.ts","../packages/form/src/widgets/array/array.widget.ts","../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../packages/form/src/widgets/boolean/boolean.widget.ts","../packages/form/src/widgets/cascader/cascader.widget.ts","../packages/form/src/widgets/checkbox/checkbox.widget.ts","../packages/form/src/widgets/custom/custom.widget.ts","../packages/form/src/widgets/date/date.widget.ts","../packages/form/src/widgets/mention/mention.widget.ts","../packages/form/src/widgets/number/number.widget.ts","../packages/form/src/widgets/object/object.widget.ts","../packages/form/src/widgets/radio/radio.widget.ts","../packages/form/src/widgets/rate/rate.widget.ts","../packages/form/src/widgets/select/select.widget.ts","../packages/form/src/widgets/slider/slider.widget.ts","../packages/form/src/widgets/string/string.widget.ts","../packages/form/src/widgets/tag/tag.widget.ts","../packages/form/src/widgets/text/text.widget.ts","../packages/form/src/widgets/textarea/textarea.widget.ts","../packages/form/src/widgets/time/time.widget.ts","../packages/form/src/widgets/transfer/transfer.widget.ts","../packages/form/src/widgets/tree-select/tree-select.widget.ts","../packages/form/src/widgets/upload/upload.widget.ts","../../packages/form/src/widgets/nz-widget.registry.ts","../../../packages/form/src/module.ts","../../../packages/form/src/errors.ts"],"names":["SF_DEFAULT_CONFIG","formatMap","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","this","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","next","value","done","TypeError","__read","n","e","ar","push","error","__spread","concat","SF_SEQ","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","apply","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","assign","resolveIfSchema","_schema","_ui","fn","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","resolveIf","property","uiKey","items","$items","detectKeys","orderProperties","order","isArray","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","prop","rest","restIndex","lastIndexOf","complete","splice","getEnum","list","formData","readOnly","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","pathValue","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","options","onlySelf","emitValidator","emitValueEvent","updatePath","updateValue","_updateValue","valueChanges","_runValidation","searchProperty","base","result","findRoot","getProperty","substr","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","_b","_a","sfComp","_inited","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","_propertiesId","createProperties","orderedProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","cleanValue","addProperty","newProperty","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","showRequired","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","Injectable","AjvSchemaValidatorFactory","document","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","SchemaValidatorFactory","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","useFactory","ComponentFactoryResolver","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","platform","unsubscribe$","_renders","Map","_valid","locale","layout","compact","loading","noColon","formValueChange","EventEmitter","formChange","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","spanLabelFixed","spanLabel","spanControl","offsetControl","grid","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","uiSchemaInArr","size","render","firstKey","find","startsWith","btnRender","btnUi","offset","span","class","ngOnInit","isBrowser","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__horizontal]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","[class.sf__compact]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Platform","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","[class.sf__item]","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","controlEl","unit","setStyle","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","showError","get","afterViewInit","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","addTitle","addType","removable","addText","removeText","addItem","removeItem","[class.sf__array]","AutoCompleteWidget","typing","isAsync","fixData","data","nzValue","_setValue","val","toString","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","mergeMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","formatString","endValue","setTimeout","emitModelChange","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","floor","ObjectWidget","showExpand","expand","showTitle","_c","propertiesId","_d","show","changeExpand","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","search$","hasGroup","isLoading","checkGroup","group","autoClearSearchValue","borderless","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","optionHeightPx","optionOverflowSize","Infinity","o1","o2","onSearch","searchDebounceTime","switchMap","catchError","getOrgData","children","openChange","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","autofocus","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showIcon","showLine","checkStrictly","hideUnMatched","defaultExpandAll","displayWith","expandChange","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","pureValue","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","getDateLocale","formatDistance"],"mappings":"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","sourcesContent":["import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-ww' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const SF_SEQ = '/';\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any): boolean {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean): boolean {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]): void {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition): any {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIfSchema(_schema: SFSchema, _ui: SFUISchemaItemRun): void {\n  const fn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n    resolveIf(schema, ui);\n\n    Object.keys(schema.properties!).forEach(key => {\n      const property = schema.properties![key];\n      const uiKey = `$${key}`;\n      if (property.items) {\n        fn(property.items, ui[uiKey].$items);\n      }\n      if (property.properties) {\n        fn(property, ui[uiKey]);\n      }\n    });\n  };\n  fn(_schema, _ui);\n}\n\nfunction resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) {\n    schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n  }\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]): void {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]): string[] {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges(): BehaviorSubject<SFFormValueChange> {\n    return this._valueChanges;\n  }\n\n  get errorsChanges(): BehaviorSubject<ErrorData[] | null> {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get valid(): boolean {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options(): AlainSFConfig {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity): void {\n    options = { onlySelf: false, emitValidator: true, emitValueEvent: true, updatePath: '', updateValue: null, ...options };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue || this.value;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}): boolean {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation(): void {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]): void {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]): ErrorData[] {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat: boolean = true): void {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string): void {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean): void {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    if (this.root.widget?.sfComp?._inited === true) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility(): void {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void): void {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void): void {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility(): void {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive(): void {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot(): boolean {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId(): string[] {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties(): void {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue(): void {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue(): void {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup): void {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy(): void {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets(): { [type: string]: Widget<FormProperty, SFUISchemaItem> } {\n    return this._widgets;\n  }\n\n  setDefault(widget: any): void {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig, BooleanInput, deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIfSchema, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService): FormPropertyFactory {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\nexport type SFMode = 'default' | 'search' | 'edit';\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_liveValidate: BooleanInput;\n  static ngAcceptInputType_firstVisual: BooleanInput;\n  static ngAcceptInputType_onlyVisual: BooleanInput;\n  static ngAcceptInputType_compact: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_noColon: BooleanInput;\n  static ngAcceptInputType_cleanValue: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: SFMode) {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode(): SFMode {\n    return this._mode;\n  }\n  private _mode: SFMode;\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<{}>();\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  @Output() readonly formReset = new EventEmitter<{}>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** 表单校验状态 */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** 表单值 */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * 根据路径获取表单元素属性\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * 根据路径获取表单元素当前值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * 根据路径设置某个表单元素属性值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   * @param value 新值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty(): void {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIfSchema(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty(): void {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>): void {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender(): void {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * 刷新整个 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 若希望对某个表单元素进行刷新请使用：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit: boolean = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub(): void {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  host: { '[class.sf__item]': 'true' },\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>): void {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init(): void {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t(): string {\n    return this.title === null ? this.schema.title! : this.title;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Directive, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\n@Directive()\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls(): string | string[] {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue): void {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value(): any {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf: boolean = false): void {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\n@Directive()\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  host: { '[class.sf__array]': 'true' },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled(): boolean {\n    return (\n      this.disabled || (this.schema.maxItems != null && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems!)\n    );\n  }\n\n  get showRemove(): boolean {\n    return !this.disabled && !!this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem(): void {\n    const property = this.formProperty.add({});\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number): void {\n    this.formProperty.remove(index);\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, map, mergeMap, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent): void {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      mergeMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue): void {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string): Observable<SFSchemaEnum[]> | Observable<string[]> {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string): Observable<string[]> {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean): void {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null): void {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]): void {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear(): void {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue): void {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet(): void {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]): void {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(): void {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]): void {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue): void {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      const endValue = toDate(this.endProperty.formData as NzSafeAny, {\n        formatString: this.endFormat || this.startFormat,\n        defaultValue: null,\n      });\n      this.displayValue = value == null || endValue == null ? [] : [value, endValue];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange: boolean = true): void {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any): void {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null): void {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any): void {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes): void {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number): void {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue): void {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  private search$ = new Subject<string>();\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n  isLoading = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n\n    if (this.ui.onSearch) {\n      this.search$\n        .pipe(\n          takeUntil(this.sfItemComp!.unsubscribe$),\n          distinctUntilChanged(),\n          debounceTime(this.ui.searchDebounceTime || 300),\n          switchMap(text => this.ui.onSearch!(text)),\n          catchError(() => []),\n        )\n        .subscribe(list => {\n          this.data = list;\n          this.checkGroup(list);\n          this.isLoading = false;\n          this.detectChanges();\n        });\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue): void {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    if (!Array.isArray(values)) {\n      return this.data.find(w => w.value === values)!;\n    }\n    return values.map(value => {\n      let item: SFSchemaEnum | null = null;\n      this.data.forEach(list => {\n        item = list.children?.find(w => w.value === value)!;\n      });\n      return item;\n    });\n  }\n\n  openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  scrollToBottom(): void {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n\n  onSearch(value: string): void {\n    this.isLoading = true;\n    this.search$.next(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue): void {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon, autofocus } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n    if (autofocus === true) {\n      setTimeout(() => {\n        ((this.injector.get(ElementRef).nativeElement as HTMLElement).querySelector(`#${this.id}`) as HTMLElement).focus();\n      }, 20);\n    }\n  }\n\n  reset(value: SFValue): void {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum): void {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent): void {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue(): void {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue): void {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null): void {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify(): void {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange): void {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange): void {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange): void {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam): void {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue): void {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as NzUploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: NzUploadFile): any {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]): void {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]): void {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService, DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders<DelonFormModule> {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}