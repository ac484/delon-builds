{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/config.ts","ng://@delon/form/src/const.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts","ng://@delon/form/src/errors.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","DelonFormConfig","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","Injectable","args","providedIn","SF_SEQ","FORMATMAPS","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","isBlank","toBool","defaultValue","toBoolean","di","ui","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ArrayProperty","formPropertyFactory","options","pos","isNaN","setValue","clearErrors","resetProperties","_hasValue","addProperty","newProperty","createProperty","$items","formDatas","formDatas_1","formDatas_1_1","updatePaths","idx","join","add","remove","index","splice","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","ObjectProperty","_propertiesId","createProperties","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","orderProperties","title","StringProperty","FormPropertyFactory","refSchema","pop","TypeError","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","SchemaValidatorFactory","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","cdr","localeSrv","aclSrv","i18nSrv","unsubscribe$","_renders","Map","_valid","_inited","locale","layout","loading","noColon","formChange","EventEmitter","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","merge","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","acl","can","items","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","_a","addTitle","addType","removable","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","get","NzI18nService","displayFormat","allowClear","showToday","usingDateFns","srv","getDateLocale","distanceInWords","formatDistance","isDateFns","zorroI18n","valueFormat","toDate","endProperty","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","valueWith","notFoundContent","prefix","autosize","_b","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","Infinity","o1","o2","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_afterClose","afterClose","_close","onClose","TextWidget","TextareaWidget","TimeWidget","opt","allowEmpty","defaultOpenValue","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if"],"mappings":";;;;;;;;;;;;;;;AAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAezB,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2H5B,EAAvH6B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO1B,OAAO6B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAIyB,EAAWP,MAAIY,GAAKD,EAAI,EAAI7B,EAAE8B,GAAKD,EAAI,EAAI7B,EAAE0B,EAAQC,EAAKG,GAAK9B,EAAE0B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK5B,OAAOgC,eAAeR,EAAQC,EAAKG,GAAIA,EAOzD,SAASK,EAAWC,EAAaC,GACpC,GAAuB,iBAAZL,SAAoD,mBAArBA,QAAQM,SAAyB,OAAON,QAAQM,SAASF,EAAaC,GA4C7G,SAASE,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWzB,EAAI,EAChE,OAAIuB,EAAUA,EAAEnB,KAAKkB,GACd,CACHI,KAAM,WAEF,OADIJ,GAAKtB,GAAKsB,EAAEnB,SAAQmB,OAAI,GACrB,CAAEK,MAAOL,GAAKA,EAAEtB,KAAM4B,MAAON,KAKzC,SAASO,EAAOP,EAAGrB,GACtB,IAAIsB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBV,EAAYkB,EAA3B9B,EAAIuB,EAAEnB,KAAKkB,GAAOS,EAAK,GAC3B,IACI,WAAc,IAAN9B,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE0B,QAAQE,MAAMG,EAAGC,KAAKpB,EAAEe,OAExE,MAAOM,GAASH,EAAI,CAAEG,MAAOA,GACjC,QACQ,IACQrB,IAAMA,EAAEgB,OAASL,EAAIvB,EAAU,SAAIuB,EAAEnB,KAAKJ,GAE1D,QAAkB,GAAI8B,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGJ,SAASG,IACZ,IAAK,IAAIH,EAAK,GAAI/B,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3C+B,EAAKA,EAAGI,OAAON,EAAO3B,UAAUF,KACpC,OAAO+B,EC3IX,IAAAK,EAAA,WAIA,SAAAA,IAQE5C,KAAA6C,eAA4B,CAAC,OAAQ,QAUrC7C,KAAA8C,cAAyB,EAIzB9C,KAAA+C,aAAqC,KAIrC/C,KAAAgD,aAAwB,EAIxBhD,KAAAiD,YAAuB,EAIvBjD,KAAAkD,OAAqC,GAYrClD,KAAAmD,OAAoB,CAClBC,YAAa,UACbC,WAAY,WAKdrD,KAAAsD,mBAA8B,sBAI9BtD,KAAAuD,mBAA8B,IAI9BvD,KAAAwD,mBAA8B,WAI9BxD,KAAAyD,mBAA8B,IAI9BzD,KAAA0D,gBAA6B,CAAC,SAAU,UAAW,YAAa,UAAW,yCArE5EC,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,kHAJ1B,GCAA,IAAaC,EAAS,ICQTC,EAAa,CACxBC,YAAa,CACXC,OAAQ,OACRC,UAAU,EACVC,OAAQ,wBAEVC,KAAM,CAAEH,OAAQ,OAAQE,OAAQ,cAChCE,YAAa,CAAEJ,OAAQ,OAAQE,OAAQ,cACvCG,KAAM,CAAEL,OAAQ,QAChBM,YAAa,CAAEN,OAAQ,QACvBO,KAAM,CAAEP,OAAQ,OAAQQ,KAAM,OAAQN,OAAQ,WAC9CO,MAAO,CAAET,OAAQ,OAAQQ,KAAM,QAASN,OAAQ,WAChDQ,IAAK,CAAEV,OAAQ,UACfW,MAAO,CAAEX,OAAQ,eAAgBY,KAAM,SACvCC,MAAO,CAAEb,OAAQ,SAAUY,KAAM,SACjCE,GAAI,CAAEd,OAAQ,WAGhB,SAAgBe,EAAQlD,GACtB,OAAY,MAALA,EAGT,SAAgBmD,EAAO9C,EAAY+C,GAEjC,OAAgB,OADhB/C,EAAQgD,EAAAA,UAAUhD,GAAO,IACF+C,EAAe/C,EAGxC,SAAgBiD,EAAGC,OAAgB,IAAAzB,EAAA,GAAA0B,EAAA,EAAAA,EAAA5E,UAAAC,OAAA2E,IAAA1B,EAAA0B,EAAA,GAAA5E,UAAA4E,GAC7BD,EAAGE,OAELC,QAAQC,KAAI5E,MAAZ2E,QAAO9C,EAASkB,IA2BpB,SAAgB8B,EAAeC,EAAkBC,GAC/C,QAD+C,IAAAA,IAAAA,EAAA,IAC3CD,EAAO9F,eAAe,QAAS,KAC3BgG,EAxBV,SAA8BC,EAAcF,WACpCG,EAAQ,yBAAyBC,KAAKF,GAC5C,GAAIC,GAASA,EAAM,GAAI,KAEfE,EAAQF,EAAM,GAAGG,MAAMpC,GACzBqC,EAAeP,MACnB,IAAiB,IAAAQ,EAAAC,EAAAJ,GAAKK,EAAAF,EAAAlE,QAAAoE,EAAAlE,KAAAkE,EAAAF,EAAAlE,OAAE,CAAnB,IAAIqE,EAAID,EAAAnE,MAEX,GADAoE,EAAOA,EAAKC,QAAQ,MAAO1C,GAAQ0C,QAAQ,MAAO,MAC9CL,EAAQtG,eAAe0G,GAGzB,MAAM,IAAIE,MAAM,mCAAmCX,EAAI,KAFvDK,EAAUA,EAAQI,qGAKtB,OAAOJ,EAET,MAAM,IAAIM,MAAM,mCAAmCX,EAAI,KAQlCY,CAAqBf,EAAW,KAAGC,GAExCe,GAANhB,EAAAG,KH7BL,SAAgBvF,EAAG+B,GACtB,IAAIhC,EAAI,GACR,IAAK,IAAIV,KAAKW,EAAOf,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,IAAM0C,EAAEsE,QAAQhH,GAAK,IAC9EU,EAAEV,GAAKW,EAAEX,IACb,GAAS,MAALW,GAAqD,mBAAjCf,OAAOqH,sBACtB,CAAA,IAAIrG,EAAI,EAAb,IAAgBZ,EAAIJ,OAAOqH,sBAAsBtG,GAAIC,EAAIZ,EAAEe,OAAQH,IAC3D8B,EAAEsE,QAAQhH,EAAEY,IAAM,GAAKhB,OAAOU,UAAU4G,qBAAqBlG,KAAKL,EAAGX,EAAEY,MACvEF,EAAEV,EAAEY,IAAMD,EAAEX,EAAEY,KAE1B,OAAOF,EGoBOyG,CAAApB,EAAA,CAAA,UACd,OAAOD,EAActF,EAAA,GAAMyF,EAAec,GAAef,GAG3D,OAAOD,EAGT,SAAgBqB,EAAUrB,EAAkBN,GAC1C,IAAMM,EAAO9F,eAAe,QAAS8F,EAAO9F,eAAe,QAAU,OAAO,KAE5E,IAAK8F,EAAS,GAAEsB,WAAY,MAAM,IAAIR,MAAM,yCAEtCS,EAAU1H,OAAO2H,KAAKxB,EAAiB,YACvCyB,EAAS5H,OAAO2H,KAAKxB,EAAS,GAAY,YAChD0B,EAAUH,EAASE,GACnBC,EAAUH,EAASvB,EAAW,KAAU,UACxCA,EAAO2B,SAAW3B,EAAe,SAAEhD,OAAOgD,EAAW,KAAU,cACzD4B,EAAU5B,EAAO9F,eAAe,QAClC0H,IACFF,EAAUH,EAASvB,EAAW,KAAU,UACxCA,EAAO2B,SAAW3B,EAAO2B,SAAS3E,OAAOgD,EAAW,KAAU,eAG1D6B,EAAiB,GACjBC,EAAmB,GAUzB,OATAL,EAAOM,SAAO,SAACzG,OACP0G,EAAOhC,EAAS,GAAY,WAAE1E,GAAK2G,KACzCJ,EAAUvG,GAAO0G,EACbJ,IAASE,EAAYxG,GAAI,SAAIkB,GAAe,OAAC,EAAM0F,SAAS1F,QAGlEwD,EAAW,KAAU,SAAE+B,SAAO,SAACzG,GAAO,OAACoE,EAAG,IAAIpE,GAAOuG,UAAYA,KAC7DD,GAAS5B,EAAW,KAAU,SAAE+B,SAAO,SAACzG,GAAO,OAACoE,EAAG,IAAIpE,GAAOuG,UAAYC,KAEvE9B,EAGT,SAAS0B,EAAUF,EAAgBW,GACjCA,EAAWJ,SAAO,SAACzG,GACjB,IAAKkG,EAAKU,SAAS5G,GACjB,MAAM,IAAIwF,MAAM,oCAAoCxF,EAAG,QAoC7D,SAAgB8G,EAAQC,EAAaC,EAAeC,GAClD,OAAIlD,EAAQgD,KAAUrI,MAAMwI,QAAQH,IAAyB,IAAhBA,EAAKrH,OAAqB,IAChD,iBAAZqH,EAAK,KACdA,EAAOA,EAAKI,KAAG,SAAEC,GACf,MAAA,CAASC,MAAOD,EAAMlG,MAAOkG,OAG7BJ,IACGtI,MAAMwI,QAAQF,KAAWA,EAAW,CAACA,IAC1CD,EAAKN,SAAO,SAAEW,IACPJ,EAASrB,QAAQyB,EAAKlG,SAAQkG,EAAKE,SAAU,OAIlDL,GACFF,EAAKN,SAAO,SAAEW,GAAuB,OAACA,EAAKG,UAAW,KAEjDR,GAGT,SAAgBS,EAAYT,EAAaC,EAAeC,GACtD,OAAOH,EAAQW,EAAAA,SAASV,GAAQ,IAAKC,EAAUC,GAGjD,SAAgBS,GAAQhD,EAAkBN,EAAoB4C,EAAeW,GAC3E,MAA4B,mBAAjBvD,EAAGwD,UACLxD,EAAGwD,UAAUD,GAAWE,KAAKV,EAAAA,KAAG,SAAEJ,GAAyB,OAAAD,EAAQC,EAAMC,EAAUtC,EAAe,cAEpGoD,EAAAA,GAAGN,EAAY9C,EAAW,KAAGsC,EAAUtC,EAAe,WChK/D,kBAiBE,SAAAqD,EACEC,EACAtD,EACAN,EACA4C,EACAiB,EACAC,EACQC,GAAApJ,KAAAoJ,SAAAA,EAvBFpJ,KAAAqJ,QAA8B,KAC9BrJ,KAAAsJ,cAAgB,IAAIC,EAAAA,gBAAyB,MAC7CvJ,KAAAwJ,eAAiB,IAAID,EAAAA,gBAAoC,MACzDvJ,KAAAyJ,UAAW,EACXzJ,KAAA0J,mBAAqB,IAAIH,EAAAA,iBAAyB,GAGhDvJ,KAAA2J,WAA6C,GAKvD3J,KAAA4J,OAAkB,KAahB5J,KAAK2F,OAASA,EACd3F,KAAKqF,GAAKA,EACVrF,KAAK6J,gBAAkBZ,EAAuBa,kBAAkBnE,EAAQ,CACtE9C,eAAgB7C,KAAKqF,GAAiB,eACtCE,MAAO,EAA6B,QAEtCvF,KAAKiI,SAAWA,GAAYtC,EAAOoE,QACnC/J,KAAKgK,QAAUd,EAEblJ,KAAKiK,MADHf,EACWA,EAAOgB,KAEV,KAEZlK,KAAKmJ,KAAOA,EAyRhB,OAtRE3J,OAAAgC,eAAIwH,EAAA9I,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKsJ,+CAGd9J,OAAAgC,eAAIwH,EAAA9I,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKwJ,gDAGdhK,OAAAgC,eAAIwH,EAAA9I,UAAA,OAAI,KAAR,WACE,OAAOF,KAAK2F,OAAW,sCAGzBnG,OAAAgC,eAAIwH,EAAA9I,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKgK,yCAGdxK,OAAAgC,eAAIwH,EAAA9I,UAAA,OAAI,KAAR,WACE,OAAOF,KAAKiK,uCAGdzK,OAAAgC,eAAIwH,EAAA9I,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK4J,wCAGdpK,OAAAgC,eAAIwH,EAAA9I,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKqJ,yCAGd7J,OAAAgC,eAAIwH,EAAA9I,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKyJ,0CAGdjK,OAAAgC,eAAIwH,EAAA9I,UAAA,QAAK,KAAT,WACE,OAAwB,OAAjBF,KAAKqJ,SAA4C,IAAxBrJ,KAAKqJ,QAAQ1I,wCAG/CnB,OAAAgC,eAAIwH,EAAA9I,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKoJ,0CAiCdJ,EAAA9I,UAAAiK,uBAAA,SAAuBC,EAAkBC,EAAuBC,QAAzC,IAAAF,IAAAA,GAAA,QAAkB,IAAAC,IAAAA,GAAA,QAAuB,IAAAC,IAAAA,GAAA,GAC9DtK,KAAKuK,eAEDF,GACFrK,KAAKwK,aAAatI,KAAKlC,KAAKmC,OAI1BmI,IAA0C,IAAzBtK,KAAKqF,GAAGvC,cAC3B9C,KAAKyK,iBAGHzK,KAAKkJ,SAAWkB,GAClBpK,KAAKkJ,OAAOiB,uBAAuBC,EAAUC,GAAgB,IAKjErB,EAAA9I,UAAAwK,eAAA,SAAevB,OACTwB,EAAqB3K,KACrB4K,EAA6B,KAE7BC,EAAS,KACb,GAAI1B,EAAK,KAAOrF,EAEd+G,GADAD,EAAO5K,KAAK8K,YACEC,YAAY5B,EAAK6B,OAAO,SAEtC,KAAkB,OAAXH,GAAmC,OAAhBF,EAAKzB,QAC7ByB,EAAOC,EAAOD,EAAKzB,OACnB2B,EAASD,EAAKG,YAAY5B,GAG9B,OAAO0B,GAIT7B,EAAA9I,UAAA4K,SAAA,WAEE,QADIG,EAAyBjL,KACF,OAApBiL,EAAS/B,QACd+B,EAAWA,EAAS/B,OAEtB,OAAA,IAKMF,EAAA9I,UAAAgL,YAAR,SAAoB/I,GAClB,GAAI6C,EAAQ7C,GAAQ,OAAO,EAC3B,OAAQnC,KAAK6E,MACX,IAAK,SACH,OAA+B,KAAvB,GAAK1C,GAAOxB,OAExB,OAAO,GAMTqI,EAAA9I,UAAAuK,eAAA,WAAA,IACMvH,EADNiI,EAAAnL,KAKQoL,EAAUpL,KAAKkL,YAAYlL,KAAK4J,QAEpC1G,EADEkI,GAAWpL,KAAKqF,GAAGgG,UACZ,CAAC,CAAEC,QAAS,aACZF,EACA,GAEApL,KAAK6J,gBAAgB7J,KAAK4J,SAAW,OAE1C2B,EAAmBvL,KAAO,GAAuBwL,UACvD,GAA+B,mBAApBD,EAAgC,KACnCE,EAAeF,EAAgBvL,KAAKmC,MAAOnC,KAAMA,KAAK8K,YAC5D,OAAIW,aAAwBC,EAAAA,gBAC1BD,EAAaE,WAAS,SAACC,GACrBT,EAAKU,gBAAgB3I,EAAQ0I,GAC7BT,EAAKlH,OAAO6H,wBAIhB9L,KAAK6L,gBAAgB3I,EAAQuI,GAI/BzL,KAAKqJ,QAAUnG,EACflD,KAAK+L,UAAU/L,KAAKqJ,UAGdL,EAAA9I,UAAA2L,gBAAR,SAAwB3I,EAAqB8E,GAEZ,MAARA,GAAgBA,EAAKrH,OAAS,GAEnDqH,EAAKN,SAAO,SAACsE,GACX,IAAKA,EAAIC,QACP,MAAM,IAAIxF,MAAM,gFAElBuF,EAAIE,SAAU,KAGlBlM,KAAKqJ,QAAUrJ,KAAKmM,YAAYjJ,EAAQ8E,GACxChI,KAAK+L,UAAU/L,KAAKqJ,UAGdL,EAAA9I,UAAAiM,YAAR,SAAoBjJ,EAAqBkJ,GAQvC,OAPIA,IACEzM,MAAMwI,QAAQiE,GAChBlJ,EAASA,EAAOP,OAAM9B,MAAbqC,EAAMR,EAAW0J,IAE1BlJ,EAAOV,KAAK4J,IAGTlJ,GAGC8F,EAAA9I,UAAA6L,UAAV,SAAoB7I,EAAqBmJ,GAAzC,IAAAlB,EAAAnL,KACE,QADuC,IAAAqM,IAAAA,GAAA,GACnCA,GAAcnJ,IAAWlD,KAAKqF,GAAGpC,WAAY,KACzCqJ,EAAKtM,KAAKiE,QAAUjE,KAAKiE,OAAOsI,EAAE9J,OAAU,GAClDS,EAASA,EAAOkF,KAAG,SAAE4D,OACfC,GACc,IAAhBD,EAAIE,SAAoBF,EAAIC,QACxBD,EAAIC,SACHd,EAAK9F,GAAGnC,QAAU,IAAI8I,EAAIV,UAAYH,EAAK/B,SAAe,OAAE4C,EAAIV,UAAYgB,EAAEN,EAAIV,UAAY,GAYrG,OAVIW,GAA8B,mBAAZA,IACpBA,EAAUA,EAAQD,IAGhBC,KACG,EAAoBrF,QAAQ,OAC/BqF,EAAU,EAAoBzF,QAAQ,oBAAkB,SAAGgG,EAAYvL,GAAgB,OAAA+K,EAAU,OAAE/K,IAAQ,OAE7G+K,EAAIC,QAAO,GAEND,KAGXhM,KAAKqJ,QAAUnG,EACflD,KAAKwJ,eAAetH,KAAKgB,GAErBlD,KAAKgK,SACPhK,KAAKgK,QAAQyC,uBAAuBvJ,EAAQlD,KAAKmJ,OAIrDH,EAAA9I,UAAAuM,uBAAA,SAAuBvJ,EAAqBiG,GAA5C,IAAAgC,EAAAnL,KACEA,KAAK2J,WAAWR,GAAQjG,MAClBwJ,EAA0B,GAChClN,OAAO2H,KAAKnH,KAAK2J,YAAYjC,SAAO,SAAC9H,OAC7BqL,EAAWE,EAAKT,eAAe9K,GACjCqL,IAAaA,EAAS0B,SAC1BD,EAAWlK,KAAI3B,MAAf6L,EAAUhK,EAASyI,EAAKxB,WAAW/J,QAErCI,KAAK+L,UAAUW,GAAY,IAOrB1D,EAAA9I,UAAA0M,WAAR,SAAmBD,GACjB3M,KAAKyJ,SAAWkD,EAChB3M,KAAK0J,mBAAmBxH,KAAKyK,GAE7B3M,KAAK6M,WAAW7M,KAAKmC,OAAO,IAI9B6G,EAAA9I,UAAA4M,gBAAA,WAAA,IAAA3B,EAAAnL,KACQwH,EAAaxH,KAAO,GAAoBwH,UAC9C,GAAyB,iBAAdA,GAA4D,IAAlChI,OAAO2H,KAAKK,GAAW7G,OAC1DX,KAAK4M,YAAW,QACX,QAAkBG,IAAdvF,EAAyB,KAC5BwF,EAAgD,cAC3CC,GACT,GAAIzF,EAAU3H,eAAeoN,GAAiB,KACtChC,EAAWiC,EAAKxC,eAAeuC,GACrC,GAAIhC,EAAU,KACNkC,EAAalC,EAAST,aAAa1B,KACvCV,EAAAA,KAAG,SAAEjG,OACGiL,EAAK5F,EAAUyF,GACrB,MAAkB,mBAAPG,EAA0BA,EAAGjL,IACX,IAAzBiL,EAAGxG,QAAQ,SACNzE,EAAMxB,OAAS,GAEQ,IAAvByM,EAAGxG,QAAQzE,OAIlBkL,EAAkBpC,EAASvB,mBAC3B4D,EAAMC,EAAAA,cAAcJ,EAAYE,GAAiBvE,KAAKV,EAAAA,KAAG,SAACoF,GAAW,OAAAA,EAAQ,IAAMA,EAAQ,OACjGR,EAAkBxK,KAAK8K,QAEvB9H,QAAQC,KAAK,uBAAuBwH,EAAc,4BAA4BC,EAAK/D,eAnBzF,IAAK,IAAM8D,KAAkBzF,IAAlByF,GAwBXM,EAAAA,cAAcP,GACXlE,KACCV,EAAAA,KAAG,SAACqF,GAAU,OAA0B,IAA1BA,EAAO7G,SAAQ,MAC7B8G,EAAAA,wBAED/B,WAAS,SAACgB,GAAW,OAAAxB,EAAKyB,WAAWD,QAK9C3D,KAEA,mBAAA,SAAA2E,IAAA,IAAAxC,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YACEmL,EAAAlE,WAAsE,OA8CxE,OA/C4C4G,EAAAA,EAAAA,GAG1CF,EAAAzN,UAAA6K,YAAA,SAAY5B,OACJ2E,EAAa3E,EAAKvC,QAAQ9C,GAC1BiK,GAA6B,IAAhBD,EAAoB3E,EAAK6B,OAAO,EAAG8C,GAAc3E,EAEhE8B,EAAWjL,KAAe,WAAE+N,GAChC,GAAiB,OAAb9C,IAAqC,IAAhB6C,GAAqB7C,aAAoB0C,EAAe,KACzEK,EAAU7E,EAAK6B,OAAO8C,EAAa,GACzC7C,EAAW,EAA4BF,YAAYiD,GAErD,OAAO/C,GAGT0C,EAAAzN,UAAA+N,aAAA,SAAaC,GACX,IAAK,IAAMH,KAAc/N,KAAKiH,WAAY,CACxC,GAAIjH,KAAKiH,WAAWpH,eAAekO,GAEjCG,EADiBlO,KAAKiH,WAAW8G,GACpBA,KAKnBJ,EAAAzN,UAAAiO,sBAAA,SAAsBD,GACpBlO,KAAKiO,cAAY,SAACG,GAChBF,EAAGE,GACCA,aAAiBT,GACnB,EAAyBQ,sBAAsBD,OAKrDP,EAAAzN,UAAA4M,gBAAA,WACEc,EAAA1N,UAAM4M,gBAAelM,KAAAZ,MACrBA,KAAKqO,4BAGCV,EAAAzN,UAAAmO,yBAAR,WACErO,KAAKmO,uBAAqB,SAAClD,GACzBA,EAAS6B,sBAIba,EAAAzN,UAAAoO,OAAA,WACE,OAAOtO,OAASA,KAAKkK,MAEzByD,GA/C4C3E,uBCpU1C,SAAAuF,EACUC,EACRvF,EACAtD,EACAN,EACA4C,EACAiB,EACAC,EACAsF,GARF,IAAAtD,EAUEyC,EAAAhN,KAAAZ,KAAMiJ,EAAwBtD,EAAQN,EAAI4C,EAAUiB,EAAQC,EAAMsF,IAAQzO,YATlEmL,EAAAqD,oBAAAA,EAURrD,EAAKlE,WAAa,KAoFtB,OAhGmC4G,EAAAA,EAAAA,GAejCU,EAAArO,UAAA6K,YAAA,SAAY5B,OACJ2E,EAAa3E,EAAKvC,QAAQ9C,GAC1B4K,KAAwB,IAAhBZ,EAAoB3E,EAAK6B,OAAO,EAAG8C,GAAc3E,GACzDnB,EAAOhI,KAAe,WAC5B,KAAI2O,MAAMD,IAAQA,GAAO1G,EAAKrH,QAA9B,KAGMqN,EAAU7E,EAAK6B,OAAO8C,EAAa,GACzC,OAAO9F,EAAK0G,GAAK3D,YAAYiD,KAG/BO,EAAArO,UAAA0O,SAAA,SAASzM,EAAgBiI,GACvBpK,KAAKiH,WAAa,GAClBjH,KAAK6O,cACL7O,KAAK8O,gBAAgB3M,GACrBnC,KAAKmK,uBAAuBC,GAAU,IAGxCmE,EAAArO,UAAA2M,WAAA,SAAW1K,EAAgBiI,GACzBpK,KAAK4J,OAASzH,GAASnC,KAAK2F,OAAOoE,SAAW,GAC9C/J,KAAK4O,SAAS5O,KAAK4J,OAAQQ,IAG7BmE,EAAArO,UAAA6O,UAAA,WACE,OAAO,GAGTR,EAAArO,UAAAqK,aAAA,eACQpI,EAAe,GACrBnC,KAAKiO,cAAY,SAAEhD,GACbA,EAAS0B,SAAW1B,EAAS8D,aAC/B5M,EAAMK,KAAIpC,EAAA,GAAM6K,EAAShD,SAAagD,EAAS9I,WAGnDnC,KAAK4J,OAASzH,GAGRoM,EAAArO,UAAA8O,YAAR,SAAoB/G,OACZgH,EAAcjP,KAAKwO,oBAAoBU,eAAelP,KAAK2F,OAAY,MAAG3F,KAAKqF,GAAG8J,OAAQlH,EAAUjI,MAE1G,OADCA,KAAe,WAAoBwC,KAAKyM,GAClCA,GAGDV,EAAArO,UAAA4O,gBAAR,SAAwBM,eACtB,IAAmB,IAAAC,EAAAhJ,EAAA+I,GAASE,EAAAD,EAAAnN,QAAAoN,EAAAlN,KAAAkN,EAAAD,EAAAnN,OAAE,CAAzB,IAAMmG,EAAIiH,EAAAnN,MACInC,KAAKgP,YAAY3G,GACzBwE,WAAWxE,GAAM,uGAItBkG,EAAArO,UAAA2O,YAAR,SAAoB1F,GACdA,SACKnJ,KAAK2J,WAAWR,GAEvBnJ,KAAK2J,WAAa,IAId4E,EAAArO,UAAAqP,YAAR,WACGvP,KAAe,WAAoB0H,SAAO,SAAE9H,EAAG4P,GAC9C5P,EAAEuJ,KAAO,CAACvJ,EAAQ,OAAEuJ,KAAMqG,GAAKC,KAAK3L,OAMxCyK,EAAArO,UAAAwP,IAAA,SAAIzH,OACIgH,EAAcjP,KAAKgP,YAAY/G,GAErC,OADAgH,EAAYpC,WAAW5E,GAAU,GAC1BgH,GAGTV,EAAArO,UAAAyP,OAAA,SAAOC,OACC5H,EAAOhI,KAAe,WAC5BA,KAAK6O,YAAY7G,EAAK4H,GAAOzG,MAC7BnB,EAAK6H,OAAOD,EAAO,GACnB5P,KAAKuP,cACLvP,KAAKmK,wBAAuB,GAAO,IAIvCoE,GAhGmCZ,ICPnC,mBAAA,SAAAmC,mDAwBA,OAxB6CjC,EAAAA,EAAAA,GAG3CiC,EAAA5P,UAAA0O,SAAA,SAASzM,EAAgBiI,GACvBpK,KAAK4J,OAASzH,EACdnC,KAAKmK,uBAAuBC,GAAU,IAGxC0F,EAAA5P,UAAA2M,WAAA,SAAW1K,EAAgBiI,GACZ,MAATjI,IACFA,OAAgC4K,IAAxB/M,KAAK2F,OAAOoE,QAAwB/J,KAAK2F,OAAOoE,QAAU/J,KAAK+P,iBAEzE/P,KAAK4J,OAASzH,EAEdnC,KAAKmK,uBAAuBC,GAAU,GAElCpK,KAAKiE,QAAQjE,KAAKiE,OAAO+L,MAAM7N,IAGrC2N,EAAA5P,UAAA6O,UAAA,WACE,OAAO/O,KAAK+P,kBAAoB/P,KAAKmC,OAGvC2N,EAAA5P,UAAAqK,aAAA,aACFuF,GAxB6C9G,uBCA7C,SAAAiH,mDAIA,OAJqCpC,EAAAA,EAAAA,GACnCoC,EAAA/P,UAAA6P,cAAA,WACE,OAAO,MAEXE,GAJqCH,mBCArC,SAAAI,mDAgBA,OAhBoCrC,EAAAA,EAAAA,GAClCqC,EAAAhQ,UAAA6P,cAAA,WACE,OAAO,MAGTG,EAAAhQ,UAAA0O,SAAA,SAASzM,EAAgBiI,GACF,iBAAVjI,IAEPA,EADEA,EAAMxB,OACAwB,EAAMyE,QAAQ,MAAQ,EAAIuJ,WAAWhO,GAASiO,SAASjO,EAAO,SAE9D4K,GAGZ/M,KAAK4J,OAASzH,EACdnC,KAAKmK,uBAAuBC,GAAU,IAE1C8F,GAhBoCJ,mBCalC,SAAAO,EACU7B,EACRvF,EACAtD,EACAN,EACA4C,EACAiB,EACAC,EACAsF,GARF,IAAAtD,EAUEyC,EAAAhN,KAAAZ,KAAMiJ,EAAwBtD,EAAQN,EAAI4C,EAAUiB,EAAQC,EAAMsF,IAAQzO,YATlEmL,EAAAqD,oBAAAA,EAPFrD,EAAAmF,cAA0B,GAiBhCnF,EAAKoF,qBAuDT,OAzEoC1C,EAAAA,EAAAA,GAGlCrO,OAAAgC,eAAI6O,EAAAnQ,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKsQ,+CAiBND,EAAAnQ,UAAAqQ,iBAAR,WAAA,IAGMC,EAHNrF,EAAAnL,KACEA,KAAKiH,WAAa,GAClBjH,KAAKsQ,cAAgB,GAErB,IACEE,EN+EN,SAAgCvJ,EAAsBwJ,GACpD,IAAK9Q,MAAMwI,QAAQsI,GAAQ,OAAOxJ,MAC5ByJ,EAAW,SAAGC,GAClB,OAAAA,EAAIC,QAAM,SAAEC,EAAMC,GAEhB,OADAD,EAAKC,IAAQ,EACND,IACN,KACCE,EAAa,SAAGJ,GAAO,MAAA,aAAaA,EAAIlB,KAAK,QAAO,KAEpDuB,EAAeN,EAAYzJ,GAC3BgK,EAAYP,EAAYD,GACxBS,EAAaT,EAAMU,QAAM,SAACxG,GAAQ,MAAS,MAATA,IAAiBqG,EAAarG,MACtE,GAAIuG,EAAWvQ,OACb,MAAM,IAAI8F,MAAM,4CAA4CsK,EAAcG,QAEtEE,EAAOnK,EAAWkK,QAAM,SAACxG,GAAQ,OAACsG,EAAUtG,MAC5C0G,EAAYZ,EAAM7J,QAAQ,KAChC,IAAmB,IAAfyK,EAAkB,CACpB,GAAID,EAAKzQ,OACP,MAAM,IAAI8F,MAAM,yCAAyCsK,EAAcK,IAEzE,OAAOX,EAET,GAAIY,IAAcZ,EAAMa,YAAY,KAClC,MAAM,IAAI7K,MAAM,iEAEZ8K,EAAQ7O,EAAO+N,GAErB,OADAc,EAAS1B,OAAMhP,MAAf0Q,EAAQ7O,EAAA,CAAQ2O,EAAW,GAAMD,IAC1BG,EM3GiBC,CAAgBhS,OAAO2H,KAAKnH,KAAK2F,OAAiB,YAAI3F,KAAKqF,GAAQ,OACvF,MAAO/C,GACPkD,QAAQ/C,MAAM,YAAWzC,KAAK2F,OAAO8L,OAAS,QAAM,+BAAgCnP,GAEtF,EAAmBoF,SAAO,SAACqG,GACzB5C,EAAe,WAAE4C,GAAc5C,EAAKqD,oBAAoBU,eACtD/D,EAAKxF,OAAiB,WAAEoI,GACxB5C,EAAK9F,GAAG,IAAM0I,IACb5C,EAAKlD,UAAY,IAAI8F,GACtB5C,EACA4C,GAEF5C,EAAKmF,cAAc9N,KAAKuL,OAI5BsC,EAAAnQ,UAAA0O,SAAA,SAASzM,EAAgBiI,GACvB,IAAK,IAAM2D,KAAc5L,EACnBA,EAAMtC,eAAekO,IAAe/N,KAAe,WAAE+N,IACtD/N,KAAe,WAAE+N,GAA6Ba,SAASzM,EAAM4L,IAAa,GAG/E/N,KAAKmK,uBAAuBC,GAAU,IAGxCiG,EAAAnQ,UAAA2M,WAAA,SAAW1K,EAAgBiI,GAGzB,IAAK,IAAM2D,KAFX5L,EAAQA,GAASnC,KAAK2F,OAAOoE,SAAW,GAEf/J,KAAK2F,OAAOsB,WAClCjH,KAAe,WAAE+N,GAA6BlB,WAAW1K,EAAM4L,IAAa,GAE/E/N,KAAKmK,uBAAuBC,GAAU,IAGxCiG,EAAAnQ,UAAA6O,UAAA,WACE,OAAqB,MAAd/O,KAAKmC,SAAmB3C,OAAO2H,KAAKnH,KAAKmC,OAAOxB,QAGzD0P,EAAAnQ,UAAAqK,aAAA,eACQpI,EAAiB,GACvBnC,KAAKiO,cAAY,SAAEhD,EAAU8C,GACvB9C,EAAS0B,SAAW1B,EAAS8D,cAC/B5M,EAAM4L,GAAc9C,EAAS9I,UAGjCnC,KAAK4J,OAASzH,GAElBkO,GAzEoC1C,uBCNpC,SAAA+D,mDASA,OAToC7D,EAAAA,EAAAA,GAClC6D,EAAAxR,UAAA6P,cAAA,WACE,OAAO,MAGT2B,EAAAxR,UAAA0O,SAAA,SAASzM,EAAgBiI,GACvBpK,KAAK4J,OAAkB,MAATzH,EAAgB,GAAKA,EACnCnC,KAAKmK,uBAAuBC,GAAU,IAE1CsH,GAToC5B,ICApC6B,GAAA,WAWE,SAAAA,EAAoB1I,EAAwDwF,GAAxDzO,KAAAiJ,uBAAAA,EAAwDjJ,KAAAyO,QAAAA,EAkF9E,OAhFEkD,EAAAzR,UAAAgP,eAAA,SACEvJ,EACAN,EACA4C,EACAiB,EACA6E,QADA,IAAA7E,IAAAA,EAAA,UAGI+F,EAAmC,KACnC9F,EAAO,GACX,GAAID,EAKF,OAJAC,GAAQD,EAAOC,KACO,OAAlBD,EAAOA,SACTC,GAAQrF,GAEFoF,EAAOrE,MACb,IAAK,SACHsE,GAAQ4E,EACR,MACF,IAAK,QACH5E,GAAS,EAAoC,WAAqBxI,OAClE,MACF,QACE,MAAM,IAAI8F,MAAM,gEAAkEyC,EAAOrE,WAG7FsE,EAAOrF,EAGT,GAAI6B,EAAOG,KAAM,KACT8L,EAAYlM,EAAeC,EAAQ,EAAQuE,KAAKvE,OAAOC,aAC7DqJ,EAAcjP,KAAKkP,eAAe0C,EAAWvM,EAAI4C,EAAUiB,EAAQC,QAiBnE,OAdI4E,IAAqF,IAAvE,EAAQpI,OAAe,SAAEiB,QAAQmH,EAAW7H,MAAMpC,GAAQ+N,SAC1ExM,EAAGgG,WAAY,GAGG,MAAhB1F,EAAO8L,QACT9L,EAAO8L,MAAQ1D,GAGI,WAAhBpI,EAAOd,MAAqC,WAAhBc,EAAOd,MAAuBc,EAAOxB,QAAW,EAAuBA,SAChE,SAAlC,EAAuBF,OACzBoB,EAAGlB,OAAyB,WAAhBwB,EAAOd,KAAoB7E,KAAKyO,QAAQnL,mBAAqBtD,KAAKyO,QAAQlL,mBAC7C,SAAlC,EAAuBU,SAC9BoB,EAAGlB,OAAyB,WAAhBwB,EAAOd,KAAoB7E,KAAKyO,QAAQjL,mBAAqBxD,KAAKyO,QAAQhL,qBAElFkC,EAAOd,MACb,IAAK,UACL,IAAK,SACHoK,EAAc,IAAIiB,GAAelQ,KAAKiJ,uBAAwBtD,EAAQN,EAAI4C,EAAUiB,EAAQC,EAAMnJ,KAAKyO,SACvG,MACF,IAAK,SACHQ,EAAc,IAAIyC,GAAe1R,KAAKiJ,uBAAwBtD,EAAQN,EAAI4C,EAAUiB,EAAQC,EAAMnJ,KAAKyO,SACvG,MACF,IAAK,UACHQ,EAAc,IAAIgB,GAAgBjQ,KAAKiJ,uBAAwBtD,EAAQN,EAAI4C,EAAUiB,EAAQC,EAAMnJ,KAAKyO,SACxG,MACF,IAAK,SACHQ,EAAc,IAAIoB,GAAerQ,KAAMA,KAAKiJ,uBAAwBtD,EAAQN,EAAI4C,EAAUiB,EAAQC,EAAMnJ,KAAKyO,SAC7G,MACF,IAAK,QACHQ,EAAc,IAAIV,GAAcvO,KAAMA,KAAKiJ,uBAAwBtD,EAAQN,EAAI4C,EAAUiB,EAAQC,EAAMnJ,KAAKyO,SAC5G,MACF,QACE,MAAM,IAAIqD,UAAU,kBAAkBnM,EAAOd,MAQnD,OAJIoK,aAAuBtB,IACzB3N,KAAK+R,eAAe9C,GAGfA,GAGD0C,EAAAzR,UAAA6R,eAAR,SAAuBC,GAErBA,EAAalF,mBAEjB6E,EA7FA,GCHA,IAAAM,GAAA,WAKE,SAAAA,IACEjS,KAAKkS,UAAY,IAAIC,EAAAA,QAMzB,OAHEF,EAAA/R,UAAAkS,QAAA,WACEpS,KAAKkS,UAAUhQ,MAAK,IAExB+P,EAZA,GCQA,OAAA,aAOA,IAAAI,GAAA,SAAAzE,GAGE,SAAAyE,EAA6C5D,GAA7C,IAAAtD,EACEyC,EAAAhN,KAAAZ,OAAOA,YADoCmL,EAAAsD,QAAAA,EAE3CtD,EAAKmH,IAAM,IAAIC,IAAGnS,EAAA,GACbqO,EAAQ6D,IAAG,CACdE,cAAe,WACfC,WAAW,EACXC,cAAc,KAEhBvH,EAAKmH,IAAIK,UAAU,WAAY,wDAC/BxH,EAAKmH,IAAIK,UACP,QACA,8YAEFxH,EAAKmH,IAAIK,UAAU,SAAU,gCAC7BxH,EAAKmH,IAAIK,UAAU,UAAW,oCAuBlC,OAxC+C9E,EAAAA,EAAAA,GAoB7CwE,EAAAnS,UAAA4J,kBAAA,SAAkBnE,EAAkBiN,GAApC,IAAAzH,EAAAnL,KACQ6C,EAAcH,EAAkB1C,KAAKyO,QAAsB,eAAoBmE,EAA2B,gBAAiB,IAEjI,OAAA,SAAQzQ,GACN,IACEgJ,EAAKmH,IAAIO,SAASlN,EAAQxD,GAC1B,MAAOG,GAGHsQ,EAAarN,OACfC,QAAQC,KAAKnD,OAGbY,EAAgBiI,EAAKmH,IAAIpP,OAI7B,OAHIiI,EAAKsD,SAAW5L,GAAkBK,IACpCA,EAASA,EAAOiO,QAAM,SAAC2B,GAAK,OAAuC,IAAvCjQ,EAAe+D,QAAQkM,EAAExH,aAEhDpI,6CAnDJN,EAAe7B,WAAA,CAAA,CAAA8D,KAiBTkO,EAAAA,OAAMnP,KAAA,CAAChB,QAqCtByP,EAxCA,CAA+CW,ICf/C,IAAAC,GAAA,WAKA,SAAAA,IACUjT,KAAAkT,SAAqE,GA0B/E,OAtBE1T,OAAAgC,eAAIyR,EAAA/S,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKkT,0CAGdD,EAAA/S,UAAAiT,WAAA,SAAWlP,GACTjE,KAAKoT,cAAgBnP,GAGvBgP,EAAA/S,UAAAmT,SAAA,SAASxO,EAAcZ,GACrBjE,KAAKkT,SAASrO,GAAQZ,GAGxBgP,EAAA/S,UAAAoT,IAAA,SAAIzO,GACF,OAAO7E,KAAKkT,SAASrT,eAAegF,IAGtCoO,EAAA/S,UAAAqT,QAAA,SAAQ1O,GACN,OAAI7E,KAAKsT,IAAIzO,GACJ7E,KAAKkT,SAASrO,GAEhB7E,KAAKoT,eAEhBH,EAhCA,GAkCA,IAAAO,GAAA,WAEE,SAAAA,EAAoBC,EAAkCC,GAAlC1T,KAAAyT,SAAAA,EAAkCzT,KAAA0T,SAAAA,EAWxD,OATEF,EAAAtT,UAAAyT,aAAA,SAAaC,EAA6B/O,GACnC7E,KAAKyT,SAASH,IAAIzO,IACrBW,QAAQC,KAAK,uBAAuBZ,EAAI,SAGpCgP,EAAiB7T,KAAKyT,SAASF,QAAQ1O,GACvCiP,EAAmB9T,KAAK0T,SAASK,wBAA8DF,GACrG,OAAOD,EAAUI,gBAAgBF,wBAXpCnQ,EAAAA,sDAE+BsP,UApCvBgB,EAAAA,4BA+CTT,EAbA,GCAA,SAAgBU,GAAWjL,EAAgDwF,GACzE,OAAO,IAAIkD,GAAoB1I,EAAwBwF,GAGzD,IAAA0F,GAAA,WAgKE,SAAAA,EACU3F,EACA4F,EACA3F,EACA4F,EACAC,EACYC,EAC0BC,GAPhD,IAAArJ,EAAAnL,KACUA,KAAAwO,oBAAAA,EACAxO,KAAAoU,WAAAA,EACApU,KAAAyO,QAAAA,EACAzO,KAAAqU,IAAAA,EACArU,KAAAsU,UAAAA,EACYtU,KAAAuU,OAAAA,EAC0BvU,KAAAwU,QAAAA,EA7IxCxU,KAAAyU,aAAe,IAAItC,EAAAA,QACnBnS,KAAA0U,SAAW,IAAIC,IAEf3U,KAAA4U,QAAS,EAET5U,KAAA6U,SAAU,EAElB7U,KAAA8U,OAAqB,GACrB9U,KAAAgS,aAAoC,KAS3BhS,KAAA+U,OAAmB,aAanB/U,KAAAmD,OAA4B,GAMZnD,KAAA8C,cAAe,EAIf9C,KAAAgD,aAAc,EAEdhD,KAAAiD,YAAa,EA+BbjD,KAAAgV,SAAU,EACVhV,KAAAwI,UAAW,EACXxI,KAAAiV,SAAU,EAEhBjV,KAAAkV,WAAa,IAAIC,EAAAA,aAEjBnV,KAAAoV,WAAa,IAAID,EAAAA,aAEjBnV,KAAAqV,UAAY,IAAIF,EAAAA,aAEhBnV,KAAAsV,UAAY,IAAIH,EAAAA,aA4DjCnV,KAAK8C,aAAe2L,EAAoB,aACxCzO,KAAKgD,YAAcyL,EAAmB,YACtCzO,KAAK+C,aAAe0L,EAAoB,aACxCzO,KAAKsU,UAAUiB,OAAOzM,KAAK0M,EAAAA,UAAUxV,KAAKyU,eAAe9I,WAAS,WAChER,EAAK2J,OAAS3J,EAAKmJ,UAAU3L,QAAQ,MACjCwC,EAAK0J,UACP1J,EAAKK,UAAU,CAAEiK,WAAW,EAAOC,UAAU,IAC7CvK,EAAKwK,sBACLxK,EAAKkJ,IAAIuB,uBAGPC,EAA4C,CAChD7V,KAAKuU,OAASvU,KAAKuU,OAAOgB,OAAS,KACnCvV,KAAKwU,QAAUxU,KAAKwU,QAAQe,OAAS,MACrCpE,QAAM,SAACrP,GAAK,OAAK,MAALA,KACV+T,EAAWlV,OAAS,GACtBmV,EAAAA,MAAKjV,WAAA,EAAA6B,EAAA,IACFoG,KACCqI,EAAAA,QAAM,WAAO,OAAAhG,EAAK0J,WAClBW,EAAAA,UAAUxV,KAAKyU,eAEhB9I,WAAS,WAAO,OAAAR,EAAK4K,mBAmU9B,OA3bEvW,OAAAgC,eACI2S,EAAAjU,UAAA,OAAI,KAqBR,WACE,OAAOF,KAAKgW,WAvBd,SACS7T,GACP,OAAQA,GACN,IAAK,SACHnC,KAAK+U,OAAS,SACd/U,KAAKgD,aAAc,EACnBhD,KAAK8C,cAAe,EAChB9C,KAAKiW,OACPjW,KAAKiW,KAAKC,OAASlW,KAAKiW,KAAKE,QAE/B,MACF,IAAK,OACHnW,KAAK+U,OAAS,aACd/U,KAAKgD,aAAc,EACnBhD,KAAK8C,cAAe,EAChB9C,KAAKiW,OACPjW,KAAKiW,KAAKC,OAASlW,KAAKiW,KAAKG,MAInCpW,KAAKgW,MAAQ7T,mCAuBf3C,OAAAgC,eAAI2S,EAAAjU,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK4U,wCAIdpV,OAAAgC,eAAI2S,EAAAjU,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKqW,uCAOdlC,EAAAjU,UAAA6K,YAAA,SAAY5B,GACV,OAAOnJ,KAAiB,aAAE0K,eAAevB,IAO3CgL,EAAAjU,UAAAoW,SAAA,SAASnN,GACP,OAAOnJ,KAAK+K,YAAY5B,GAAOhH,OAQjCgS,EAAAjU,UAAA0O,SAAA,SAASzF,EAAchH,OACfkG,EAAO,KAAK0C,YAAY5B,GAC9B,IAAKd,EACH,MAAM,IAAI5B,MAAM,iBAAiB0C,GAGnC,OADAd,EAAKwE,WAAW1K,GAAO,GACvB,MAGFgS,EAAAjU,UAAAqW,SAAA,SAASjU,GACPA,EAAEkU,iBACFlU,EAAEmU,kBACGzW,KAAK8C,cAAc9C,KAAKwL,YACxBxL,KAAK0W,OACV1W,KAAKoV,WAAWuB,KAAK3W,KAAKmC,QAqClBgS,EAAAjU,UAAA0W,MAAV,SAAgB3V,GACd,OAAQjB,KAAKwU,QAAUxU,KAAKwU,QAAQoC,MAAM3V,GAAO,KAAOA,GAGlDkT,EAAAjU,UAAA2W,UAAR,SAAkBxR,GAAlB,IAAA8F,EAAAnL,KACE,CAAC,gBAAgBmR,QAAM,SAAClQ,GAAO,QAAEkK,EAAK2L,OAAO7V,MAAMyG,SAAO,SAACzG,GAAO,OAACoE,EAAGpE,GAAIb,EAAA,GAAQ+K,EAAK2L,OAAO7V,GAASoE,EAAGpE,QAGpGkT,EAAAjU,UAAA6W,cAAR,WAAA,IAAA5L,EAAAnL,KACQgX,EAA+B,eAAhBhX,KAAK+U,OACpBkC,EAAUvO,EAAAA,SAAS1I,KAAK2F,QACtBC,EAAAqR,EAAArR,YAEFsR,EAAI,SACRvR,EACAwR,EACAC,EACAC,EACAC,GAEK3X,MAAMwI,QAAQxC,EAAO2B,YAAW3B,EAAO2B,SAAW,IAEvD9H,OAAO2H,KAAKxB,EAAiB,YAAG+B,SAAO,SAACzG,OAChCsW,EAAQ,IAAItW,EACZgK,EAAWvF,EAAeC,EAAiB,WAAE1E,GAAkB2E,GAC/DP,EAAEjF,EAAA,CACN6D,OAAQgH,EAASpG,MACboG,EAAS9G,QAAUJ,EAAWkH,EAAS9G,QAChB,iBAAhB8G,EAAS5F,GAAkB,CAAEpB,OAAQgH,EAAS5F,IAAO,MAC3D4F,EAAS9G,SAAW8G,EAAS5F,IAAM1F,MAAMwI,QAAQ8C,EAASrD,OAASqD,EAASrD,KAAKjH,OAAS,EAAI,CAAEsD,OAAQ,UAAa,KACvHkH,EAAK2L,OACJ7L,EAAW,GACZmM,EAASG,IAmBd,GAhBIP,EACEK,EAAeG,eACZnS,EAAGmS,iBACNnS,EAAGmS,eAAiBH,EAAeG,iBAGhCnS,EAAGoS,YAAWpS,EAAGoS,eAAgD,IAA7BJ,EAAeI,UAA4B,EAAIJ,EAAeI,WAClGpS,EAAGqS,cAAarS,EAAGqS,iBAAoD,IAA/BL,EAAeK,YAA8B,GAAKL,EAAeK,aACzGrS,EAAGsS,gBACNtS,EAAGsS,mBAAwD,IAAjCN,EAAeM,cAAgC,KAAON,EAAeM,iBAGnGtS,EAAGoS,UAAY,KACfpS,EAAGqS,YAAc,KACjBrS,EAAGsS,cAAgB,MAEH,SAAdtS,EAAGpB,QAA+B,MAAVoB,EAAGuS,IAAa,KACpCC,EAAkBlS,EAAiB,WAAEN,EAAGuS,KAC1CC,EACFA,EAAgBxS,GAAEjF,EAAA,GACZyX,EAAkB,GAAA,CACtBC,QAAQ,IAGVzS,EAAGuS,IAAM,KAIb,GADAzM,EAAK0L,UAAUxR,GACXA,EAAG0S,aAAc,CACY,iBAApB1S,EAAG0S,eACZ1S,EAAG0S,aAAY,CACbC,KAAM3S,EAAG0S,mBAGPE,EAAM5S,EAAG0S,aAAY3X,EAAA,CACzB4X,KAAM,GACNE,KAAM,kBACNC,UAAW,MACXC,QAAS,QACTC,gBAAiB,IACjBC,gBAAiB,IACdjT,EAAG0S,cAEJE,EAAGM,OACLN,EAAGD,KAAO7M,EAAKyL,MAAMqB,EAAGM,OAErBN,EAAGD,OACN3S,EAAG0S,kBAAehL,GAiBtB,GAdI1H,EAAGkT,OACLtN,EAASwG,MAAQtG,EAAKyL,MAAMvR,EAAGkT,OAE7BlT,EAAGmT,kBACLvN,EAASwN,YAActN,EAAKyL,MAAMvR,EAAGmT,kBAEvCnT,EAAGyS,OAA8B,kBAAdzS,EAAGyS,QAAuBzS,EAAGyS,QAC9B,IAAdzS,EAAGyS,QAAoBzS,EAAGqT,KAAOvN,EAAKoJ,SAAWpJ,EAAKoJ,OAAOoE,IAAItT,EAAGqT,OACtErT,EAAGyS,QAAS,GAGdR,EAAMC,GAASlS,SACR4F,EAAS5F,IAEE,IAAdA,EAAGyS,OAAiB,KAChBtI,EAAM7J,EAAe,SAAEiB,QAAQ3F,IACxB,IAATuO,GACF7J,EAAe,SAAEkK,OAAOL,EAAK,GAI7BvE,EAAS2N,QACXtB,EAAMC,GAAOpI,OAASmI,EAAMC,GAAOpI,QAAU,GAC7C+H,EAAKjM,EAAS2N,MAAO3N,EAAS2N,OAAQxB,EAASG,IAAU,IAAIpI,QAAU,GAAI9J,EAAIiS,EAAMC,GAAOpI,SAG1FlE,EAAShE,YAAczH,OAAO2H,KAAK8D,EAAShE,YAAYtG,QAC1DuW,EAAKjM,EAAUtF,EAAQyR,EAASG,IAAU,GAAIlS,EAAIiS,EAAMC,QAKxDsB,EAAM,SAAIlT,EAAkBN,GAChC7F,OAAO2H,KAAKxB,EAAiB,YAAG+B,SAAO,SAACzG,OAChCgK,EAAWtF,EAAiB,WAAE1E,GAC9BsW,EAAQ,IAAItW,EAClB+F,EAAUiE,EAAU5F,EAAGkS,IACnBtM,EAAS2N,OACXC,EAAO5N,EAAS2N,MAAOvT,EAAGkS,GAAOpI,QAE/BlE,EAAShE,YACX4R,EAAO5N,EAAU5F,EAAGkS,QAKX,MAAXvX,KAAKqF,KAAYrF,KAAKqF,GAAK,IAC/BrF,KAAK8W,OAAM1W,EAAA,CACT6C,WAAYjD,KAAKyO,QAAQxL,WACzB6V,KAAM9Y,KAAKyO,QAAQqK,KACnBhW,aAAc9C,KAAK8C,aACnBE,YAAahD,KAAKgD,aACfhD,KAAKyO,QAAQpJ,GACb4R,EAAQ5R,GACRrF,KAAKqF,GAAG,OAEW,IAApBrF,KAAKiD,aACPjD,KAAK8W,OAAO7T,YAAa,GAI3BjD,KAAK+Y,IAAG3Y,EAAA,GAAQJ,KAAK8W,QAErBI,EAAKD,EAASA,EAASjX,KAAKqF,GAAIrF,KAAKqF,GAAIrF,KAAK+Y,KAG9C/R,EAAUiQ,EAASjX,KAAK+Y,KACxBF,EAAO5B,EAASjX,KAAK+Y,KAErB/Y,KAAKiX,QAAUA,EAEf7R,EAAGpF,KAAK+Y,IAAK,oBAAqB/Y,KAAK+Y,IAAK9B,IAGtC9C,EAAAjU,UAAAyV,oBAAR,WACE3V,KAAKiW,KAAI7V,EAAA,CACP4Y,OAAQ,CAAEF,KAAM,YACb9Y,KAAK8U,OACL9U,KAAKyO,QAAQtL,OACZnD,KAAW,YAEXiZ,EAAWzZ,OAAO2H,KAAKnH,KAAK+Y,KAAKG,MAAI,SAACpG,GAAK,OAAAA,EAAEqG,WAAW,QAC9D,GAAoB,eAAhBnZ,KAAK+U,OAAyB,KAC1BqE,EAAQH,EAAWjZ,KAAK+Y,IAAIE,GAAYjZ,KAAK8W,OAC9C9W,KAAKiW,KAAW,OAAEoD,OACrBrZ,KAAKiW,KAAW,OAAEoD,KAAO,CACvBC,OAAQF,EAAM3B,UACd8B,KAAMH,EAAM1B,cAIwB,MAApC1X,KAAKiW,KAAW,OAAEuB,iBACpBxX,KAAKiW,KAAW,OAAEuB,eAAiB4B,EAAM5B,iBAGtCxX,KAAKiW,KAAW,OAAEuD,OAA0C,iBAAzBJ,EAAM5B,gBAA+B4B,EAAM5B,eAAiB,IAClGxX,KAAKiW,KAAW,OAAEuD,MAAQ,oBAG5BxZ,KAAKiW,KAAW,OAAEoD,KAAO,GAEvBrZ,KAAKgW,QACPhW,KAAKyE,KAAOzE,KAAKgW,OAGnB5Q,EAAGpF,KAAK+Y,IAAK,kBAAmB/Y,KAAKiW,OAGvC9B,EAAAjU,UAAAuZ,SAAA,WACEzZ,KAAK6U,SAAU,EACf7U,KAAKwL,aAGP2I,EAAAjU,UAAAwZ,YAAA,SAAYC,GAC0B,IAAhCna,OAAO2H,KAAKwS,GAAShZ,SAAiBgZ,EAAQ3E,UAAW2E,EAAQnR,SAIrExI,KAAK+V,gBAHH/V,KAAKqU,IAAIvI,iBAObqI,EAAAjU,UAAA0Z,QAAA,SAAQzQ,EAAc0Q,GAChB7Z,KAAK0U,SAASpB,IAAInK,GACpB3D,QAAQC,KAAK,yBAAyB0D,EAAI,oBAG5CnJ,KAAK0U,SAASoF,IAAI3Q,EAAM0Q,GACxB7Z,KAAK+Z,uBAGC5F,EAAAjU,UAAA6Z,mBAAR,WAAA,IAAA5O,EAAAnL,KACEA,KAAK0U,SAAShN,SAAO,SAAEsS,EAAK7Q,OACpB8B,EAAWE,EAAiB,aAAET,eAAevB,GACnC,MAAZ8B,IAGJA,EAAS5F,GAAG4U,QAAUD,OAI1B7F,EAAAjU,UAAAsL,UAAA,SAAUiD,QAAA,IAAAA,IAAAA,EAAA,CAAyDgH,WAAW,EAAMC,UAAU,QACtFxH,EAAE,SAAIjD,GACVA,EAASR,iBACHQ,aAAoB0C,IAAmB1C,EAAShE,aAClDtH,MAAMwI,QAAQ8C,EAAShE,YACzBgE,EAAShE,WAAWS,SAAO,SAAC9H,GAAK,OAAAsO,EAAGtO,MAEpCJ,OAAO2H,KAAK8D,EAAShE,YAAYS,SAAO,SAACzG,GAAO,OAAAiN,EAAGjD,EAAmB,WAAEhK,SAGxEwN,EAAQiH,SACV,KAAiB,aAAEjL,iBAEnByD,EAAG,KAAiB,kBAGhBhL,EAAS,KAAiB,aAAEA,OAIlC,OAHA,KAAK0R,SAAW1R,GAAUA,EAAOvC,QAC7B8N,EAAQgH,YAAc,KAAKb,QAAQ,KAAKU,UAAUqB,KAAI,GAC1D,KAAKtC,IAAIvI,gBACT,MAMFqI,EAAAjU,UAAA6V,cAAA,SAAcmE,EAAsBC,GAApC,IAAAhP,EAAAnL,KAIE,GAHIka,IAAW,KAAKvU,OAASuU,GACzBC,IAAO,KAAK9U,GAAK8U,IAEhB,KAAKxU,aAA4C,IAA3B,KAAKA,OAAOsB,WAA4B,MAAM,IAAIR,MAAM,kBACnF,GAAI,KAAKd,OAAON,IAAgC,iBAAnB,KAAKM,OAAON,GAAiB,MAAM,IAAIoB,MAAM,8CAE1E,KAAKd,OAAOd,KAAO,SAEnB,KAAKuV,UAASha,EAAA,GAAQ,KAAK6H,UAEvB,KAAK4M,SAAS,KAAKT,WAAWhC,UAElC,KAAKiI,eAEL,KAAKtD,gBACL,KAAKpB,sBAEL,KAAK3D,aAAe,KAAKxD,oBAAoBU,eAAe,KAAK+H,QAAS,KAAK8B,IAAK,KAAK9Q,UACzF,KAAK8R,qBACL,KAAK1F,IAAIvI,gBACT,KAAKkE,YAEDsK,GAAU,EAed,OAdA,KAAKtI,aAAaxH,aAAamB,WAAS,SAACxJ,GACvC,EAAKkU,MAAKjW,EAAA,GAAQ,EAAK6H,SAAa9F,GAChCmY,EACFA,GAAU,EAGZ,EAAKpF,WAAWyB,KAAK,EAAKN,UAE5B,KAAKrE,aAAauI,cAAc5O,WAAS,SAACzI,GACxC,EAAK0R,SAAW1R,GAAUA,EAAOvC,QACjC,EAAK2U,UAAUqB,KAAI,GACnB,EAAKtC,IAAIvI,mBAGX,MAOFqI,EAAAjU,UAAA8P,MAAA,SAAM2G,GAAN,IAAAxL,EAAAnL,KAME,YANI,IAAA2W,IAAAA,GAAA,GACJ,KAAiB,aAAE9J,WAAW,KAAK5E,UAAU,GAC7CuS,QAAQC,UAAUC,MAAI,WAAO,OAAA,EAAKrG,IAAIvI,mBAClC6K,GACF,KAAKtB,UAAUsB,KAAK,KAAKxU,OAE3B,MAGMgS,EAAAjU,UAAAma,aAAR,WACOra,KAAKgS,eACVhS,KAAKgS,aAAauI,cAAcI,cAChC3a,KAAKgS,aAAaxH,aAAamQ,gBAGjCxG,EAAAjU,UAAA0a,YAAA,WACE5a,KAAKqa,eACLra,KAAKoU,WAAWhC,UACR,IAAAqC,EAAAzU,KAAAyU,aACRA,EAAavS,OACbuS,EAAalD,gCA/fhBsJ,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,WACVC,SAAU,KACVC,SAAA,gzEACAC,UAAW,CACTzH,GACA,CACE0H,QAASvJ,GACTuC,WAAUA,GACViH,KAAM,CAACnI,GAAwBpQ,IAEjCqP,IAEFmJ,KAAM,CACJC,aAAc,OACdC,qBAAsB,sBACtBC,qBAAsB,oBACtBC,mBAAoB,kBACpBC,uBAAwB,aACxBC,uBAAwB,WAE1BC,qBAAqB,EACrBC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,kDAnC1BtK,UAGAM,UAPArP,SApBPsZ,EAAAA,yBAgBOC,EAAAA,0BADAC,EAAAA,WAAUrb,WAAA,CAAA,CAAA8D,KA2LdwX,EAAAA,2CACAA,EAAAA,UAAQ,CAAAxX,KAAIkO,EAAAA,OAAMnP,KAAA,CAAC0Y,EAAAA,uDA5HrBC,EAAAA,sBAEAA,EAAAA,kBAEAA,EAAAA,wBAEAA,EAAAA,sBAOAA,EAAAA,4BAMAA,EAAAA,4BAEAA,EAAAA,2BAEAA,EAAAA,0BAEAA,EAAAA,oBAEAA,EAAAA,uBA6BAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,0BAEAC,EAAAA,2BAEAA,EAAAA,0BAEAA,EAAAA,0BAEAA,EAAAA,UA/CwBC,EAAAA,CAAfC,EAAAA,2EAIeD,EAAAA,CAAfC,EAAAA,0EAEeD,EAAAA,CAAfC,EAAAA,yEA+BeD,EAAAA,CAAfC,EAAAA,sEACeD,EAAAA,CAAfC,EAAAA,uEACeD,EAAAA,CAAfC,EAAAA,sEA4ZZvI,EAjgBA,OCpBIwI,GAAe,EAEnBC,GAAA,WAmBE,SAAAA,EAAoBC,EAAsCzI,GAAtCpU,KAAA6c,cAAAA,EAAsC7c,KAAAoU,WAAAA,EARjDpU,KAAAyU,aAAe,IAAItC,EAAAA,QAC5BnS,KAAAiE,OAAsD,KAqCxD,OA5BE2Y,EAAA1c,UAAA4c,qBAAA,SAAqB7Y,GACnBjE,KAAKiE,OAASA,MACR8Y,EAAK,OAAOJ,KAEZtX,EAAKrF,KAAKgd,aAAe,GAC/Bhd,KAAKiE,OAAO+Y,aAAehd,KAAKgd,aAChChd,KAAKiE,OAAO0B,OAAS3F,KAAKgd,aAAarX,OACvC3F,KAAKiE,OAAOoB,GAAKA,EACjBrF,KAAKiE,OAAO8Y,GAAKA,EACjB/c,KAAKiE,OAAOjB,YAAcqC,EAAc,YACxCrF,KAAKgd,aAAa/Y,OAASA,GAG7B2Y,EAAA1c,UAAAuZ,SAAA,WAAA,IAAAtO,EAAAnL,KACEA,KAAKoU,WAAWlC,UAAUvG,WAAS,WAAO,OAAAR,EAAKyP,kBAGjDgC,EAAA1c,UAAAwZ,YAAA,WACE1Z,KAAKid,IAAMjd,KAAK6c,cAAclJ,aAAa3T,KAAK4T,UAAY5T,KAAKgd,aAAa3X,GAAGpB,QAAUjE,KAAKgd,aAAarX,OAAOd,MACpH7E,KAAK8c,qBAAqB9c,KAAKid,IAAIC,WAGrCN,EAAA1c,UAAA0a,YAAA,WACU,IAAAnG,EAAAzU,KAAAyU,aACRA,EAAavS,OACbuS,EAAalD,WACbvR,KAAKid,IAAI7K,+BA/CZyI,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,UACVC,SAAU,SACVC,SAAU,gDAGVW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,kDAX1BzI,UAFAvB,4CAoBNsK,EAAAA,yBAEAY,EAAAA,UAASvZ,KAAA,CAAC,SAAU,CAAEwZ,KAAMC,EAAAA,iBAAkBC,QAAQ,OAiCzDV,EAjDA,qBCOE,SAAAW,EAAYC,EAAwBxE,GAAAhZ,KAAAgZ,OAAAA,EArB5BhZ,KAAA6U,SAAU,EAsBhB7U,KAAKyd,GAAKD,EAAgB,cAW9B,OA3BUD,EAAArd,UAAAwd,KAAR,WACE,GAAK1d,KAAK6U,SAAuB,MAAZ7U,KAAK2d,OAAe3d,KAAK2d,KAAO,GAArD,KACMC,EAAW5d,KAAKyd,GAAGI,cAAc,aAAe7d,KAAKyd,GAC3Dzd,KAAKgZ,OAAO8E,SAASF,EAAU,iBACzBG,EAAUH,EAASC,cAAc,wBACjCG,EAAOhe,KAAK2d,IAAM,KACxB,GAAII,EACF/d,KAAKgZ,OAAOiF,SAASF,EAAS,QAASC,GACvChe,KAAKgZ,OAAOiF,SAASF,EAAS,OAAQ,OAAOC,OACxC,KACCE,EAAYN,EAASC,cAAc,kCACzC7d,KAAKgZ,OAAOiF,SAASC,EAAW,cAAeF,MAQnDT,EAAArd,UAAAie,gBAAA,WACEne,KAAK6U,SAAU,EACf7U,KAAK0d,QAGPH,EAAArd,UAAAwZ,YAAA,WACM1Z,KAAK6U,SAAS7U,KAAK0d,4BAlC1BU,EAAAA,UAASxa,KAAA,CAAC,CAAEkX,SAAU,6DAHYuD,EAAAA,kBAA8BC,EAAAA,0CAQ9D/B,EAAAA,MAAK3Y,KAAA,CAAC,kBAEP6Y,EAAAA,CADC8B,EAAAA,iEA8BHhB,KCvCA,IAAAiB,GAAA,WAIA,SAAAA,IAaWxe,KAAAyR,MAAuB,KASlC,OAPEjS,OAAAgC,eAAIgd,EAAAte,UAAA,IAAC,KAAL,WACE,OAAsB,OAAfF,KAAKyR,MAAiBzR,KAAK2F,OAAO8L,MAAQzR,KAAKyR,uCAGxDjS,OAAAgC,eAAIgd,EAAAte,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKqF,GAAe,kEApB9BwV,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,eACVE,SAAA,iqCACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,qCAGhCM,EAAAA,sBACAA,EAAAA,kBACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,SASHiC,EA1BA,GCAA,IAAAC,GAAA,WAUE,SAAAA,EAAoB5E,EAAwC6E,GAAxC1e,KAAA6Z,YAAAA,EAAwC7Z,KAAA0e,MAAAA,EAK9D,OAHED,EAAAve,UAAAuZ,SAAA,WACEzZ,KAAK0e,MAAM9E,QAAQ5Z,KAAKmJ,KAAKgQ,WAAWrV,GAAU9D,KAAKmJ,KAAOrF,EAAS9D,KAAKmJ,KAAMnJ,KAAK6Z,kCAT1FuE,EAAAA,UAASxa,KAAA,CAAC,CACTkX,SAAU,6DALuB6D,EAAAA,mBAC1BxK,oCAONoI,EAAAA,MAAK3Y,KAAA,CAAC,kBAOT6a,EAfA,GCeA,IAAAG,GAAA,WA8BE,SAAAA,EAC6CC,EACTC,EACOC,EACJC,GAHMhf,KAAA6e,GAAAA,EACT7e,KAAA8e,SAAAA,EACO9e,KAAA+e,WAAAA,EACJ/e,KAAAgf,OAAAA,EA/BvChf,KAAAif,WAAY,EACZjf,KAAA+c,GAAK,GAGL/c,KAAAgD,aAAc,EAgEhB,OA9DExD,OAAAgC,eACIod,EAAA1e,UAAA,MAAG,KADP,WAEE,OAAOF,KAAKqF,GAAGmU,OAAS,oCAG1Bha,OAAAgC,eAAIod,EAAA1e,UAAA,WAAQ,KAAZ,WACE,SAA6B,IAAzBF,KAAK2F,OAAOuC,WAAqBlI,KAAW,OAAEwI,WAI3C,sCAGThJ,OAAAgC,eAAIod,EAAA1e,UAAA,IAAC,KAAL,WACE,OAAOF,KAAKgd,aAAa9S,KAAKjG,OAAa,OAAE6Q,wCAG/CtV,OAAAgC,eAAIod,EAAA1e,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKqF,GAAe,8CAU7BuZ,EAAA1e,UAAAie,gBAAA,WAAA,IAAAhT,EAAAnL,KACEA,KAAKgd,aAAazC,cAAczR,KAAK0M,EAAAA,UAAUxV,KAAe,WAAEyU,eAAe9I,WAAS,SAAEzI,GAC1E,MAAVA,IACJkC,EAAG+F,EAAK9F,GAAI,gBAAiB8F,EAAK6R,aAAa7T,KAAMjG,GAGjDiI,EAAKnI,cACPmI,EAAK8T,UAAY/b,EAAOvC,OAAS,EACjCwK,EAAK1I,MAAQ0I,EAAK8T,UAAa/b,EAAO,GAAU,QAAc,GAE9DiI,EAAK0T,GAAG/S,iBAEVX,EAAKnI,aAAc,OAIvB4b,EAAA1e,UAAA0O,SAAA,SAASzM,GACPnC,KAAKgd,aAAapO,SAASzM,GAAO,GAClCiD,EAAGpF,KAAKqF,GAAI,eAAgBrF,KAAKgd,aAAa7T,KAAMnJ,KAAKgd,eAG3Dxd,OAAAgC,eAAIod,EAAA1e,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKgd,aAAa7a,uCAG3Byc,EAAA1e,UAAA4L,cAAA,SAAc1B,QAAA,IAAAA,IAAAA,GAAA,GACRA,EACFpK,KAAK6e,GAAGjJ,eAER5V,KAAKgd,aAAa9S,KAAKjG,OAAO4a,GAAGjJ,yDAjFfsG,EAAAA,kBAAiBnb,WAAA,CAAA,CAAA8D,KA8CpCkO,EAAAA,OAAMnP,KAAA,CAACsY,EAAAA,4BA9CoDgD,EAAAA,SAAQne,WAAA,CAAA,CAAA8D,KA+CnEkO,EAAAA,OAAMnP,KAAA,CAACsb,EAAAA,mBArCHtC,GAAe7b,WAAA,CAAA,CAAA8D,KAsCnBkO,EAAAA,OAAMnP,KAAA,CAACgZ,aArCHzI,GAAWpT,WAAA,CAAA,CAAA8D,KAsCfkO,EAAAA,OAAMnP,KAAA,CAACuQ,sCAzBTgL,EAAAA,YAAWvb,KAAA,CAAC,YA8Dfgb,EAvEA,GAyEA,IAAAQ,GAAA,SAAAxR,GAAA,SAAAwR,mDAEA,OAFmCvR,EAAAA,EAAAA,GACjCuR,EAAAlf,UAAA8P,MAAA,SAAMpG,KACRwV,EAFA,CAAmCR,mBAInC,SAAAS,mDAEA,OAFiExR,EAAAA,EAAAA,GAC/DwR,EAAAnf,UAAA8P,MAAA,SAAMpG,KACRyV,GAFiET,mBAIjE,SAAAU,mDAMA,OANuCzR,EAAAA,EAAAA,GACrCyR,EAAApf,UAAA8P,MAAA,SAAMpG,KAEN0V,EAAApf,UAAAie,gBAAA,WAAA,IAAAhT,EAAAnL,KACEA,KAAKgd,aAAazC,cAAczR,KAAK0M,EAAAA,UAAUxV,KAAe,WAAEyU,eAAe9I,WAAS,WAAO,OAAAR,EAAK0T,GAAG/S,oBAE3GwT,GANuCV,mBAQvC,SAAAW,mDAMA,OANwC1R,EAAAA,EAAAA,GACtC0R,EAAArf,UAAA8P,MAAA,SAAMpG,KAEN2V,EAAArf,UAAAie,gBAAA,WAAA,IAAAhT,EAAAnL,KACEA,KAAKgd,aAAazC,cAAczR,KAAK0M,EAAAA,UAAUxV,KAAe,WAAEyU,eAAe9I,WAAS,WAAO,OAAAR,EAAK0T,GAAG/S,oBAE3GyT,GANwCX,mBCpGxC,SAAAY,IAAA,IAAArU,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAUEmL,EAAAsU,UAAY,IA4Bd,OAhCiC5R,EAAAA,EAAAA,GAM/BrO,OAAAgC,eAAIge,EAAAtf,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKwI,UAAaxI,KAAK2F,OAAO+Z,UAAa1f,KAAKgd,aAAuB,WAAoBrc,QAAUX,KAAK2F,OAAO+Z,0CAG1HlgB,OAAAgC,eAAIge,EAAAtf,UAAA,aAAU,KAAd,WACE,OAAQF,KAAKwI,UAAYxI,KAAK2f,6CAGhCH,EAAAtf,UAAAuZ,SAAA,WACQ,IAAAmG,EAAA5f,KAAAqF,GAAEgU,EAAAuG,EAAAvG,KAAMwG,EAAAD,EAAAC,SAAUC,EAAAF,EAAAE,QAASC,EAAAH,EAAAG,UAAWJ,EAAAC,EAAAD,YACxCtG,GAAQA,EAAKoG,YACfzf,KAAKyf,UAAYpG,EAAKoG,WAGxBzf,KAAK6f,SAAWA,GAAY7f,KAAKuM,EAAEyT,QACnChgB,KAAK8f,QAAUA,GAAW,SAC1B9f,KAAK2f,aAA4B,IAAdI,EAAsB,KAAOJ,GAAe3f,KAAKuM,EAAE0T,YAGxET,EAAAtf,UAAAggB,QAAA,WACElgB,KAAKgd,aAAatN,IAAI,KAGxB8P,EAAAtf,UAAAigB,WAAA,SAAWvQ,GACT5P,KAAKgd,aAAarN,OAAOC,wBApC5BiL,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,WACVE,SAAA,i4DACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAkCnCuD,GAhCiCF,uBCEjC,SAAAc,IAAA,IAAAjV,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAOEmL,EAAA3K,EAAS,GAET2K,EAAAkV,OAAiB,GAGTlV,EAAAmV,SAAU,EACVnV,EAAAoV,QAA0B,KA2DpC,OAlEwC1S,EAAAA,EAAAA,GAStCuS,EAAAlgB,UAAAsgB,YAAA,SAAYnY,GACVrI,KAAKqgB,OAAShY,EAAKoY,QACnBzgB,KAAK4O,SAASvG,EAAKqY,SACf1gB,KAAKqF,GAAGkQ,QAAQvV,KAAKqF,GAAGkQ,OAAOlN,IAGrC+X,EAAAlgB,UAAAie,gBAAA,WAAA,IAAAhT,EAAAnL,KACQ4f,EAAA5f,KAAAqF,GAAEsb,EAAAf,EAAAe,SAAUC,EAAAhB,EAAAgB,yBAA0BC,EAAAjB,EAAAiB,QAASC,EAAAlB,EAAAkB,aAAcjY,EAAA+W,EAAA/W,UACnE7I,KAAKQ,EAAI,CACPmgB,SAAU1b,EAAO0b,GAAU,GAC3BC,yBAA0B3b,EAAO2b,GAA0B,GAC3DG,MAAOF,QAAW9T,OAGhBiU,EAAoC,MAAhBF,GAA8BA,EACrB,kBAAtBE,IACTA,EAAiB,SAAIC,EAAeC,GAAyB,OAAAA,EAAO5Y,MAAM6Y,cAAcva,SAASqa,GAAS,IAAIE,gBAAkB,IAElInhB,KAAK8gB,aAAeE,EAEpBhhB,KAAKsgB,UAAYzX,MACXuY,IAAYphB,KAAKqF,GAAGgc,cAAgB,GACpC/c,EAAOgd,KAAKC,IAAI,EAAGvhB,KAAKsgB,QAAUgB,KAAKC,IAAI,GAAIH,GAAWA,GAEhEphB,KAAKgI,KAAOhI,KAAKwhB,QAAoB,aAAE1Y,KACrCuY,EAAAA,aAAa/c,GACbmd,EAAAA,UAAU,IACVC,EAAAA,SAAO,SAACT,GAAS,OAAC9V,EAAKmV,QAAU,EAAWW,GAAS9V,EAAKwW,WAAWV,MACrE7Y,EAAAA,KAAG,SAACwD,GAAO,OAAA7D,EAAQ6D,EAAK,KAAMT,EAAKxF,OAAe,eAItDya,EAAAlgB,UAAA8P,MAAA,SAAM7N,GAEJ,GADAnC,KAAKqgB,OAASrgB,KAAKmC,OACfnC,KAAKsgB,QACT,OAAQtgB,KAAKqF,GAAGR,MACd,IAAK,QACH7E,KAAKugB,QAAU9X,EAAYzI,KAAK2F,OAAW,MAAK3F,KAAKgd,aAAavO,QAAQ/K,gBAAiB,KAAM1D,KAAK2F,OAAe,UACrH,MACF,QACE3F,KAAKugB,QAAU9X,EAAYzI,KAAK2F,OAAW,KAAGxD,EAAOnC,KAAK2F,OAAe,YAKvEya,EAAAlgB,UAAAyhB,WAAR,SAAmBV,GAAnB,IAAA9V,EAAAnL,KACE,OAAQA,KAAKqF,GAAGR,MACd,IAAK,QACH,OAAO7E,KAAK4hB,eAAeX,GAC7B,QACE,OAAOlY,EAAAA,GAAG/I,KAAKugB,QAAQpP,QAAM,SAAC+P,GAAU,OAAA/V,EAAK2V,aAAaG,EAAOC,SAI/Dd,EAAAlgB,UAAA0hB,eAAR,SAAuBzf,GACrB,OAAO4G,EAAAA,IAAI5G,IAAUA,EAAMyE,QAAQ,KAAO,GAAK5G,KAAKugB,QAAQnY,KAAG,SAACyZ,GAAU,OAAG1f,EAAK,IAAI0f,EAAOvZ,+BAtEhGuS,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,kBACVE,SAAA,8+BACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,0CAMhCkB,EAAAA,UAASvZ,KAAA,CAACke,EAAAA,QAAS,CAAExE,QAAQ,OA8DhC8C,GAlEwCf,uBCfxC,SAAA0C,mDAMkD,OAAflU,EAAAA,EAAAA,uBANlCgN,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,aACVE,SAAA,mfACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAEe8F,GAAf3C,mBCDnC,SAAA4C,IAAA,IAAA7W,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAWEmL,EAAA8W,KAAuB,KAyCzB,OA9CoCpU,EAAAA,EAAAA,GAQlCmU,EAAA9hB,UAAAuZ,SAAA,WAAA,IAAAtO,EAAAnL,KACQ4f,EAAA5f,KAAAqF,GAAE6c,EAAAtC,EAAAsC,UAAWC,EAAAvC,EAAAuC,UAAWC,EAAAxC,EAAAwC,UAAWC,EAAAzC,EAAAyC,cAAexZ,EAAA+W,EAAA/W,UACxD7I,KAAKkiB,UAAYA,GAAa,KAC9BliB,KAAKmiB,UAAYld,EAAOkd,GAAW,GACnCniB,KAAKoiB,UAAYnd,EAAOmd,GAAW,GACnCpiB,KAAKqiB,cAAgBA,GAAiB,CAAC,SACjCxZ,IACJ7I,KAAKsiB,SAAQ,SAAIC,EAAsB3S,GAAkB,OAAA/G,EAAU0Z,EAAM3S,EAAOzE,GAAMuP,MAAI,WAAO,OAAAvP,EAAKW,sBAI1GkW,EAAA9hB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACE2I,GAAQ3I,KAAK2F,OAAQ,GAAIxD,GAAOwJ,WAAS,SAAC3D,GACxCmD,EAAK8W,KAAOja,EACZmD,EAAKW,oBAITkW,EAAA9hB,UAAAsiB,eAAA,SAAeC,GACTziB,KAAKqF,GAAGqd,eAAe1iB,KAAKqF,GAAGqd,cAAcD,IAGnDT,EAAA9hB,UAAAyiB,QAAA,SAAQxgB,GACNnC,KAAK4O,SAASzM,GACVnC,KAAKqF,GAAGkQ,QACVvV,KAAKqF,GAAGkQ,OAAOpT,IAInB6f,EAAA9hB,UAAA0iB,iBAAA,SAAiBnU,GACXzO,KAAKqF,GAAGwd,iBACV7iB,KAAKqF,GAAGwd,gBAAgBpU,IAI5BuT,EAAA9hB,UAAA4iB,OAAA,WACM9iB,KAAKqF,GAAG0d,OAAO/iB,KAAKqF,GAAG0d,6BAlD9BlI,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,cACVE,SAAA,0zCACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAgDnC+F,GA9CoC3C,uBCPpC,SAAA2D,IAAA,IAAA7X,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAOEmL,EAAA8W,KAAuB,GACvB9W,EAAA8X,YAAa,EACb9X,EAAA+X,eAAgB,EAEhB/X,EAAAgY,WAAqB,GACrBhY,EAAAiY,QAAS,IAyDX,OA/DoCvV,EAAAA,EAAAA,GAQlCmV,EAAA9iB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACEA,KAAKojB,QAAS,EACdza,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAIlD,GAAOwJ,WAAS,SAAC3D,GAC7CmD,EAAK8W,KAAOja,EACZmD,EAAK8X,YAAa,EAClB9X,EAAK+X,eAAgB,EACrB/X,EAAKgY,WAA6B,IAAhBnb,EAAKrH,OAAe,GAAMwK,EAAKxF,OAAY,MACrD,IAAA4T,EAAApO,EAAA9F,GAAAkU,KACRpO,EAAKkY,UAAY9J,GAAQA,EAAO,EAAIA,EAAO,EAE3CpO,EAAKmY,mBACLnY,EAAKiY,QAAS,EACdjY,EAAKW,oBAITkX,EAAA9iB,UAAAqjB,UAAA,SAAUphB,GACRnC,KAAK4O,SAASzM,GACdnC,KAAK8L,gBACL9L,KAAKwjB,aAAarhB,IAGpB6gB,EAAA9iB,UAAAujB,UAAA,eACQC,EAAY1jB,KAAKiiB,KAAK9Q,QAAM,SAAC2B,GAAK,OAAAA,EAAEvK,WAC1CvI,KAAKsjB,mBAAmB1U,SAAS8U,EAAUtb,KAAG,SAACC,GAAQ,OAAAA,EAAKlG,UAC5DnC,KAAKwjB,aAAaE,IAGpBV,EAAA9iB,UAAAyjB,kBAAA,SAAkBlW,GAChBzN,KAAKiiB,KAAKva,SAAO,SAACW,GAAQ,OAACA,EAAKE,SAA0C,IAAhCkF,EAAO7G,QAAQyB,EAAKlG,UAC9DnC,KAAKyjB,aAGPT,EAAA9iB,UAAA0jB,aAAA,WAAA,IAAAzY,EAAAnL,KACEA,KAAKiiB,KAAKva,SAAO,SAACW,GAAQ,OAACA,EAAKE,QAAU4C,EAAK8X,cAC/CjjB,KAAKyjB,aAGPT,EAAA9iB,UAAAojB,iBAAA,WAWE,OAVI,KAAKrB,KAAK4B,OAAK,SAACxb,GAAQ,OAAiB,IAAjBA,EAAKE,YAC/B,KAAK0a,YAAa,EAClB,KAAKC,eAAgB,GACZ,KAAKjB,KAAK4B,OAAK,SAACxb,GAAQ,OAAiB,IAAjBA,EAAKE,YACtC,KAAK0a,YAAa,EAClB,KAAKC,eAAgB,GAErB,KAAKA,eAAgB,EAEvB,KAAKpX,gBACL,MAGMkX,EAAA9iB,UAAAsjB,aAAR,SAAqB5X,GACf5L,KAAKqF,GAAGkQ,QAAQvV,KAAKqF,GAAGkQ,OAAO3J,wBAnEtCiP,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,cACVE,SAAA,ktEACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAiEnC+G,GA/DoC3D,uBCTpC,SAAAyE,mDAayE,OAAvCjW,EAAAA,EAAAA,uBAbjCgN,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,YACVE,SAAU,mUAQVW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAEsC6H,GAAvCzE,mBCRlC,SAAA0E,IAAA,IAAA5Y,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAQUmL,EAAA6Y,WAAY,EAEpB7Y,EAAA8Y,aAAqC,OA4FvC,OAhGgCpW,EAAAA,EAAAA,GAQ9BrO,OAAAgC,eAAYuiB,EAAA7jB,UAAA,YAAS,KAArB,WACE,OAAOF,KAAK8e,SAASoF,IAAmBC,EAAAA,gDAG1CJ,EAAA7jB,UAAAuZ,SAAA,WAEQ,IAAAmG,EAAA5f,KAAAqF,GAAEZ,EAAAmb,EAAAnb,KAAMmT,EAAAgI,EAAAhI,IAAKwM,EAAAxE,EAAAwE,cAAejgB,EAAAyb,EAAAzb,OAAQkgB,EAAAzE,EAAAyE,WAAYC,EAAA1E,EAAA0E,UAMtD,GALAtkB,KAAKyE,KAAOA,GAAQ,OACpBzE,KAAKgkB,UAAmB,MAAPpM,EACb5X,KAAKgkB,YACPhkB,KAAKyE,KAAO,SAET2f,EAcHpkB,KAAKokB,cAAgBA,MAdH,KACZG,ExB+IZ,SAA0BC,GACxB,IAAKA,EAAK,OAAO,MACXvC,EAAOuC,EAAIC,gBAEjB,QAAe,MAARxC,IAAmBA,EAAKyC,kBAAqBzC,EAAK0C,gBwBnJhCC,CAAU5kB,KAAK6kB,WACpC,OAAQ7kB,KAAKyE,MACX,IAAK,OACHzE,KAAKokB,cAAgBG,EAAe,OAAS,OAC7C,MACF,IAAK,QACHvkB,KAAKokB,cAAgBG,EAAe,UAAY,UAChD,MACF,IAAK,OACHvkB,KAAKokB,cAAgBG,EAAe,UAAY,WAOtDvkB,KAAK8kB,YAAW,EAChB9kB,KAAKQ,EAAI,CACP6jB,WAAYpf,EAAOof,GAAY,GAE/BC,UAAWrf,EAAOqf,GAAW,KAIjCP,EAAA7jB,UAAA8P,MAAA,SAAM7N,GACJA,EAAQnC,KAAK+kB,OAAO5iB,GAChBnC,KAAKgkB,UACPhkB,KAAKikB,aAAwB,MAAT9hB,EAAgB,GAAK,CAACA,EAAOnC,KAAK+kB,OAAO/kB,KAAKglB,YAAY/c,WAE9EjI,KAAKikB,aAAe9hB,EAEtBnC,KAAK8L,iBAGPiY,EAAA7jB,UAAAyiB,QAAA,SAAQxgB,GAAR,IAAAgJ,EAAAnL,KACE,GAAa,MAATmC,EAGF,OAFAnC,KAAK4O,SAAS,WACd5O,KAAKilB,OAAO,UAIRrZ,EAAMjM,MAAMwI,QAAQhG,GAASA,EAAMiG,KAAG,SAAC9I,GAAK,OAAA6E,EAAO7E,EAAG6L,EAAK2Z,gBAAgB3gB,EAAOhC,EAAOnC,KAAK8kB,aAEhG9kB,KAAKgkB,WACPhkB,KAAKilB,OAAOrZ,EAAI,IAChB5L,KAAK4O,SAAShD,EAAI,KAElB5L,KAAK4O,SAAShD,IAIlBmY,EAAA7jB,UAAAglB,YAAA,SAAYzC,GACNziB,KAAKqF,GAAG8f,cAAcnlB,KAAKqF,GAAG8f,aAAa1C,IAGjDsB,EAAA7jB,UAAAklB,IAAA,SAAIjjB,GACEnC,KAAKqF,GAAGggB,MAAMrlB,KAAKqF,GAAGggB,KAAKljB,IAGjC3C,OAAAgC,eAAYuiB,EAAA7jB,UAAA,cAAW,KAAvB,WACE,OAAOF,KAAKgd,aAAmB,OAAY,WAAEhd,KAAKqF,GAAM,sCAGlD0e,EAAA7jB,UAAA+kB,OAAR,SAAe9iB,GACTnC,KAAKgkB,WACPhkB,KAAKglB,YAAYpW,SAASzM,GAAO,IAI7B4hB,EAAA7jB,UAAA6kB,OAAR,SAAe5iB,GAIb,OAHqB,iBAAVA,GAAwC,iBAAVA,IAAuBwM,OAAOxM,MACrEA,EAAQ,IAAImjB,MAAMnjB,IAEbA,uBApGV0Y,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,UACVE,SAAA,uhJACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAkGnC8H,GAhGgC1E,uBCNhC,SAAAkG,IAAA,IAAApa,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAQEmL,EAAA8W,KAAuB,GAEvB9W,EAAA6J,SAAU,IAwDZ,OA5DmCnH,EAAAA,EAAAA,GAMjC0X,EAAArlB,UAAAuZ,SAAA,WAAA,IAAAtO,EAAAnL,KACQ4f,EAAA5f,KAAAqF,GAAEmgB,EAAA5F,EAAA4F,UAAWC,EAAA7F,EAAA6F,gBAAiBtN,EAAAyH,EAAAzH,UAAWuN,EAAA9F,EAAA8F,OAAQC,EAAA/F,EAAA+F,SACvD3lB,KAAKQ,EAAI,CACPglB,UAAWA,GAAS,SAAKnd,GAAQ,OAAAA,EAAKC,OACtCmd,gBAAiBA,GAAmB,iBACpCtN,UAAWA,GAAa,SACxBuN,OAAQA,GAAU,IAClBC,cAA8B,IAAbA,GAAkC3lB,KAAKqF,GAAGsgB,UAGvD,IAAAC,EAAA5lB,KAAA2F,OAAEkgB,EAAAD,EAAAC,QAASC,EAAAF,EAAAE,QACXC,OAAyB,IAAZF,EAA0BA,GAAW,EAClDtE,OAAyB,IAAZuE,EAA0BA,GAAW,EAEnD9lB,KAAKqF,GAAGmG,YAAuB,IAATua,IAAuB,IAATxE,IACvCvhB,KAAKqF,GAAGmG,UAAS,eACTwa,EAAQ7a,EAAK8a,aAAaC,cAAcvlB,OAC9C,OAAa,IAATolB,GAAcC,EAAQD,EACjB,CAAC,CAAEza,QAAS,UAAWW,QAAS,QAAQ8Z,EAAG,QAEvC,IAATxE,GAAcyE,EAAQzE,EACjB,CAAC,CAAEjW,QAAS,UAAWW,QAAS,QAAQsV,EAAG,OAE7C,QAKbgE,EAAArlB,UAAA8P,MAAA,SAAMpG,GAAN,IAAAuB,EAAAnL,KACE2I,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAI,MAAMsG,WAAS,SAAC3D,GAC5CmD,EAAK8W,KAAOja,EACZmD,EAAKW,oBAITyZ,EAAArlB,UAAAimB,QAAA,SAAQ1X,GACFzO,KAAKqF,GAAG+gB,QAAQpmB,KAAKqF,GAAG+gB,OAAO3X,IAGrC8W,EAAArlB,UAAAmmB,QAAA,SAAQnF,GAAR,IAAA/V,EAAAnL,KACkC,mBAArBA,KAAKqF,GAAGid,WAEnBtiB,KAAKgV,SAAU,EACfhV,KAAKqF,GACFid,SAASpB,GACTpY,KACCwd,EAAAA,KAAG,WAAO,OAACnb,EAAK6J,SAAU,KAC1B5M,EAAAA,KAAG,SAACwD,GAAO,OAAA7D,EAAQ6D,EAAK,KAAMT,EAAKxF,OAAe,cAEnDgG,WAAS,SAACC,GACTT,EAAK8W,KAAOrW,EACZT,EAAKW,eAAc,4BA/D1B+O,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,aACVE,SAAA,+iDACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,+CAGhCkB,EAAAA,UAASvZ,KAAA,CAAC,WAAY,CAAE0Z,QAAQ,OA2DnCiI,GA5DmClG,uBCXnC,SAAAkH,IAAA,IAAApb,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAUEmL,EAAAqb,UAAS,SAAuCrkB,GAAS,OAAAA,GACzDgJ,EAAAsb,OAAM,SAAuCtkB,GAAS,OAAAA,KAiCxD,OAtCkC0L,EAAAA,EAAAA,GAOhC0Y,EAAArmB,UAAAuZ,SAAA,WACQ,IAAAmG,EAAA5f,KAAA2F,OAAEkgB,EAAAjG,EAAAiG,QAASa,EAAA9G,EAAA8G,iBAAkBZ,EAAAlG,EAAAkG,QAASa,EAAA/G,EAAA+G,iBAAkBC,EAAAhH,EAAAgH,WAAY/hB,EAAA+a,EAAA/a,UACnD,IAAZghB,IACT7lB,KAAK+lB,IAAMW,EAAmBb,EAAU,EAAIA,QAEvB,IAAZC,IACT9lB,KAAKuhB,IAAMoF,EAAmBb,EAAU,EAAIA,GAE9C9lB,KAAK6mB,KAAOD,GAAc,EACb,YAAT/hB,IACF7E,KAAK+lB,IAAMzE,KAAKwF,MAAM9mB,KAAK+lB,KAC3B/lB,KAAKuhB,IAAMD,KAAKwF,MAAM9mB,KAAKuhB,KAC3BvhB,KAAK6mB,KAAOvF,KAAKwF,MAAM9mB,KAAK6mB,WAGxBxhB,EAAKrF,KAAKqF,GACC,MAAbA,EAAGqgB,SACLrgB,EAAGmhB,UAAS,SAAGrkB,GAAS,OAAU,MAATA,EAAgB,GAAQkD,EAAGqgB,OAAM,IAAIvjB,GAC9DkD,EAAGohB,OAAM,SAAGtkB,GAAS,OAAAA,EAAMqE,QAAWnB,EAAGqgB,OAAM,IAAK,MAEvC,MAAXrgB,EAAG2Y,OACL3Y,EAAGmhB,UAAS,SAAGrkB,GAAS,OAAU,MAATA,EAAgB,GAAQA,EAAK,IAAIkD,EAAG2Y,MAC7D3Y,EAAGohB,OAAM,SAAGtkB,GAAS,OAAAA,EAAMqE,QAAQ,IAAInB,EAAG2Y,KAAQ,MAEhD3Y,EAAGmhB,YAAWxmB,KAAKwmB,UAAYnhB,EAAGmhB,WAClCnhB,EAAGohB,SAAQzmB,KAAKymB,OAASphB,EAAGohB,SAGlCF,EAAArmB,UAAAqjB,UAAA,SAAUwD,GACR/mB,KAAK4O,SAA8B,YAArB5O,KAAK2F,OAAOd,KAAqByc,KAAK0F,MAAMD,GAAOA,wBA1CpElM,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,YACVE,SAAA,4sBACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAwCnCsK,GAtCkClH,uBCJlC,SAAA4H,IAAA,IAAA9b,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAQEmL,EAAAnD,KAAkB,KAuBpB,OAzBkC6F,EAAAA,EAAAA,GAKhCoZ,EAAA/mB,UAAAuZ,SAAA,mBACUuD,EAAFhd,KAAEgd,aAAc3X,EAAhBrF,KAAgBqF,GACdgU,EAAAhU,EAAAgU,KAAM6N,EAAA7hB,EAAA6hB,UACTlK,EAAa1O,UAAc0O,EAAa9T,kBAAkBqF,KAAgC,IAAd2Y,IAC/ElnB,KAAKyR,MAAQzR,KAAK2F,OAAY,OAEhC3F,KAAKqZ,KAAI,MACHrR,EAAkB,OACxB,IAAkB,IAAAmf,EAAA9gB,EAAA2W,EAAaoK,cAAYC,EAAAF,EAAAjlB,QAAAmlB,EAAAjlB,KAAAilB,EAAAF,EAAAjlB,OAAE,CAAxC,IAAMjB,EAAGomB,EAAAllB,MACN8I,EAAW+R,EAAuB,WAAE/b,GACpCoH,EAAO,CACX4C,SAAQA,EACRoO,KAAMpO,EAAS5F,GAAGgU,MAAQA,GAAQ,GAClC7B,eAAgBvM,EAAS5F,GAAGmS,eAC5B8P,MAA6B,IAAvBrc,EAAS5F,GAAGyS,QAEpB9P,EAAKxF,KAAK6F,qGAEZrI,KAAKgI,KAAOA,uBA7Bf6S,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,YACVE,SAAA,wgCACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SA2BnCgL,GAzBkC1H,uBCLlC,SAAAgI,IAAA,IAAApc,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAOEmL,EAAA8W,KAAuB,KAezB,OAhBiCpU,EAAAA,EAAAA,GAI/B0Z,EAAArnB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACEA,KAAKwnB,UAAiD,aAApCxnB,KAAKqF,GAAGmiB,WAAa,WACvC7e,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAIlD,GAAOwJ,WAAS,SAAC3D,GAC7CmD,EAAK8W,KAAOja,EACZmD,EAAKW,oBAITyb,EAAArnB,UAAAqjB,UAAA,SAAUphB,GACRnC,KAAK4O,SAASzM,GACVnC,KAAKqF,GAAGkQ,QAAQvV,KAAKqF,GAAGkQ,OAAOpT,wBApBtC0Y,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,WACVE,SAAA,ijCACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAkBnCsL,GAhBiClI,uBCRjC,SAAAoI,IAAA,IAAAtc,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAWEmL,EAAAuc,SAAU,IAcZ,OAnBgC7Z,EAAAA,EAAAA,GAO9BrO,OAAAgC,eAAIimB,EAAAvnB,UAAA,OAAI,KAAR,WACE,OAAQF,KAAKqF,GAAO,KAAYmB,QAAQ,YAAaxG,KAAKgd,aAAa7a,wCAGzEslB,EAAAvnB,UAAAuZ,SAAA,WACQ,IAAE9T,EAAF3F,KAAE2F,OAAQN,EAAVrF,KAAUqF,GAChBrF,KAAKgmB,MAAQrgB,EAAOmgB,SAAW,EAC/B9lB,KAAK2nB,UAA2C,MAA9BhiB,EAAOihB,YAAc,IACvC5mB,KAAKqkB,WAAapf,EAAOI,EAAGgf,YAAY,GACxCrkB,KAAK4nB,UAAY3iB,EAAOI,EAAGuiB,WAAW,GACtC5nB,KAAK0nB,UAAYriB,EAAG2S,0BAvBvB6C,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,UACVE,SAAA,skBACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAqBnCwL,GAnBgCpI,uBCJhC,SAAAwI,IAAA,IAAA1c,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAUEmL,EAAA2c,UAAW,IA8Eb,OAlFkCja,EAAAA,EAAAA,GAMxBga,EAAA3nB,UAAA6nB,WAAR,SAAmB/f,GACjBhI,KAAK8nB,UAAY9f,GAAQ,IAAImJ,QAAM,SAAC2B,GAAK,OAAY,IAAZA,EAAEkV,SAAgBrnB,OAAS,GAGtEknB,EAAA3nB,UAAAuZ,SAAA,WACQ,IAAAmG,EAAA5f,KAAAqF,GACJ4iB,EAAArI,EAAAqI,qBACA5D,EAAAzE,EAAAyE,WACAuD,EAAAhI,EAAAgI,UACAM,EAAAtI,EAAAsI,kBACAC,EAAAvI,EAAAuI,yBACAC,EAAAxI,EAAAwI,aACAC,EAAAzI,EAAAyI,iBACA5jB,EAAAmb,EAAAnb,KACAghB,EAAA7F,EAAA6F,gBACA6C,EAAA1I,EAAA0I,WACAC,EAAA3I,EAAA2I,gBACAC,EAAA5I,EAAA4I,YACAC,EAAA7I,EAAA6I,YAEFzoB,KAAKQ,EAAI,CACPynB,qBAAsBhjB,EAAOgjB,GAAsB,GACnD5D,WAAUA,EACVuD,UAAW3iB,EAAO2iB,GAAW,GAC7BM,kBAAmBA,GAAqB,KACxCC,yBAA0BljB,EAAOkjB,GAA0B,GAC3DC,aAAcnjB,EAAOmjB,GAAc,GACnCC,iBAAkBA,GAAoBK,EAAAA,EACtCjkB,KAAMA,GAAQ,UACdghB,gBAAeA,EACf6C,WAAYrjB,EAAOqjB,GAAY,GAC/BC,gBAAiBA,GAAmB,GACpCC,YAAaA,QAAezb,EAC5B0b,YAAaA,GAAW,SAAME,EAASC,GAAY,OAAAD,IAAOC,KAI9Df,EAAA3nB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACE2I,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAIlD,GAAOwJ,WAAS,SAAC3D,GAC7CmD,EAAKvB,OAASzH,EACdgJ,EAAK8W,KAAOja,EACZmD,EAAK4c,WAAW/f,GAChBmD,EAAKW,oBAIT+b,EAAA3nB,UAAAqV,OAAA,SAAO9H,GACDzN,KAAKqF,GAAGkQ,QACVvV,KAAKqF,GAAGkQ,OAAO9H,GAEjBzN,KAAK4O,SAAmB,MAAVnB,OAAiBV,EAAYU,IAG7Coa,EAAA3nB,UAAA2oB,WAAA,SAAWpG,GACLziB,KAAKqF,GAAGwjB,YACV7oB,KAAKqF,GAAGwjB,WAAWpG,IAIvBoF,EAAA3nB,UAAA4oB,aAAA,SAAa9Q,GAAb,IAAA7M,EAAAnL,KACMA,KAAKqF,GAAG0jB,SACV/oB,KAAKqF,GAAG0jB,SAAS/Q,GAAM0C,MAAI,SAAE1S,GAC3BmD,EAAK8W,KAAOja,EACZmD,EAAK4c,WAAW/f,GAChBmD,EAAKW,mBAIT9L,KAAK8L,iBAGP+b,EAAA3nB,UAAA8oB,eAAA,WACMhpB,KAAKqF,GAAG2jB,gBACVhpB,KAAKqF,GAAG2jB,sCArFbnO,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,YACVE,SAAA,k0DACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAoFnC4L,GAlFkCxI,uBCRlC,SAAA4J,IAAA,IAAA9d,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAwBEmL,EAAA+d,WAAU,SAAI/mB,GACJ,IAAAqkB,EAAArb,EAAA9F,GAAAmhB,UACR,OAAIA,EAAkBA,EAAUrkB,GACzBA,KAOX,OA5BkC0L,EAAAA,EAAAA,GAOhCob,EAAA/oB,UAAAuZ,SAAA,WACQ,IAAAmG,EAAA5f,KAAA2F,OAAEkgB,EAAAjG,EAAAiG,QAASC,EAAAlG,EAAAkG,QAASc,EAAAhH,EAAAgH,WAC1B5mB,KAAK+lB,IAAMF,GAAW,EACtB7lB,KAAKuhB,IAAMuE,GAAW,IACtB9lB,KAAK6mB,KAAOD,GAAc,EAEpB,IAAAhB,EAAA5lB,KAAAqF,GAAE8jB,EAAAvD,EAAAuD,MAAOC,EAAAxD,EAAAwD,SACfppB,KAAKmpB,MAAQA,GAAS,KACtBnpB,KAAKopB,cAA+B,IAAbA,GAAkCA,GAS3DH,EAAA/oB,UAAAmpB,aAAA,SAAalnB,GACH,IAAAmnB,EAAAtpB,KAAAqF,GAAAikB,YACR,GAAIA,EAAa,OAAOA,EAAYnnB,wBAhCvC0Y,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,YACVE,SAAA,gtBACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SA8BnCgN,GA5BkC5J,uBCNlC,SAAAkK,mDAqBA,OAfkC1b,EAAAA,EAAAA,GAGhC0b,EAAArpB,UAAAuZ,SAAA,WACQ,IAAAmG,EAAA5f,KAAAqF,GAAEmkB,EAAA5J,EAAA4J,WAAYC,EAAA7J,EAAA6J,eAAgBC,EAAA9J,EAAA8J,YAAaC,EAAA/J,EAAA+J,gBAAiBjE,EAAA9F,EAAA8F,OAAQkE,EAAAhK,EAAAgK,WAAYC,EAAAjK,EAAAiK,OAAQC,EAAAlK,EAAAkK,WAC9F9pB,KAAK6E,KAAU2kB,GAAcE,GAAeD,GAAkBE,GAAmBjE,GAAUkE,GAAcC,GAAUC,EAC/G,QACA,IAGNP,EAAArpB,UAAA8P,MAAA,SAAM7N,GACCA,GAAgC,UAAvBnC,KAAK2F,OAAOxB,QACxBnE,KAAK4O,SAAS,gCAlBnBiM,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,YACVE,SAAA,gyCACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAiBnCsN,GAfkClK,uBCJlC,SAAA0K,mDAmCA,OA7B+Blc,EAAAA,EAAAA,GAG7Bkc,EAAA7pB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACE2I,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAIlD,GAAOwJ,WAAS,SAAC3D,GAC7CmD,EAAK8W,KAAOja,EACZmD,EAAKW,oBAITie,EAAA7pB,UAAA8pB,SAAA,SAAS3hB,GACPA,EAAKE,SAAWF,EAAKE,QACrBvI,KAAKwgB,cACDxgB,KAAKqF,GAAG4kB,eACVjqB,KAAKqF,GAAG4kB,cAAc5hB,EAAKE,UAI/BwhB,EAAA7pB,UAAAgqB,YAAA,WACMlqB,KAAKqF,GAAG8kB,YAAYnqB,KAAKqF,GAAG8kB,cAGlCJ,EAAA7pB,UAAAkqB,OAAA,SAAO9nB,GACDtC,KAAKqF,GAAGglB,SAASrqB,KAAKqF,GAAGglB,QAAQ/nB,IAG/BynB,EAAA7pB,UAAAsgB,YAAR,WACExgB,KAAKgd,aAAapO,SAAS5O,KAAKiiB,KAAK9Q,QAAM,SAAC2B,GAAK,OAAAA,EAAEvK,WAASH,KAAG,SAAC5H,GAAK,OAAAA,EAAE2B,UAAQ,wBAjClF0Y,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,SACVE,SAAA,4eACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SA+BnC8N,GA7B+B1K,uBCT/B,SAAAiL,mDAUA,OAJgCzc,EAAAA,EAAAA,GAC9Byc,EAAApqB,UAAAuZ,SAAA,WACEzZ,KAAKqF,GAAGgG,WAAY,uBARvBwP,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,UACVE,SAAA,kQACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAMnCqO,GAJgCjL,mBCLhC,SAAAkL,IAAA,IAAApf,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAOEmL,EAAAwa,UAAmC,IAQrC,OAToC9X,EAAAA,EAAAA,GAGlC0c,EAAArqB,UAAAuZ,SAAA,WACU,IAAAkM,EAAA3lB,KAAAqF,GAAAsgB,SACQ,MAAZA,IACF3lB,KAAK2lB,SAAWA,wBAZrB9K,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,cACVE,SAAA,ymBACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SAWnCsO,GAToClL,uBCJpC,SAAAmL,IAAA,IAAArf,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAQEmL,EAAA8Y,aAA4B,OAsD9B,OAxDgCpW,EAAAA,EAAAA,GAK9B2c,EAAAtqB,UAAAuZ,SAAA,eACQpU,EAAKrF,KAAKqF,GAEhBrF,KAAK8kB,YAAczf,EAAGlB,WAChBsmB,EAAM,CACVrG,cAAe/e,EAAG+e,eAAiB,WACnCsG,WAAYzlB,EAAOI,EAAGqlB,YAAY,GAClCxI,UAAW7c,EAAG6c,WAAa,KAC3ByI,iBAAkBtlB,EAAGslB,kBAAoB,IAAIrF,KAC7CsF,oBAAqB3lB,EAAOI,EAAGulB,qBAAqB,GACpDC,WAAY5lB,EAAOI,EAAGwlB,YAAY,GAClCC,SAAUzlB,EAAGylB,UAAY,EACzBC,WAAY1lB,EAAG2lB,cAAgB,EAC/BC,WAAY5lB,EAAG4lB,YAAc,GAE3BR,EAAII,aAAexlB,EAAG+e,gBACxBqG,EAAIrG,cAAgB,aAEtBpkB,KAAKQ,EAAIiqB,GAGXD,EAAAtqB,UAAA8P,MAAA,SAAM7N,GACJ,GAAIA,aAAiBmjB,KAGnB,OAFAtlB,KAAKikB,aAAe9hB,OACpBnC,KAAK8L,oBAGHof,EAAa,MAAT/oB,GAAiBA,EAAMgpB,WAAWxqB,OAAS,IAAI2kB,KAAKnjB,GAAS,KAG5D,MAAL+oB,GAA8B,iBAAjBA,EAAEC,aACbhpB,EAAMgpB,WAAWjlB,MAAM,KAAKvF,QAAU,IACxCwB,GAAS,OAEX+oB,EAAI,IAAI5F,KAAK,YAAcnjB,IAE7BnC,KAAKikB,aAAeiH,EACpBlrB,KAAK8L,iBAGP0e,EAAAtqB,UAAAyiB,QAAA,SAAQxgB,GACO,MAATA,GAIqB,IAArBnC,KAAKqF,GAAG+lB,SAIZprB,KAAK4O,SAASzK,EAAOhC,EAAOnC,KAAK8kB,cAH/B9kB,KAAK4O,SAAS0W,KAAK+F,IAAI,KAAM,EAAG,EAAGlpB,EAAMmpB,WAAYnpB,EAAMopB,aAAcppB,EAAMqpB,eAJ/ExrB,KAAK4O,SAAS,2BArDnBiM,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,UACVE,SAAA,gmCACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SA0DnCuO,GAxDgCnL,uBCJhC,SAAAoM,IAAA,IAAAtgB,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAOEmL,EAAAnD,KAAuB,GAEfmD,EAAAugB,MAAwB,GAkChCvgB,EAAAwgB,SAAQ,SAAIC,GACV,OAAOzgB,EAAK9F,GAAGwmB,QAAU1gB,EAAK9F,GAAGwmB,QAAQD,GAAO7iB,EAAAA,GAAG6iB,EAAI5jB,SAsB3D,OA5DoC6F,EAAAA,EAAAA,GAKlC4d,EAAAvrB,UAAAuZ,SAAA,WACQ,IAAAmG,EAAA5f,KAAAqF,GAAEymB,EAAAlM,EAAAkM,OAAQC,EAAAnM,EAAAmM,WAAYC,EAAApM,EAAAoM,SAAUC,EAAArM,EAAAqM,UACtCjsB,KAAKQ,EAAI,CACPsrB,OAAQA,GAAU,CAAC,GAAI,IACvBC,WAAYA,GAAc,CAAC,GAAI,IAC/BC,SAAUA,GAAY,IACtBC,UAAWA,GAAa,MAI5BR,EAAAvrB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACE2I,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAI,MAAMsG,WAAS,SAAC3D,OACxCC,EAAW9F,EACVxC,MAAMwI,QAAQF,KACjBA,EAAW,CAACA,IAEdD,EAAKN,SAAO,SAAEW,IACP,EAAoBzB,QAAQyB,EAAKlG,SACpCkG,EAAK6jB,UAAY,YAGrB/gB,EAAKnD,KAAOA,EACZmD,EAAKugB,MAAQ1jB,EAAKmJ,QAAM,SAAC2B,GAAK,MAAgB,UAAhBA,EAAEoZ,aAChC/gB,EAAKghB,SACLhhB,EAAKW,oBAID2f,EAAAvrB,UAAAisB,OAAR,WACEnsB,KAAKgd,aAAapO,SAAS5O,KAAK0rB,MAAMtjB,KAAG,SAAC5H,GAAK,OAAAA,EAAE2B,UAAQ,IAO3DspB,EAAAvrB,UAAAyiB,QAAA,SAAQlU,SACa,UAAfA,EAAQ2d,GACVpsB,KAAK0rB,OAAQ9L,EAAA5f,KAAK0rB,OAAM/oB,OAAM9B,MAAA+e,EAAAld,EAAI+L,EAAQzG,OAE1ChI,KAAK0rB,MAAQ1rB,KAAK0rB,MAAMva,QAAM,SAAE2B,GAAW,OAA6B,IAA7BrE,EAAQzG,KAAKpB,QAAQkM,MAE9D9S,KAAKqF,GAAGkQ,QAAQvV,KAAKqF,GAAGkQ,OAAO9G,GACnCzO,KAAKmsB,UAGPV,EAAAvrB,UAAAmsB,cAAA,SAAc5d,GACRzO,KAAKqF,GAAGyjB,cAAc9oB,KAAKqF,GAAGyjB,aAAara,GAC/CzO,KAAK8L,iBAGP2f,EAAAvrB,UAAAosB,cAAA,SAAc7d,GACRzO,KAAKqF,GAAGknB,cAAcvsB,KAAKqF,GAAGknB,aAAa9d,GAC/CzO,KAAK8L,qCAhER+O,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,cACVE,SAAA,04BACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SA8DnCwP,GA5DoCpM,uBCPpC,SAAAmN,IAAA,IAAArhB,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAQEmL,EAAA8W,KAAuB,KAwCzB,OA1CsCpU,EAAAA,EAAAA,GAIpC2e,EAAAtsB,UAAAuZ,SAAA,WACU,IAAApU,EAAArF,KAAAqF,GACRrF,KAAKQ,EAAI,CACP6jB,WAAYhf,EAAGgf,WACfiE,WAAYrjB,EAAOI,EAAGijB,YAAY,GAClCH,yBAA0BljB,EAAOI,EAAG8iB,0BAA0B,GAC9DsE,SAAUxnB,EAAOI,EAAGonB,UAAU,GAC9BC,UAAWznB,EAAOI,EAAGqnB,WAAW,GAChCC,WAAY1nB,EAAOI,EAAGsnB,YAAY,GAClCC,SAAU3nB,EAAOI,EAAGunB,UAAU,GAC9B/jB,UAAsC,mBAApBxD,EAAGwnB,aACrBC,iBAAkB7nB,EAAOI,EAAGynB,kBAAkB,GAC9CC,oBAAqB1nB,EAAG0nB,qBAAuB,GAC/CC,YAAa3nB,EAAG2nB,aAAW,SAAMzK,GAAc,OAAAA,EAAK9Q,SAIxD+a,EAAAtsB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACE2I,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAIlD,GAAOwJ,WAAS,SAAC3D,GAC7CmD,EAAK8W,KAAOja,EACZmD,EAAKW,oBAIT0gB,EAAAtsB,UAAAqV,OAAA,SAAOpT,GACDnC,KAAKqF,GAAGkQ,QAAQvV,KAAKqF,GAAGkQ,OAAOpT,GACnCnC,KAAK4O,SAASzM,IAGhBqqB,EAAAtsB,UAAA2sB,aAAA,SAAavqB,GAAb,IAAA6I,EAAAnL,KACUqF,EAAArF,KAAAqF,GACuB,mBAApBA,EAAGwnB,cACdxnB,EAAGwnB,aAAavqB,GAAGqJ,WAAS,SAACC,GAC3BtJ,EAAM,KAAE2qB,gBACR3qB,EAAM,KAAE4qB,YAAYthB,GACpBT,EAAKW,wCA7CV+O,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,iBACVE,SAAA,grCACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SA4CnCuQ,GA1CsCnN,uBCJtC,SAAA8N,IAAA,IAAAhiB,EAAA,OAAAyC,GAAAA,EAAA/M,MAAAb,KAAAU,YAAAV,YAQEmL,EAAAiiB,SAAyB,GACzBjiB,EAAAkiB,QAAU,GAuFVliB,EAAAmiB,aAAY,WAEV,OADAniB,EAAKoY,UAAUpY,EAAKiiB,WACb,GAGTjiB,EAAAoiB,cAAa,SAAIC,GACf,GAAIriB,EAAK9F,GAAGooB,QACVtiB,EAAK9F,GAAGooB,QAAQD,OADlB,KAIME,EAAOF,EAAKG,UAAYH,EAAKI,IAC9BF,GAGLviB,EAAK2T,SAASoF,IAAoB2J,EAAAA,gBAAgB1tB,OAAO,CACvD2tB,UAAW,aAAaJ,EAAI,yBAC5BK,SAAU,WAGhB,OA7GkClgB,EAAAA,EAAAA,GAKhCsf,EAAAjtB,UAAAuZ,SAAA,WACQ,IAAAmG,EAAA5f,KAAAqF,GACJR,EAAA+a,EAAA/a,KACAmT,EAAA4H,EAAA5H,KACAgW,EAAApO,EAAAoO,KACAC,EAAArO,EAAAqO,OACAC,EAAAtO,EAAAsO,OACAC,EAAAvO,EAAAuO,MACAhd,EAAAyO,EAAAzO,OACAid,EAAAxO,EAAAwO,SACAC,EAAAzO,EAAAyO,SACAC,EAAA1O,EAAA0O,SACA7B,EAAA7M,EAAA6M,SACA8B,EAAA3O,EAAA2O,KACAC,EAAA5O,EAAA4O,eACAC,EAAA7O,EAAA6O,gBACAC,EAAA9O,EAAA8O,UACAC,EAAA/O,EAAA+O,UACAC,EAAAhP,EAAAgP,aACAC,EAAAjP,EAAAiP,cACAC,EAAAlP,EAAAkP,UACAC,EAAAnP,EAAAmP,sBAEInjB,EAAW,CACf/G,KAAMA,GAAQ,SACdmT,KAAMA,GAAQ,OACdiW,OAAQA,GAAU,GAClBC,OAAQA,GAAU,GAClBY,UAAW7pB,EAAO6pB,GAAW,GAC7BC,sBAAuB9pB,EAAO8pB,GAAuB,GACrDZ,MAAgB,MAATA,EAAgB,GAAKA,EAC5Bhd,OAAkB,MAAVA,EAAiB,GAAKA,EAC9B2H,KAAkB,MAAZsV,EAAmB,GAAKA,EAC9BC,SAAUA,GAAY,GACtBC,SAAUA,GAAY,OACtB7B,SAAUxnB,EAAOwnB,GAAU,GAC3B8B,KAAMA,GAAQ,OACdC,eAAkC,MAAlBA,GAAgCA,EAChDC,gBAAiBxpB,EAAOwpB,GAAiB,GACzCC,WAAYA,GAAa,IAAIxoB,MAAM,KACnCyoB,WAAYA,GAAa,IAAIzoB,MAAM,KACnC0oB,aAAsC,mBAAjBA,EAA8BA,EAAe,KAClEC,cAAwC,mBAAlBA,EAA+BA,EAAgB,MAElD,iBAAjBjjB,EAAI0iB,WACNtuB,KAAKqtB,QAAU,QAEA,SAAbzhB,EAAI/G,OACN+G,EAAI0iB,SAAW,KACftuB,KAAKqtB,QAAU,OACfzhB,EAAIoM,KAAOA,GAAQ,gBACnBpM,EAAIoiB,KAAOA,GAAQ,2BAErBhuB,KAAKQ,EAAIoL,GAGXuhB,EAAAjtB,UAAAqV,OAAA,SAAO3R,GACD5D,KAAKqF,GAAGkQ,QAAQvV,KAAKqF,GAAGkQ,OAAO3R,GACjB,YAAdA,EAAKiB,MACT7E,KAAKujB,UAAU3f,EAAKwpB,WAGtBD,EAAAjtB,UAAA8P,MAAA,SAAM7N,GAAN,IAAAgJ,EAAAnL,KACUotB,EAAAptB,KAAAqF,GAAA+nB,UACPA,EAAWrkB,EAAAA,GAAGqkB,GAAYztB,MAAMwI,QAAQhG,GAAS4G,EAAAA,GAAG5G,GAASwG,GAAQ3I,KAAK2F,OAAQ3F,KAAKqF,GAAI,OAAOsG,WAAS,SAAC3D,GAC3GmD,EAAKiiB,SAAQ,EACbjiB,EAAKoY,UAAUpY,EAAKiiB,UACpBjiB,EAAKW,oBAIDqhB,EAAAjtB,UAAA8uB,UAAR,SAAkBxB,GAChB,OAAOyB,EAAAA,QAAQzB,EAAK0B,SAAUlvB,KAAKQ,EAAEkuB,UAAWlB,EAAK0B,WAG/C/B,EAAAjtB,UAAAqjB,UAAR,SAAkB6J,GAAlB,IAAAjiB,EAAAnL,KACEotB,EACGjc,QAAM,SAACqc,GAAQ,OAACA,EAAKI,OACrBlmB,SAAO,SAAC8lB,GACPA,EAAKI,IAAMqB,EAAAA,QAAQzB,EAAK0B,SAAU/jB,EAAK3K,EAAEmuB,kBAEvC/iB,EAAMwhB,EAASjc,QAAM,SAAC2B,GAAK,MAAa,SAAbA,EAAE2P,UAAmBra,KAAG,SAAColB,GAAQ,OAAAriB,EAAK6jB,UAAUxB,MACjFxtB,KAAK4O,UAA6B,IAApB5O,KAAKQ,EAAEisB,SAAoB7gB,EAAMA,EAAIiG,4BA7FtDgJ,EAAAA,UAASjX,KAAA,CAAC,CACTkX,SAAU,YACVE,SAAA,g6DACAW,qBAAqB,EACrBI,cAAeC,EAAAA,kBAAkBC,SA+GnCkR,GA7GkC9N,uBCUhC,SAAA8P,IAAA,IAAAhkB,EACEyC,EAAAhN,KAAAZ,OAAOA,YAEPmL,EAAKkI,SAAS,SAAU4T,IACxB9b,EAAKkI,SAAS,QAASmM,IAEvBrU,EAAKkI,SAAS,OAAQiX,IACtBnf,EAAKkI,SAAS,SAAUkW,IACxBpe,EAAKkI,SAAS,SAAUkT,IACxBpb,EAAKkI,SAAS,UAAWkT,IACzBpb,EAAKkI,SAAS,OAAQ0Q,IACtB5Y,EAAKkI,SAAS,OAAQmX,IACtBrf,EAAKkI,SAAS,QAASkU,IACvBpc,EAAKkI,SAAS,WAAY2P,IAC1B7X,EAAKkI,SAAS,UAAW0O,IACzB5W,EAAKkI,SAAS,WAAYkX,IAC1Bpf,EAAKkI,SAAS,SAAUwU,IACxB1c,EAAKkI,SAAS,cAAemZ,IAC7BrhB,EAAKkI,SAAS,MAAO0W,IACrB5e,EAAKkI,SAAS,SAAU8Z,IACxBhiB,EAAKkI,SAAS,WAAYoY,IAC1BtgB,EAAKkI,SAAS,SAAU4V,IACxB9d,EAAKkI,SAAS,OAAQoU,IACtBtc,EAAKkI,SAAS,eAAgB+M,IAC9BjV,EAAKkI,SAAS,WAAY2O,IAC1B7W,EAAKkI,SAAS,UAAWkS,IACzBpa,EAAKkI,SAAS,SAAUyQ,IAExB3Y,EAAKgI,WAAWoW,MAEpB,OA/BsC1b,EAAAA,EAAAA,GA+BtCshB,GA/BsClc,ICKhCmc,GAAS,CACbC,EAAAA,qBACAC,EAAAA,eACAC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,iBACAC,EAAAA,mBACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,oBACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,aACAC,EAAAA,eACAC,EAAAA,eACAC,EAAAA,eACAC,EAAAA,YACAC,EAAAA,mBACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,mBACAC,EAAAA,gBAUIC,GAAa,CAAC1c,GAAayI,GAAiB4B,GAAqBC,GAAqBlB,IA6BtFuT,GAAU,CACd7J,GACAzH,GACA+J,GACAhD,GACAxC,GACAyG,GACAjD,GACAvE,GACAjB,GACAwI,GACA1C,GACA2E,GACAzC,GACAoD,GACA1B,GACAxC,GACAxB,GACArH,GACA4B,GACAuD,GACAzB,GACAwG,IAKFyG,GAAA,WAAA,SAAAA,KAmBA,OAZSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACV9V,UAAW,CACT,CACEC,QAASlI,GACTke,SAAU7e,IAEZ,CAAE6I,QAASjI,GAAgBie,SAAU/B,2BAf5CgC,EAAAA,SAAQvtB,KAAA,CAAC,CACRwtB,QAAO1uB,EAAA,CAAG2uB,EAAAA,aAAcC,EAAAA,YAAaC,EAAAA,gBAAiBC,EAAAA,mBAAsBpC,IAC5EqC,aAAY/uB,EAAMmuB,GAAeC,IACjCY,gBAAehvB,EAAMouB,IACrBa,QAAOjvB,EAAMmuB,QAefE,EAnBA,4VCpH6B,CAC3Ba,eAAgB,SAChB9rB,KAAM,cACN+rB,gBAAiB,aACjBC,qBAAsB,YACtBC,MAAO,sBACPC,aAAc,8BACdpqB,KAAM,eACNzD,OAAQ,QACRU,KAAM,eACNyC,SAAU,MACV2qB,UAAW,iBACXC,UAAW,mBACXrM,QAAS,yBACTsM,cAAe,yBACfrM,QAAS,yBACTsM,cAAe,yBACf1S,SAAU,kBACV2S,SAAU,kBACVC,cAAe,mBACfC,cAAe,mBACf3L,WAAY,wBACZ4L,IAAK,qBACLC,MAAO,2BACPC,QAAS,UACTC,YAAa,iCACbC,OAAQ,QACRC,cAAe,0BACfC,gBAAiB,6BACjBC,OAAQ,oCACRC,MAAO,SACPC,SAAU,YACVC,uBAAwB,gCACxBC,uBAAwB,gCACxBC,GAAI","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' | null = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = {};\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat?: string = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat?: string = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat?: string = 'x';\n  /**\n   * æå® `format: 'email'` çé»è®¤Emailåç¼\n   */\n  uiEmailSuffixes?: string[] = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\n}\n","export const SF_SEQ = '/';\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { SF_SEQ } from './const';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\nimport { SF_SEQ } from '../const';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(valueCheck, visibilityCheck).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties![propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\nimport { SF_SEQ } from '../const';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}) {\n    const newProperty = this.formPropertyFactory.createProperty(this.schema.items!, this.ui.$items, formData, this) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>) {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) {\n      delete this._objErrors[path];\n    } else {\n      this._objErrors = {};\n    }\n  }\n\n  private updatePaths() {\n    (this.properties as FormProperty[]).forEach((p, idx) => {\n      p.path = [p.parent!.path, idx].join(SF_SEQ);\n    });\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = this.properties as FormProperty[];\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updatePaths();\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() { }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup, FormProperty } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      this.properties![propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && this.properties![propertyId]) {\n        (this.properties![propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      (this.properties![propertyId] as FormProperty).resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { SF_SEQ } from '../const';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private options: DelonFormConfig) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: any;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv({\n      ...options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport { ACLService } from '@delon/acl';\nimport { DelonLocaleService, LocaleData, ALAIN_I18N_TOKEN, AlainI18NService } from '@delon/theme';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { Subject, Observable, merge } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun, SFOptionalHelp } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema, FORMATMAPS } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, options: DelonFormConfig) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** è¡¨åé»è®¤å¼ */\n  @Input() formData: {};\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨ `spanLabelFixed` åºå®æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input() autocomplete: 'on' | 'off';\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input() @InputBoolean() firstVisual = true;\n  /** æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load statusï¼when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  /** æ°æ®åæ´æ¶åè° */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** éç½®è¡¨åæ¶åè° */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å±æ§\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å½åå¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è®¾ç½®æä¸ªè¡¨ååç´ å±æ§å¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   * @param value æ°å¼\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n  ) {\n    this.liveValidate = options.liveValidate as boolean;\n    this.firstVisual = options.firstVisual as boolean;\n    this.autocomplete = options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && FORMATMAPS[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          uiRes[uiKey].$items = uiRes[uiKey].$items || {};\n          inFn(property.items, property.items, (uiSchema[uiKey] || {}).$items || {}, ui, uiRes[uiKey].$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render!.grid) {\n        this._btn.render!.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render!.spanLabelFixed == null) {\n        this._btn.render!.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (!this._btn.render!.class && (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)) {\n        this._btn.render!.class = 'text-center';\n      }\n    } else {\n      this._btn.render!.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn(property.properties![key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...this.formData, ...value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: `\n    <ng-template #target></ng-template>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem, SFOptionalHelp } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\nimport { SF_SEQ } from '../../const';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { LocaleData } from '@delon/theme';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem, SFOptionalHelp } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n}\n\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue) {}\n}\n\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.disabled || (this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems);\n  }\n\n  get showRemove() {\n    return !this.disabled && this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = addTitle || this.l.addText;\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add({});\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { of, Observable } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> implements AfterViewInit {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n    if (this.ui.change) this.ui.change(item);\n  }\n\n  ngAfterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFCascaderWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: CascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || 'æ¸é¤';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: CascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null) {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: CascaderOption[]) {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear() {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool, isDateFns } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private valueFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  private get zorroI18n(): NzI18nService {\n    return this.injector.get<NzI18nService>(NzI18nService);\n  }\n\n  ngOnInit(): void {\n    // tslint:disable-next-line: no-shadowed-variable\n    const { mode, end, displayFormat, format, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!displayFormat) {\n      const usingDateFns = isDateFns(this.zorroI18n);\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = usingDateFns ? `YYYY` : `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = usingDateFns ? `YYYY-MM` : `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = usingDateFns ? `YYYY-WW` : `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.valueFormat = format!;\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n  }\n\n  _change(value: Date | Date[] | null) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value) ? value.map(d => format(d, this.valueFormat)) : format(value, this.valueFormat);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent!.properties![this.ui.end!];\n  }\n\n  private setEnd(value: string | null) {\n    if (this.flatRange) {\n      this.endProperty.setValue(value, true);\n    }\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NzMentionComponent, MentionOnSearchTypes } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = formProperty.properties![key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  _value: any;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      allowClear,\n      autoFocus,\n      dropdownClassName,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      notFoundContent,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      allowClear,\n      autoFocus: toBool(autoFocus, false),\n      dropdownClassName: dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      notFoundContent,\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Marks, SliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: Marks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: SliderValue) {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(this.data.filter(w => w.checked).map(i => i.value), false);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.valueFormat = ui.format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat));\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { of, Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || 'é¡¹',\n      itemsUnit: itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { UploadChangeParam, UploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || 'ç¹å»ä¸ä¼ ',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      res.hint = hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n    this.i = res;\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this._setValue(this.fileList);\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `å¸å°æ¨¡å¼åºé`,\n  $ref: `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems: `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties: `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf: `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies: `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum: `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format: `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type: `ç±»ååºå½æ¯ {type}`,\n  required: `å¿å¡«é¡¹`,\n  maxLength: `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength: `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum: `å¿é¡» {comparison}{limit}`,\n  formatMinimum: `å¿é¡» {comparison}{limit}`,\n  maximum: `å¿é¡» {comparison}{limit}`,\n  formatMaximum: `å¿é¡» {comparison}{limit}`,\n  maxItems: `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems: `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties: `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties: `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf: `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not: `ä¸åºå½å¹é \"not\" schema`,\n  oneOf: `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern: `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems: `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom: `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames: `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired: `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch: `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const: `åºå½ç­äºå¸¸é`,\n  contains: `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if: `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup,\n  ) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}