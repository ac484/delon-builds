{"version":3,"sources":["../../../../packages/form/src/config.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/form/src/utils.ts","../../../../packages/form/src/const.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/text/text.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/tree-select/tree-select.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts","../../../../packages/form/src/errors.ts"],"names":["SF_DEFAULT_CONFIG","formatMap","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","call","next","value","done","TypeError","__read","n","e","ar","push","error","__spread","concat","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","apply","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","assign","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","orderProperties","order","isArray","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","prop","rest","restIndex","lastIndexOf","complete","splice","getEnum","list","formData","readOnly","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","pathValue","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","options","onlySelf","emitValidator","emitValueEvent","updatePath","updateValue","_updateValue","valueChanges","_runValidation","searchProperty","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","_b","_a","sfComp","_inited","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","_propertiesId","createProperties","orderedProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","cleanValue","addProperty","newProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","showRequired","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","Injectable","AjvSchemaValidatorFactory","document","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","SchemaValidatorFactory","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","useFactory","ComponentFactoryResolver","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","platform","unsubscribe$","_renders","Map","_valid","locale","layout","compact","loading","noColon","formValueChange","EventEmitter","formChange","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","spanLabelFixed","spanLabel","spanControl","offsetControl","grid","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","items","uiSchemaInArr","inIfFn","size","_ui","render","firstKey","find","startsWith","btnRender","btnUi","offset","span","class","ngOnInit","isBrowser","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__horizontal]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","[class.sf__compact]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Platform","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","controlEl","unit","setStyle","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","showError","get","afterViewInit","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","addTitle","addType","removable","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","data","nzValue","_setValue","val","toString","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","formatString","setTimeout","emitModelChange","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","floor","ObjectWidget","showExpand","expand","showTitle","_c","propertiesId","_d","show","changeExpand","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","borderless","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","optionHeightPx","optionOverflowSize","Infinity","o1","o2","getOrgData","children","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showIcon","showLine","checkStrictly","hideUnMatched","defaultExpandAll","displayWith","expandChange","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","pureValue","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","getDateLocale","formatDistance"],"mappings":"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","sourcesContent":["import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-WW' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","export const SF_SEQ = '/';\n","import { AlainSFConfig } from '@delon/util';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity) {\n    options = { onlySelf: false, emitValidator: true, emitValueEvent: true, updatePath: '', updateValue: null, ...options };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue || this.value;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    if (this.root.widget?.sfComp?._inited === true) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig, deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<{}>();\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  @Output() readonly formReset = new EventEmitter<{}>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** 表单校验状态 */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** 表单值 */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * 根据路径获取表单元素属性\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * 根据路径获取表单元素当前值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * 根据路径设置某个表单元素属性值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   * @param value 新值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * 刷新整个 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 若希望对某个表单元素进行刷新请使用：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) protected readonly cd: ChangeDetectorRef,\n    @Inject(Injector) protected readonly injector: Injector,\n    @Inject(SFItemComponent) protected readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n}\n\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.disabled || (this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems);\n  }\n\n  get showRemove() {\n    return !this.disabled && this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    const property = this.formProperty.add({});\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null) {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]) {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear() {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      this.displayValue =\n        value == null\n          ? []\n          : [\n              value,\n              toDate(this.endProperty.formData as NzSafeAny, { formatString: this.endFormat || this.startFormat, defaultValue: null }),\n            ];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange = true) {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null) {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    if (!Array.isArray(values)) {\n      return this.data.find(w => w.value === values)!;\n    }\n    return values.map(value => {\n      let item: SFSchemaEnum | null = null;\n      this.data.forEach(list => {\n        item = list.children?.find(w => w.value === value)!;\n      });\n      return item;\n    });\n  }\n\n  openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue) {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as NzUploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: NzUploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]) {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService, DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders<DelonFormModule> {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}