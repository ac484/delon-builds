{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/const.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts","ng://@delon/form/src/errors.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","SF_DEFAULT_CONFIG","formatMap","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","options","_propertiesId","createProperties","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","splice","orderProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","_a","cleanValue","addProperty","newProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","showRequired","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","Injectable","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","unsubscribe$","_renders","Map","_valid","_inited","locale","layout","compact","loading","noColon","formChange","EventEmitter","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","spanLabelFixed","spanLabel","spanControl","offsetControl","grid","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","items","uiSchemaInArr","inIfFn","size","_ui","render","firstKey","find","startsWith","btnRender","btnUi","offset","span","class","ngOnInit","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__horizontal]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","[class.sf__compact]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","controlEl","unit","setStyle","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","get","afterViewInit","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","addTitle","addType","removable","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","updateValue","nzValue","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","formatString","setTimeout","emitModelChange","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","_b","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","borderless","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","optionHeightPx","optionOverflowSize","Infinity","o1","o2","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showIcon","showExpand","showLine","checkStrictly","hideUnMatched","defaultExpandAll","displayWith","expandChange","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","pureValue","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-WW' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG);\n}\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","export const SF_SEQ = '/';\n","import { AlainSFConfig } from '@delon/util';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   *\n   * @param [onlySelf=false] 是否包含上级字段\n   * @param [emitValueEvent=true] 是否触发值变更通知\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig, deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n  readonly options: AlainSFConfig;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  /** 数据变更时回调 */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** 提交表单时回调 */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** 重置表单时回调 */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** 表单校验结果回调 */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** 表单校验状态 */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** 表单值 */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * 根据路径获取表单元素属性\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * 根据路径获取表单元素当前值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * 根据路径设置某个表单元素属性值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   * @param value 新值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * 刷新整个 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 若希望对某个表单元素进行刷新请使用：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) protected readonly cd: ChangeDetectorRef,\n    @Inject(Injector) protected readonly injector: Injector,\n    @Inject(SFItemComponent) protected readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) protected readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n}\n\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n  afterViewInit() {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.disabled || (this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems);\n  }\n\n  get showRemove() {\n    return !this.disabled && this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    const property = this.formProperty.add({});\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel!;\n    this.setValue(item.nzValue);\n    if (this.ui.change) this.ui.change(item);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null) {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]) {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear() {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      this.displayValue =\n        value == null\n          ? []\n          : [\n              value,\n              toDate(this.endProperty.formData as NzSafeAny, { formatString: this.endFormat || this.startFormat, defaultValue: null }),\n            ];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange = true) {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null) {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue) {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { UploadChangeParam, UploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity(false, false, false);\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: UploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService, DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}