{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","Injectable","args","providedIn","FORMATMAPS","date-time","widget","showTime","date","full-date","time","full-time","week","mode","month","uri","email","color","","isBlank","toBool","defaultValue","toBoolean","di","ui","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","hasElse","visibleIf","visibleElse","forEach","cond","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_value","_errors","_objErrors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","schemaValidator","createValidatorFn","default","_parent","_root","root","PropertyGroup","_path","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","_v","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ArrayProperty","formPropertyFactory","options","tick","pos","isNaN","setValue","clearErrors","resetProperties","_hasValue","addProperty","newProperty","createProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","splice","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","ObjectProperty","_propertiesId","createProperties","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","orderProperties","title","StringProperty","FormPropertyFactory","refSchema","pop","TypeError","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","SchemaValidatorFactory","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","aclSrv","cdr","i18n","unsubscribe$","_renders","Map","_valid","_inited","locale","layout","loading","formChange","EventEmitter","formSubmit","formReset","formError","change","takeUntil","coverButtonProperty","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","deepMergeKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","optionalHelp","text","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","acl","can","idx","items","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ACLService","Optional","ChangeDetectorRef","DelonLocaleService","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","markForCheck","Injector","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","addTitle","l","addText","addType","removeTitle","removable","removeText","addItem","removeItem","AutoCompleteWidget","fixData","typing","isAsync","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_select","select","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","displayValue","flatRange","displayFormat","allowClear","showToday","compCd","setTimeout","toDate","endProperty","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","_a","valueWith","notFoundContent","prefix","autosize","min","count","mentionChild","getMentions","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","Infinity","o1","o2","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnBefore","addOnAfterIcon","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_afterClose","afterClose","_close","onClose","TextWidget","TextareaWidget","TimeWidget","allowEmpty","defaultOpenValue","hideDisabledOptions","hourStep","minuteStep","nzMinuteStep","secondStep","v","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","get","NzModalService","nzContent","nzFooter","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","hint","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `å¸å°æ¨¡å¼åºé`,\n  $ref: `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems: `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties: `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf: `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies: `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum: `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format: `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type: `ç±»ååºå½æ¯ {type}`,\n  required: `å¿å¡«é¡¹`,\n  maxLength: `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength: `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum: `å¿é¡» {comparison}{limit}`,\n  formatMinimum: `å¿é¡» {comparison}{limit}`,\n  maximum: `å¿é¡» {comparison}{limit}`,\n  formatMaximum: `å¿é¡» {comparison}{limit}`,\n  maxItems: `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems: `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties: `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties: `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf: `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not: `ä¸åºå½å¹é \"not\" schema`,\n  oneOf: `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern: `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems: `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom: `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames: `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired: `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch: `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const: `åºå½ç­äºå¸¸é`,\n  contains: `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if: `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup,\n  ) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { ERRORSDEFAULT } from './errors';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' | null = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat?: string = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat?: string = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat?: string = 'x';\n  /**\n   * æå® `format: 'email'` çé»è®¤Emailåç¼\n   */\n  uiEmailSuffixes?: string[] = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\n}\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: any,\n  asyncArgs?: any,\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map(list => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n","import { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty>;\n  private _errors: ErrorData[] | null = null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  private _path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = this as PropertyGroup;\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type as string;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root || ((this as any) as PropertyGroup);\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(valueCheck, visibilityCheck).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties![propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>) {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = this.properties as FormProperty[];\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() { }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      this.properties![propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && this.properties![propertyId]) {\n        this.properties![propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      this.properties![propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nconst SEQ = '/';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private options: DelonFormConfig) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SEQ;\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && ((parent!.schema.required || []) as string[]).indexOf(propertyId.split(SEQ).pop()!) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: any;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv({\n      ...options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean },\n  ): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [\n      ...(this.options.ingoreKeywords as string[]),\n      ...(extraOptions.ingoreKeywords as string[] || []),\n    ];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty> } = {};\n\n  private defaultWidget: Widget<FormProperty>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ACLService } from '@delon/acl';\nimport { DelonLocaleService, LocaleData } from '@delon/theme';\nimport { deepCopy, InputBoolean, deepMergeKey } from '@delon/util';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout } from './interface';\nimport { FormProperty } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun, SFOptionalHelp } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema, FORMATMAPS } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, options: DelonFormConfig) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** è¡¨åé»è®¤å¼ */\n  @Input() formData: {};\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨ `spanLabelFixed` åºå®æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input() autocomplete: 'on' | 'off';\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input() @InputBoolean() firstVisual = true;\n  /** æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load statusï¼when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  /** æ°æ®åæ´æ¶åè° */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** éç½®è¡¨åæ¶åè° */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å±æ§\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å½åå¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è®¾ç½®æä¸ªè¡¨ååç´ å±æ§å¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   * @param value æ°å¼\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    @Optional() private aclSrv: ACLService,\n    private cdr: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate as boolean;\n    this.firstVisual = options.firstVisual as boolean;\n    this.autocomplete = options.autocomplete as 'on' | 'off';\n    this.i18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.coverButtonProperty();\n        this.cdr.detectChanges();\n      }\n    });\n    if (this.aclSrv) {\n      this.aclSrv.change\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = deepMergeKey(\n          {},\n          true,\n          { widget: property.type },\n          property.format && FORMATMAPS[property.format],\n          typeof property.ui === 'string' ? { widget: property.ui } : null,\n          !property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null,\n          this._defUi,\n          property.ui,\n          uiSchema[uiKey],\n        ) as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          };\n          if (!ui.optionalHelp.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          uiRes[uiKey].$items = uiRes[uiKey].$items || {};\n          inFn(property.items, property.items, (uiSchema[uiKey] || {}).$items || {}, ui, uiRes[uiKey].$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render!.grid) {\n        this._btn.render!.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render!.spanLabelFixed == null) {\n        this._btn.render!.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (!this._btn.render!.class && (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)) {\n        this._btn.render!.class = 'text-center';\n      }\n    } else {\n      this._btn.render!.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(): this {\n    this.rootProperty!._runValidation();\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (!this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...this.formData, ...value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: `\n    <ng-template #target></ng-template>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem, SFOptionalHelp } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith('/') ? this.path : `/` + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { LocaleData } from '@delon/theme';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem, SFOptionalHelp } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\n\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: SFUISchemaItem;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue);\n}\n\nexport class ControlWidget extends Widget<FormProperty> {\n  reset(_value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems;\n  }\n\n  ngOnInit(): void {\n    if (this.ui.grid && this.ui.grid.arraySpan) {\n      this.arraySpan = this.ui.grid.arraySpan;\n    }\n\n    this.addTitle = this.ui.addTitle || this.l.addText;\n    this.addType = this.ui.addType || 'dashed';\n    this.removeTitle = this.ui.removable === false ? null : this.ui.removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add(null!);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { of, Observable } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\n\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlWidget implements AfterViewInit {\n  i: any = {};\n  fixData: SFSchemaEnum[] = [];\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n  }\n\n  ngAfterViewInit(): void {\n    this.i = {\n      backfill: toBool(this.ui.backfill, false),\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\n      width: this.ui.width || undefined,\n    };\n\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\n    if (typeof this.filterOption === 'boolean') {\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n\n    this.isAsync = !!this.ui.asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? this.ui.asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(_value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(\n          this.schema.enum! || this.formProperty.options.uiEmailSuffixes,\n          null,\n          this.schema.readOnly!,\n        );\n        break;\n      default:\n        this.fixData = getCopyEnum(\n          this.schema.enum!,\n          this.formProperty.formData,\n          this.schema.readOnly!,\n        );\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(\n      !value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`),\n    );\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlWidget implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: any;\n\n  ngOnInit(): void {\n    this.clearText = this.ui.clearText || 'æ¸é¤';\n    this.showArrow = toBool(this.ui.showArrow, true);\n    this.showInput = toBool(this.ui.showInput, true);\n    this.triggerAction = this.ui.triggerAction || ['click'];\n    if (!!this.ui.asyncData) {\n      this.loadData = (node: any, index: number) => (this.ui.asyncData as any)(node, index, this);\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, {}, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: string) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n\n  _selectionChange(options: any) {\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _clear(options: any) {\n    if (this.ui.clear) this.ui.clear(options);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(_value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlWidget implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  format: string;\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.mode = ui.mode || 'date';\n    this.flatRange = ui.end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!ui.displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = ui.displayFormat;\n    }\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(ui.allowClear, true),\n      // nz-date-picker\n      showToday: toBool(ui.showToday, true),\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.compCd();\n  }\n\n  _change(value: Date | Date[] | null) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value) ? value.map(d => format(d, this.format)) : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent!.properties![this.ui.end];\n  }\n\n  private setEnd(value: string | null) {\n    if (this.flatRange) {\n      this.endProperty.setValue(value, true);\n    }\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlWidget implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n    const min = typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1;\n    const max = typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: any) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter = value => value;\n  parser = value => value;\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    if (typeof schema.minimum !== 'undefined') {\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\n    }\n    if (typeof schema.maximum !== 'undefined') {\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\n    }\n    this.step = schema.multipleOf || 1;\n    if (schema.type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = formProperty.properties![key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(_value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlWidget implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    this.count = this.schema.maximum || 5;\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(this.ui.allowClear, true);\n    this.autoFocus = toBool(this.ui.autoFocus, false);\n    this.hasText = !!this.ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  _value: any;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      allowClear,\n      autoFocus,\n      dropdownClassName,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      notFoundContent,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      allowClear,\n      autoFocus: toBool(autoFocus, false),\n      dropdownClassName: dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      notFoundContent,\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  openChange(value: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(value);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Marks, SliderValue } from 'ng-zorro-antd/slider';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: Marks;\n  included: boolean;\n\n  ngOnInit(): void {\n    this.min = this.schema.minimum || 0;\n    this.max = this.schema.maximum || 100;\n    this.step = this.schema.multipleOf || 1;\n\n    this.marks = this.ui.marks || null;\n    const included = this.ui.included;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    if (this.ui.formatter) return this.ui.formatter(value);\n    return value;\n  };\n\n  _afterChange(value: SliderValue) {\n    if (this.ui.afterChange) this.ui.afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlWidget implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    this.type = !!(\n      this.ui.addOnAfter ||\n      this.ui.addOnBefore ||\n      this.ui.addOnAfterIcon ||\n      this.ui.addOnBeforeIcon ||\n      this.ui.prefix ||\n      this.ui.prefixIcon ||\n      this.ui.suffix ||\n      this.ui.suffixIcon\n    )\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (this.schema.format === 'color' && !value) {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(this.data.filter(w => w.checked).map(i => i.value), false);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlWidget implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlWidget implements OnInit {\n  autosize: any = true;\n\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date | null = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  TransferCanMove,\n  TransferChange,\n  TransferItem,\n  TransferSearchChange,\n  TransferSelectChange,\n} from 'ng-zorro-antd/transfer';\nimport { of, Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || 'é¡¹',\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { UploadChangeParam, UploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlWidget implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    this.i = {\n      type: type || 'select',\n      text: text || 'ç¹å»ä¸ä¼ ',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: toBool(showUploadList, true),\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (this.i.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint = this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(_value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : getData(this.schema, this.ui, this.formProperty.formData)).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this._setValue(this.fileList);\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n"]}