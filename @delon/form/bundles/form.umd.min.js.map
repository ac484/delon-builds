{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/const.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts","ng://@delon/form/src/errors.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","SF_DEFAULT_CONFIG","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","FORMATMAPS","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","options","_propertiesId","createProperties","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","splice","orderProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","addProperty","newProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","Injectable","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","unsubscribe$","_renders","Map","_valid","_inited","locale","layout","loading","noColon","cleanValue","formChange","EventEmitter","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","items","uiSchemaInArr","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","get","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","_a","addTitle","addType","removable","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","formatString","setTimeout","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","_b","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","Infinity","o1","o2","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG);\n}\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'yyyy-MM-ddTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'yyyy-MM-dd' },\n  'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'yyyy-WW' },\n  month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","export const SF_SEQ = '/';\n","import { AlainSFConfig } from '@delon/util';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   *\n   * @param [onlySelf=false] 是否包含上级字段\n   * @param [emitValueEvent=true] 是否触发值变更通知\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = schema.format || ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig, deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, FORMATMAPS, resolveIf, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n  readonly options: AlainSFConfig;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  /** 数据变更时回调 */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** 提交表单时回调 */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** 重置表单时回调 */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** 表单校验结果回调 */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** 表单校验状态 */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** 表单值 */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * 根据路径获取表单元素属性\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * 根据路径获取表单元素当前值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * 根据路径设置某个表单元素属性值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   * @param value 新值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (FORMATMAPS as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render!.grid) {\n        this._btn.render!.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render!.spanLabelFixed == null) {\n        this._btn.render!.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!this._btn.render!.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        this._btn.render!.class = 'text-center';\n      }\n    } else {\n      this._btn.render!.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * 刷新 Schema，一般需要动态修改 Schema 某个值时可以方便调用\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'max-width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) protected readonly cd: ChangeDetectorRef,\n    @Inject(Injector) protected readonly injector: Injector,\n    @Inject(SFItemComponent) protected readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) protected readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n}\n\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue) {}\n}\n\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.disabled || (this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems);\n  }\n\n  get showRemove() {\n    return !this.disabled && this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add({});\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> implements AfterViewInit {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n    if (this.ui.change) this.ui.change(item);\n  }\n\n  ngAfterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null) {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]) {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear() {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      this.displayValue =\n        value == null\n          ? []\n          : [\n              value,\n              toDate(this.endProperty.formData as NzSafeAny, { formatString: this.endFormat || this.startFormat, defaultValue: null }),\n            ];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    setTimeout(() => this._change(this.displayValue));\n  }\n\n  _change(value: Date | Date[] | null) {\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null) {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  _value: any;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      allowClear,\n      autoFocus,\n      dropdownClassName,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      notFoundContent,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      allowClear,\n      autoFocus: toBool(autoFocus, false),\n      dropdownClassName: dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      notFoundContent,\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue) {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: NzSafeAny;\n  data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { UploadChangeParam, UploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this._setValue(this.fileList);\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService, DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}