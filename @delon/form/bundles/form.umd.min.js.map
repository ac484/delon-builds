{"version":3,"sources":["../../../../packages/form/src/config.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/form/src/const.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf.component.html","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/sf-item-wrap.component.html","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/array/array.widget.html","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.html","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.html","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.html","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.html","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/date/date.widget.html","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.html","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/number/number.widget.html","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/object/object.widget.html","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.html","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.html","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/select/select.widget.html","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.html","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/string/string.widget.html","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.html","../../../../packages/form/src/widgets/text/text.widget.ts","../../../../packages/form/src/widgets/text/text.widget.html","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.html","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/time/time.widget.html","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.html","../../../../packages/form/src/widgets/tree-select/tree-select.widget.ts","../../../../packages/form/src/widgets/tree-select/tree-select.widget.html","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.html","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts","../../../../packages/form/src/errors.ts"],"names":["SF_DEFAULT_CONFIG","formatMap","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","ui","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","mergeConfig","srv","merge","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","next","value","done","__read","n","e","ar","push","error","__spread","concat","SF_SEQ","isBlank","toBool","defaultValue","toBoolean","di","args","_i","debug","console","warn","apply","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","assign","resolveIfSchema","_schema","_ui","fn","if","properties","allKeys","keys","ifKeys","detectKey","then","required","hasElse","else","visibleIf","visibleElse","forEach","cond","enum","includes","resolveIf","property","uiKey","items","$items","detectKeys","orderProperties","order","isArray","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","prop","rest","restIndex","lastIndexOf","complete","splice","getEnum","list","formData","readOnly","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","pathValue","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","options","onlySelf","emitValidator","emitValueEvent","updatePath","updateValue","_updateValue","valueChanges","_runValidation","searchProperty","base","result","findRoot","getProperty","substr","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","params","setParentAndPlatErrors","platErrors","visible","setVisible","_b","_a","sfComp","_inited","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","_propertiesId","createProperties","orderedProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","cleanValue","addProperty","newProperty","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","cogSrv","refSchema","pop","showRequired","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","factory","ɵfac","Injectable","AjvSchemaValidatorFactory","document","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","REGEX","mobile","idCard","extraOptions","validate","w","i0","ɵɵinject","AlainConfigService","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","useFactory","ComponentFactoryResolver","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","platform","unsubscribe$","_renders","Map","_valid","locale","layout","compact","loading","noColon","formValueChange","EventEmitter","formChange","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","spanLabelFixed","spanLabel","spanControl","offsetControl","grid","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","uiSchemaInArr","size","render","firstKey","find","startsWith","btnRender","btnUi","offset","span","class","ngOnInit","isBrowser","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","unsubscribe","ngOnDestroy","ɵɵdirectiveInject","i3","DomSanitizer","ChangeDetectorRef","i4","DelonLocaleService","i5","ACLService","ALAIN_I18N_TOKEN","i6","i7","Platform","selector","inputs","outputs","host","class.sf","class.sf__inline","class.sf__horizontal","class.sf__search","class.sf__edit","class.sf__no-error","class.sf__no-colon","class.sf__compact","providers","provide","deps","exportAs","usesOnChanges","ngImport","i0__namespace","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","InputBoolean","Component","templateUrl","[class.sf]","[class.sf__inline]","[class.sf__horizontal]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","[class.sf__compact]","preserveWhitespaces","Optional","Input","Output","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","class.sf__item","viewQueries","propertyName","first","predicate","emitDistinctChangesOnly","descendants","read","ViewContainerRef","static","isInline","[class.sf__item]","ViewChild","SFItemWrapComponent","showError","showTitle","directives","i4$1","NzRowDirective","i2","NzFormItemComponent","i3$1","NgIf","NzColDirective","i10","NzTooltipDirective","i7$1","ɵNzTransitionPatchDirective","i8","NzIconDirective","animations","helpMotion","SFFixedDirective","er","el","nativeElement","init","num","widgetEl","querySelector","addClass","labelEl","controlEl","unit","setStyle","ngAfterViewInit","ElementRef","Renderer2","InputNumber","Directive","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","get","afterViewInit","Injector","cls","HostBinding","ControlWidget","usesInheritance","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","addTitle","addType","removable","addText","removeText","reValid","addItem","removeItem","class.sf__array","[class.sf__array]","AutoCompleteWidget","typing","isAsync","fixData","nzLabel","data","nzValue","_setValue","val","toString","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","mergeMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","formatString","endValue","setTimeout","emitModelChange","setEnd","_openChange","onOpenChange","_ok","onOk","MentionWidget","valueWith","notFoundContent","prefix","autosize","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","floor","ObjectWidget","showExpand","expand","_c","propertiesId","_d","show","changeExpand","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","search$","hasGroup","checkGroup","group","autoClearSearchValue","borderless","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","optionHeightPx","optionOverflowSize","Infinity","o1","o2","onSearch","searchDebounceTime","switchMap","catchError","getOrgData","children","openChange","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","autofocus","focus","blur","enter","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","Date","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showIcon","showLine","checkStrictly","hideUnMatched","defaultExpandAll","displayWith","expandChange","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","limitFileCount","pureValue","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","imports","CommonModule","FormsModule","DelonLocaleModule","declarations","exports","NgModule","i1","ɵangular_packages_forms_forms_y","NgControlStatusGroup","NgForm","NzFormDirective","NgClass","i5$1","NzButtonComponent","i6$1","NzWaveDirective","NgForOf","i9","NzCardComponent","NgTemplateOutlet","i11","NzInputDirective","DefaultValueAccessor","NgControlStatus","NzInputGroupComponent","NzInputGroupWhitSuffixOrPrefixDirective","i12","NzInputNumberComponent","NgSwitch","NgSwitchCase","i13","NzDatePickerComponent","NzYearPickerComponent","NzMonthPickerComponent","NzWeekPickerComponent","NzRangePickerComponent","NgSwitchDefault","i14","NzTimePickerComponent","i15","NzRadioGroupComponent","NzRadioComponent","NzRadioButtonDirective","i16","NzCheckboxComponent","NzCheckboxGroupComponent","NzCheckboxWrapperComponent","i17","NzSwitchComponent","NzAutosizeDirective","i18","NzSelectComponent","NzOptionComponent","NzOptionGroupComponent","i19","NzTreeSelectComponent","i20","NzTagComponent","i21","NzUploadComponent","i22","NzTransferComponent","i23","NzSliderComponent","i24","NzRateComponent","i25","NzAutocompleteTriggerDirective","NzAutocompleteComponent","NzAutocompleteOptionComponent","AsyncPipe","i26","NzCascaderComponent","i27","NzMentionComponent","NzMentionTriggerDirective","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","getDateLocale","formatDistance"],"mappings":"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","sourcesContent":["import { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: AlainSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`,\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-ww' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' },\n  },\n  ingoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const SF_SEQ = '/';\n","import { toBoolean } from '@delon/util/decorator';\nimport { deepCopy } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport function isBlank(o: any): boolean {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean): boolean {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]): void {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition): any {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIfSchema(_schema: SFSchema, _ui: SFUISchemaItemRun): void {\n  const fn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n    resolveIf(schema, ui);\n\n    Object.keys(schema.properties!).forEach(key => {\n      const property = schema.properties![key];\n      const uiKey = `$${key}`;\n      if (property.items) {\n        fn(property.items, ui[uiKey].$items);\n      }\n      if (property.properties) {\n        fn(property, ui[uiKey]);\n      }\n    });\n  };\n  fn(_schema, _ui);\n}\n\nfunction resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) {\n    schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n  }\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]): void {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]): string[] {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: AlainSFConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges(): BehaviorSubject<SFFormValueChange> {\n    return this._valueChanges;\n  }\n\n  get errorsChanges(): BehaviorSubject<ErrorData[] | null> {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get valid(): boolean {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options(): AlainSFConfig {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity): void {\n    options = { onlySelf: false, emitValidator: true, emitValueEvent: true, updatePath: '', updateValue: null, ...options };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue == null ? this.value : options.updateValue;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}): boolean {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation(): void {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]): void {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]): ErrorData[] {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat: boolean = true): void {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string): void {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  /**\n   * Set the hide or display of widget\n   * 设置小部件的隐藏或显示\n   */\n  setVisible(visible: boolean): void {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    if (this.root.widget?.sfComp?._inited === true) {\n      this.resetValue(this.value, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility(): void {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  return vi(res.value);\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void): void {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void): void {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility(): void {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive(): void {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot(): boolean {\n    return this === this.root;\n  }\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId(): string[] {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties(): void {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue(): void {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { AlainSFConfig } from '@delon/util/config';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: AlainSFConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue(): void {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  private options: AlainSFConfig;\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if ((propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) || ui.showRequired === true) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup): void {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy(): void {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { REGEX } from '@delon/util/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n  protected options: AlainSFConfig;\n\n  constructor(@Inject(AlainConfigService) cogSrv: AlainConfigService) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    this.ajv = new Ajv({\n      ...this.options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat('color', REGEX.color);\n    this.ajv.addFormat('mobile', REGEX.mobile);\n    this.ajv.addFormat('id-card', REGEX.idCard);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets(): { [type: string]: Widget<FormProperty, SFUISchemaItem> } {\n    return this._widgets;\n  }\n\n  setDefault(widget: any): void {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { AlainConfigService, AlainSFConfig } from '@delon/util/config';\nimport { BooleanInput, InputBoolean } from '@delon/util/decorator';\nimport { deepCopy } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIfSchema, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, cogSrv: AlainConfigService): FormPropertyFactory {\n  return new FormPropertyFactory(schemaValidatorFactory, cogSrv);\n}\n\nexport type SFMode = 'default' | 'search' | 'edit';\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, AlainConfigService],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_liveValidate: BooleanInput;\n  static ngAcceptInputType_firstVisual: BooleanInput;\n  static ngAcceptInputType_onlyVisual: BooleanInput;\n  static ngAcceptInputType_compact: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_noColon: BooleanInput;\n  static ngAcceptInputType_cleanValue: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  readonly options: AlainSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: SFMode) {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode(): SFMode {\n    return this._mode;\n  }\n  private _mode: SFMode;\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<{}>();\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  @Output() readonly formReset = new EventEmitter<{}>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /**\n   * Whether the form is valid\n   *\n   * 表单是否有效\n   */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /**\n   * The value of the form\n   *\n   * 表单值\n   */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * Get form element property based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素属性\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * Get element value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)获取表单元素值\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * Set form element new value based on [path](https://ng-alain.com/form/qa#path)\n   *\n   * 根据[路径](https://ng-alain.com/form/qa#path)设置某个表单元素属性值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    cogSrv: AlainConfigService,\n    private platform: Platform,\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty(): void {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIfSchema(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty(): void {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.validator();\n    this._inited = true;\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>): void {\n    if (!this._inited) {\n      return;\n    }\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender(): void {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  /**\n   * Validator the form is valid\n   *\n   * 校验表单是否有效\n   * - `emitError` 当表单无效时是否触发 `formError` 事件，默认：`true`\n   * - `onlyRoot` 只对根进行检验，不进行向下逐个递归，根已经包含整个 Json Schema，默认：`true`\n   */\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): boolean {\n    if (!this.platform.isBrowser) {\n      return false;\n    }\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this._valid;\n  }\n\n  /**\n   * Refresh the form Schema, when specifying `newSchema` means to replace the current Schema\n   *\n   * 刷新 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 可以针对某个表单元素进行刷新，例如：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * Reset form\n   *\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit: boolean = false): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub(): void {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","<ng-template #con>\n  <ng-content></ng-content>\n</ng-template>\n<form nz-form [nzLayout]=\"layout\" (submit)=\"onSubmit($event)\" [attr.autocomplete]=\"autocomplete\">\n  <sf-item *ngIf=\"rootProperty\" [formProperty]=\"rootProperty\"></sf-item>\n  <ng-container *ngIf=\"button !== 'none'; else con\">\n    <nz-form-item *ngIf=\"_btn.render\" [ngClass]=\"_btn.render!.class\" class=\"sf-btns\" [fixed-label]=\"_btn.render!.spanLabelFixed\">\n      <div\n        nz-col\n        class=\"ant-form-item-control\"\n        [nzSpan]=\"_btn.render!.grid!.span\"\n        [nzOffset]=\"_btn.render!.grid!.offset\"\n        [nzXs]=\"_btn.render!.grid!.xs\"\n        [nzSm]=\"_btn.render!.grid!.sm\"\n        [nzMd]=\"_btn.render!.grid!.md\"\n        [nzLg]=\"_btn.render!.grid!.lg\"\n        [nzXl]=\"_btn.render!.grid!.xl\"\n        [nzXXl]=\"_btn.render!.grid!.xxl\"\n      >\n        <div class=\"ant-form-item-control-input\">\n          <div class=\"ant-form-item-control-input-content\">\n            <ng-container *ngIf=\"button; else con\">\n              <button\n                type=\"submit\"\n                nz-button\n                data-type=\"submit\"\n                [nzType]=\"_btn.submit_type\"\n                [nzSize]=\"_btn.render!.size\"\n                [nzLoading]=\"loading\"\n                [disabled]=\"liveValidate && !valid\"\n              >\n                <i\n                  *ngIf=\"_btn.submit_icon\"\n                  nz-icon\n                  [nzType]=\"_btn.submit_icon.type\"\n                  [nzTheme]=\"_btn.submit_icon.theme\"\n                  [nzTwotoneColor]=\"_btn.submit_icon.twoToneColor\"\n                  [nzIconfont]=\"_btn.submit_icon.iconfont\"\n                ></i>\n                {{ _btn.submit }}\n              </button>\n              <button\n                *ngIf=\"_btn.reset\"\n                type=\"button\"\n                nz-button\n                data-type=\"reset\"\n                [nzType]=\"_btn.reset_type\"\n                [nzSize]=\"_btn.render!.size\"\n                [disabled]=\"loading\"\n                (click)=\"reset(true)\"\n              >\n                <i\n                  *ngIf=\"_btn.reset_icon\"\n                  nz-icon\n                  [nzType]=\"_btn.reset_icon.type\"\n                  [nzTheme]=\"_btn.reset_icon.theme\"\n                  [nzTwotoneColor]=\"_btn.reset_icon.twoToneColor\"\n                  [nzIconfont]=\"_btn.reset_icon.iconfont\"\n                ></i>\n                {{ _btn.reset }}\n              </button>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </nz-form-item>\n  </ng-container>\n</form>\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  host: { '[class.sf__item]': 'true' },\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>): void {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    const p = this.formProperty;\n    this.ref = this.widgetFactory.createWidget(this.container, (p.ui.widget || p.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t(): string {\n    return this.title === null ? this.schema.title! : this.title;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","<nz-form-item [style.width.px]=\"ui.width\" [class.ant-form-item-has-error]=\"showError\" [class.ant-form-item-with-help]=\"showError\">\n  <nz-col *ngIf=\"showTitle\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n    <label *ngIf=\"t\" [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n      <span class=\"sf__label-text\">{{ t }}</span>\n      <span *ngIf=\"ui.optional || oh\" class=\"sf__optional\">\n        {{ ui.optional }}\n        <i\n          *ngIf=\"oh\"\n          nz-tooltip\n          [nzTooltipTitle]=\"oh.text\"\n          [nzTooltipPlacement]=\"oh.placement\"\n          [nzTooltipTrigger]=\"oh.trigger\"\n          [nzTooltipColor]=\"oh.bgColor\"\n          [nzTooltipOverlayClassName]=\"oh.overlayClassName\"\n          [nzTooltipOverlayStyle]=\"oh.overlayStyle\"\n          [nzTooltipMouseEnterDelay]=\"oh.mouseEnterDelay\"\n          [nzTooltipMouseLeaveDelay]=\"oh.mouseLeaveDelay\"\n          nz-icon\n          [nzType]=\"oh.icon\"\n        ></i>\n      </span>\n    </label>\n  </nz-col>\n  <nz-col class=\"ant-form-item-control\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div *ngIf=\"!ui.onlyVisual && showError\" class=\"ant-form-item-explain ant-form-item-explain-error\">\n      <div @helpMotion>{{ error }}</div>\n    </div>\n    <div *ngIf=\"schema.description\" class=\"ant-form-item-extra\" [innerHTML]=\"schema._description\"></div>\n  </nz-col>\n</nz-form-item>\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util/decorator';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init(): void {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Directive, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\n@Directive()\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls(): string | string[] {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue): void {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value(): any {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf: boolean = false): void {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\n@Directive()\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  host: { '[class.sf__array]': 'true' },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled(): boolean {\n    return (\n      this.disabled || (this.schema.maxItems != null && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems!)\n    );\n  }\n\n  get showRemove(): boolean {\n    return !this.disabled && !!this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  private reValid(): void {\n    this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: true });\n  }\n\n  addItem(): void {\n    const property = this.formProperty.add({});\n    this.reValid();\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number): void {\n    this.formProperty.remove(index);\n    this.reValid();\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","<nz-form-item [class.ant-form-item-with-help]=\"showError\">\n  <nz-col *ngIf=\"schema.title\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n    <label>\n      {{ schema.title }}\n      <span class=\"sf__optional\">\n        {{ ui.optional }}\n        <i\n          *ngIf=\"oh\"\n          nz-tooltip\n          [nzTooltipTitle]=\"oh.text\"\n          [nzTooltipPlacement]=\"oh.placement\"\n          [nzTooltipTrigger]=\"oh.trigger\"\n          [nzTooltipOverlayClassName]=\"oh.overlayClassName\"\n          [nzTooltipOverlayStyle]=\"oh.overlayStyle\"\n          [nzTooltipMouseEnterDelay]=\"oh.mouseEnterDelay\"\n          [nzTooltipMouseLeaveDelay]=\"oh.mouseLeaveDelay\"\n          nz-icon\n          [nzType]=\"oh.icon\"\n        ></i>\n      </span>\n    </label>\n    <div class=\"sf__array-add\">\n      <button type=\"button\" nz-button [nzType]=\"addType\" [disabled]=\"addDisabled\" (click)=\"addItem()\" [innerHTML]=\"addTitle\"></button>\n    </div>\n  </nz-col>\n  <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n    <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n      <div nz-row class=\"sf__array-container\">\n        <ng-container *ngFor=\"let i of formProperty.properties; let idx=index\">\n          <div nz-col *ngIf=\"i.visible && !i.ui.hidden\" [nzSpan]=\"arraySpan\" [attr.data-index]=\"idx\" class=\"sf__array-item\">\n            <nz-card>\n              <sf-item [formProperty]=\"i\"></sf-item>\n              <span *ngIf=\"showRemove\" class=\"sf__array-remove\" (click)=\"removeItem(idx)\" [attr.title]=\"removeTitle\">\n                <i nz-icon nzType=\"delete\"></i>\n              </span>\n            </nz-card>\n          </div>\n        </ng-container>\n      </div>\n      <div *ngIf=\"!ui.onlyVisual && showError\" class=\"ant-form-explain\">{{error}}</div>\n      <div *ngIf=\"schema.description\" [innerHTML]=\"schema._description\" class=\"ant-form-extra\"></div>\n    </div>\n  </nz-col>\n</nz-form-item>\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, map, mergeMap, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent): void {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      mergeMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue): void {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string): Observable<SFSchemaEnum[]> | Observable<string[]> {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string): Observable<string[]> {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <input\n    nz-input\n    [nzAutocomplete]=\"auto\"\n    [attr.id]=\"id\"\n    [disabled]=\"disabled\"\n    [attr.disabled]=\"disabled\"\n    [nzSize]=\"ui.size\"\n    [(ngModel)]=\"typing\"\n    (ngModelChange)=\"_setValue($event)\"\n    [attr.maxLength]=\"schema.maxLength || null\"\n    [attr.placeholder]=\"ui.placeholder\"\n    autocomplete=\"off\"\n  />\n  <nz-autocomplete\n    #auto\n    [nzBackfill]=\"i.backfill\"\n    [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\n    [nzWidth]=\"i.width\"\n    (selectionChange)=\"updateValue($event)\"\n  >\n    <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i\" [nzLabel]=\"i.label\">\n      {{i.label}}\n    </nz-auto-option>\n  </nz-autocomplete>\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-switch\n    [ngModel]=\"value\"\n    (ngModelChange)=\"setValue($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"ui.size\"\n    [nzCheckedChildren]=\"ui.checkedChildren\"\n    [nzUnCheckedChildren]=\"ui.unCheckedChildren\"\n  >\n  </nz-switch>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean): void {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null): void {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]): void {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear(): void {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-cascader\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"ui.size\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"_change($event)\"\n    [nzOptions]=\"data\"\n    [nzAllowClear]=\"ui.allowClear\"\n    [nzAutoFocus]=\"ui.autoFocus\"\n    [nzChangeOn]=\"ui.changeOn\"\n    [nzChangeOnSelect]=\"ui.changeOnSelect\"\n    [nzColumnClassName]=\"ui.columnClassName\"\n    [nzExpandTrigger]=\"ui.expandTrigger\"\n    [nzMenuClassName]=\"ui.menuClassName\"\n    [nzMenuStyle]=\"ui.menuStyle\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzLabelProperty]=\"ui.labelProperty || 'label'\"\n    [nzValueProperty]=\"ui.valueProperty || 'value'\"\n    [nzLoadData]=\"loadData\"\n    [nzPlaceHolder]=\"ui.placeholder\"\n    [nzShowArrow]=\"showArrow\"\n    [nzShowInput]=\"showInput\"\n    [nzShowSearch]=\"ui.showSearch\"\n    (nzClear)=\"_clear()\"\n    (nzVisibleChange)=\"_visibleChange($event)\"\n    (nzSelectionChange)=\"_selectionChange($event)\"\n  >\n  </nz-cascader>\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue): void {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet(): void {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]): void {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(): void {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]): void {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","<ng-template #all>\n  <label\n    *ngIf=\"ui.checkAll\"\n    nz-checkbox\n    class=\"sf__checkbox-all mr-sm\"\n    [(ngModel)]=\"allChecked\"\n    (ngModelChange)=\"onAllChecked()\"\n    [nzIndeterminate]=\"indeterminate\"\n    >{{ ui.checkAllText || l.checkAllText }}</label\n  >\n</ng-template>\n<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"true\" [title]=\"labelTitle\">\n  <ng-container *ngIf=\"inited && data.length === 0\">\n    <label nz-checkbox [nzDisabled]=\"disabled\" [ngModel]=\"value\" (ngModelChange)=\"_setValue($event)\">\n      {{schema.title}}\n      <span class=\"sf__optional\">\n        {{ ui.optional }}\n        <i\n          *ngIf=\"oh\"\n          nz-tooltip\n          [nzTooltipTitle]=\"oh.text\"\n          [nzTooltipPlacement]=\"oh.placement\"\n          [nzTooltipTrigger]=\"oh.trigger\"\n          [nzTooltipOverlayClassName]=\"oh.overlayClassName\"\n          [nzTooltipOverlayStyle]=\"oh.overlayStyle\"\n          [nzTooltipMouseEnterDelay]=\"oh.mouseEnterDelay\"\n          [nzTooltipMouseLeaveDelay]=\"oh.mouseLeaveDelay\"\n          nz-icon\n          [nzType]=\"oh.icon\"\n        ></i>\n      </span>\n    </label>\n  </ng-container>\n  <ng-container *ngIf=\"inited && data.length > 0\">\n    <ng-container *ngIf=\"grid_span === 0\">\n      <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n      <nz-checkbox-group [ngModel]=\"data\" (ngModelChange)=\"notifySet()\"></nz-checkbox-group>\n    </ng-container>\n    <ng-container *ngIf=\"grid_span !== 0\">\n      <nz-checkbox-wrapper class=\"sf__checkbox-list\" (nzOnChange)=\"groupInGridChange($event)\">\n        <div nz-row>\n          <div nz-col [nzSpan]=\"grid_span\" *ngIf=\"ui.checkAll\">\n            <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n          </div>\n          <div nz-col [nzSpan]=\"grid_span\" *ngFor=\"let i of data\">\n            <label nz-checkbox [nzValue]=\"i.value\" [ngModel]=\"i.checked\" [nzDisabled]=\"i.disabled\">{{i.label}}</label>\n          </div>\n        </div>\n      </nz-checkbox-wrapper>\n    </ng-container>\n  </ng-container>\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toDate } from '@delon/util/date-time';\nimport format from 'date-fns/format';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue): void {\n    value = toDate(value, { formatString: this.startFormat, defaultValue: null });\n    if (this.flatRange) {\n      const endValue = toDate(this.endProperty.formData as NzSafeAny, {\n        formatString: this.endFormat || this.startFormat,\n        defaultValue: null,\n      });\n      this.displayValue = value == null || endValue == null ? [] : [value, endValue];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange: boolean = true): void {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any): void {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null): void {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <ng-container [ngSwitch]=\"mode\">\n    <nz-year-picker\n      *ngSwitchCase=\"'year'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzPopupStyle]=\"ui.popupStyle\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n    ></nz-year-picker>\n\n    <nz-month-picker\n      *ngSwitchCase=\"'month'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzPopupStyle]=\"ui.popupStyle\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n    ></nz-month-picker>\n\n    <nz-week-picker\n      *ngSwitchCase=\"'week'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzPopupStyle]=\"ui.popupStyle\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n    ></nz-week-picker>\n\n    <nz-range-picker\n      *ngSwitchCase=\"'range'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzPopupStyle]=\"ui.popupStyle\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzDisabledTime]=\"ui.disabledTime\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzRanges]=\"ui.ranges\"\n      [nzShowTime]=\"ui.showTime\"\n      [nzMode]=\"ui.rangeMode\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      (nzOnOk)=\"_ok($event)\"\n    ></nz-range-picker>\n\n    <nz-date-picker\n      *ngSwitchDefault\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzPopupStyle]=\"ui.popupStyle\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzDisabledTime]=\"ui.disabledTime\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzShowTime]=\"ui.showTime\"\n      [nzShowToday]=\"i.showToday\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      (nzOnOk)=\"_ok($event)\"\n    ></nz-date-picker>\n  </ng-container>\n</sf-item-wrap>\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any): void {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes): void {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-mention\n    #mentions\n    [nzSuggestions]=\"data\"\n    [nzValueWith]=\"i.valueWith\"\n    [nzLoading]=\"loading\"\n    [nzNotFoundContent]=\"i.notFoundContent\"\n    [nzPlacement]=\"i.placement\"\n    [nzPrefix]=\"i.prefix\"\n    (nzOnSelect)=\"_select($event)\"\n    (nzOnSearchChange)=\"_search($event)\"\n  >\n    <input\n      *ngIf=\"ui.inputStyle !== 'textarea'\"\n      nzMentionTrigger\n      nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      autocomplete=\"off\"\n    />\n    <textarea\n      *ngIf=\"ui.inputStyle === 'textarea'\"\n      nzMentionTrigger\n      nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [nzAutosize]=\"i.autosize\"\n    >\n    </textarea>\n  </nz-mention>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number): void {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-input-number\n    [nzId]=\"id\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"_setValue($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"ui.size\"\n    [nzMin]=\"min\"\n    [nzMax]=\"max\"\n    [nzStep]=\"step\"\n    [nzFormatter]=\"formatter\"\n    [nzParser]=\"parser\"\n    [nzPrecision]=\"ui.precision\"\n    [nzPlaceHolder]=\"ui.placeholder || ''\"\n    [style.width.px]=\"ui.widgetWidth || 90\"\n  >\n  </nz-input-number>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFObjectWidgetRenderType } from './schema';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  type: SFObjectWidgetRenderType = 'default';\n  list: Array<{}> = [];\n  title: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (this.type === 'card' || (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","<ng-template #default let-noTitle>\n  <div *ngIf=\"!noTitle && title\" class=\"sf__title\">{{ title }}</div>\n  <ng-container *ngIf=\"grid; else noGrid\">\n    <div nz-row [nzGutter]=\"grid.gutter\">\n      <ng-container *ngFor=\"let i of list\">\n        <ng-container *ngIf=\"i.property.visible && i.show\">\n          <div\n            nz-col\n            [nzSpan]=\"i.grid.span\"\n            [nzOffset]=\"i.grid.offset\"\n            [nzXs]=\"i.grid.xs\"\n            [nzSm]=\"i.grid.sm\"\n            [nzMd]=\"i.grid.md\"\n            [nzLg]=\"i.grid.lg\"\n            [nzXl]=\"i.grid.xl\"\n            [nzXXl]=\"i.grid.xxl\"\n          >\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-template #noGrid>\n    <ng-container *ngFor=\"let i of list\">\n      <ng-container *ngIf=\"i.property.visible && i.show\">\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-template>\n<nz-card\n  *ngIf=\"type === 'card'; else default\"\n  [nzTitle]=\"cardTitleTpl\"\n  [nzExtra]=\"ui.cardExtra\"\n  [nzSize]=\"ui.cardSize || 'small'\"\n  [nzActions]=\"ui.cardActions || []\"\n  [nzBodyStyle]=\"ui.cardBodyStyle\"\n  [nzBordered]=\"ui.cardBordered || true\"\n  [nzBorderless]=\"ui.cardBorderless || false\"\n  class=\"sf__object-card\"\n  [class.sf__object-card-fold]=\"!expand\"\n>\n  <ng-template #cardTitleTpl>\n    <div [class.point]=\"showExpand\" (click)=\"changeExpand()\">\n      <i *ngIf=\"showExpand\" nz-icon [nzType]=\"expand ? 'down' : 'up'\" class=\"mr-xs text-xs\"></i>\n      {{title}}\n    </div>\n  </ng-template>\n  <ng-template [ngTemplateOutlet]=\"default\" [ngTemplateOutletContext]=\"{ $implicit: true }\"></ng-template>\n</nz-card>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue): void {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-radio-group [nzSize]=\"ui.size\" [nzName]=\"id\" [ngModel]=\"value\" (ngModelChange)=\"_setValue($event)\" [nzButtonStyle]=\"ui.buttonStyle || 'outline'\">\n    <ng-container *ngIf=\"styleType\">\n      <label *ngFor=\"let option of data\" nz-radio [nzValue]=\"option.value\" [nzDisabled]=\"disabled || option.disabled\">\n        <span [innerHTML]=\"option.label\"></span>\n      </label>\n    </ng-container>\n    <ng-container *ngIf=\"!styleType\">\n      <label *ngFor=\"let option of data\" nz-radio-button [nzValue]=\"option.value\" [nzDisabled]=\"disabled || option.disabled\">\n        <span [innerHTML]=\"option.label\"></span>\n      </label>\n    </ng-container>\n  </nz-radio-group>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-rate\n    [nzDisabled]=\"disabled\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"setValue($event)\"\n    [nzAllowClear]=\"allowClear\"\n    [nzAllowHalf]=\"allowHalf\"\n    [nzTooltips]=\"ui.tooltips || []\"\n    [nzAutoFocus]=\"autoFocus\"\n    [nzCount]=\"count\"\n  ></nz-rate>\n  <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ text }}</span>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  private search$ = new Subject<string>();\n  i: SFSelectWidgetSchema;\n  data: SFSchemaEnum[];\n  _value: NzSafeAny;\n  hasGroup = false;\n  loading = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n      showArrow,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      showArrow: typeof showArrow !== 'boolean' ? undefined : showArrow,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n\n    const onSearch = this.ui.onSearch!;\n    if (onSearch) {\n      this.search$\n        .pipe(\n          takeUntil(this.sfItemComp!.unsubscribe$),\n          distinctUntilChanged(),\n          debounceTime(this.ui.searchDebounceTime || 300),\n          switchMap(text => onSearch(text)),\n          catchError(() => []),\n        )\n        .subscribe(list => {\n          this.data = list;\n          this.checkGroup(list);\n          this.loading = false;\n          this.detectChanges();\n        });\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue): void {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    if (!Array.isArray(values)) {\n      return this.data.find(w => w.value === values)!;\n    }\n    return values.map(value => {\n      let item: SFSchemaEnum | null = null;\n      this.data.forEach(list => {\n        item = list.children?.find(w => w.value === value)!;\n      });\n      return item;\n    });\n  }\n\n  openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  scrollToBottom(): void {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n\n  onSearch(value: string): void {\n    if (this.ui.onSearch) {\n      this.loading = true;\n      this.search$.next(value);\n    }\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-select\n    [nzDisabled]=\"disabled\"\n    [(ngModel)]=\"_value\"\n    (ngModelChange)=\"change($event)\"\n    [nzSize]=\"ui.size\"\n    [nzPlaceHolder]=\"ui.placeholder\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzDropdownClassName]=\"ui.dropdownClassName\"\n    [nzAllowClear]=\"ui.allowClear\"\n    [nzDropdownStyle]=\"ui.dropdownStyle\"\n    [nzCustomTemplate]=\"ui.customTemplate\"\n    [nzSuffixIcon]=\"ui.suffixIcon\"\n    [nzRemoveIcon]=\"ui.removeIcon\"\n    [nzClearIcon]=\"ui.clearIcon\"\n    [nzMenuItemSelectedIcon]=\"ui.menuItemSelectedIcon\"\n    [nzMaxTagPlaceholder]=\"ui.maxTagPlaceholder\"\n    [nzDropdownRender]=\"ui.dropdownRender\"\n    [nzAutoClearSearchValue]=\"i.autoClearSearchValue\"\n    [nzBorderless]=\"i.borderless\"\n    [nzAutoFocus]=\"i.autoFocus\"\n    [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n    [nzServerSearch]=\"i.serverSearch\"\n    [nzMaxMultipleCount]=\"i.maxMultipleCount\"\n    [nzMode]=\"i.mode\"\n    [nzShowSearch]=\"i.showSearch\"\n    [nzShowArrow]=\"i.showArrow\"\n    [nzTokenSeparators]=\"i.tokenSeparators\"\n    [nzMaxTagCount]=\"i.maxTagCount\"\n    [compareWith]=\"i.compareWith\"\n    [nzOptionHeightPx]=\"i.optionHeightPx\"\n    [nzOptionOverflowSize]=\"i.optionOverflowSize\"\n    (nzOpenChange)=\"openChange($event)\"\n    (nzOnSearch)=\"onSearch($event)\"\n    (nzScrollToBottom)=\"scrollToBottom()\"\n  >\n    <ng-container *ngIf=\"!loading && !hasGroup\">\n      <nz-option *ngFor=\"let o of data\" [nzLabel]=\"o.label\" [nzValue]=\"o.value\" [nzDisabled]=\"o.disabled\"></nz-option>\n    </ng-container>\n    <ng-container *ngIf=\"!loading && hasGroup\">\n      <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\n        <nz-option *ngFor=\"let o of i.children\" [nzLabel]=\"o.label\" [nzValue]=\"o.value\" [nzDisabled]=\"o.disabled\"></nz-option>\n      </nz-option-group>\n    </ng-container>\n    <nz-option *ngIf=\"loading\" nzDisabled nzCustomContent>\n      <i nz-icon nzType=\"loading\"></i>\n      {{ ui.searchLoadingText }}\n    </nz-option>\n  </nz-select>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue): void {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-slider\n    [ngModel]=\"value\"\n    (ngModelChange)=\"setValue($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzRange]=\"ui.range\"\n    [nzMin]=\"min\"\n    [nzMax]=\"max\"\n    [nzStep]=\"step\"\n    [nzMarks]=\"marks\"\n    [nzDots]=\"ui.dots\"\n    [nzIncluded]=\"included\"\n    [nzVertical]=\"ui.vertical\"\n    [nzTipFormatter]=\"_formatter\"\n    (nzOnAfterChange)=\"_afterChange($event)\"\n  >\n  </nz-slider>\n</sf-item-wrap>\n","import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon, autofocus } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n    if (autofocus === true) {\n      setTimeout(() => {\n        ((this.injector.get(ElementRef).nativeElement as HTMLElement).querySelector(`#${this.id}`) as HTMLElement).focus();\n      }, 20);\n    }\n  }\n\n  reset(value: SFValue): void {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: KeyboardEvent): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <ng-template #ipt>\n    <input\n      nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzBorderless]=\"ui.borderless\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.type]=\"ui.type || 'text'\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [attr.autocomplete]=\"ui.autocomplete\"\n      [attr.autoFocus]=\"ui.autofocus\"\n      (keyup.enter)=\"enter($event)\"\n      (focus)=\"focus($event)\"\n      (blur)=\"blur($event)\"\n    />\n  </ng-template>\n\n  <ng-container *ngIf=\"type === 'addon'; else ipt\">\n    <nz-input-group\n      [nzAddOnBefore]=\"ui.addOnBefore\"\n      [nzAddOnAfter]=\"ui.addOnAfter\"\n      [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\"\n      [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\n      [nzPrefix]=\"ui.prefix\"\n      [nzPrefixIcon]=\"ui.prefixIcon\"\n      [nzSuffix]=\"ui.suffix\"\n      [nzSuffixIcon]=\"ui.suffixIcon\"\n    >\n      <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\n    </nz-input-group>\n  </ng-container>\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum): void {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent): void {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue(): void {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <ng-template #icon let-i>\n    <i nz-icon [nzType]=\"i.type\" [nzTheme]=\"i.theme\" [nzTwotoneColor]=\"i.twotoneColor\" [nzRotate]=\"i.rotate\" [nzIconfont]=\"i.iconfont\" [nzSpin]=\"i.spin\"></i>\n  </ng-template>\n  <nz-tag *ngFor=\"let i of data\" [nzMode]=\"ui.mode || 'checkable'\" [nzChecked]=\"i.checked\" (nzOnClose)=\"_close($event)\" (nzCheckedChange)=\"onChange(i)\">\n    <ng-container *ngIf=\"i.prefixIcon\">\n      <ng-template [ngTemplateOutlet]=\"icon\" [ngTemplateOutletContext]=\"{ $implicit: i.prefixIcon }\"></ng-template>\n    </ng-container>\n    <span>{{i.label}}</span>\n    <ng-container *ngIf=\"i.suffixIcon\">\n      <ng-template [ngTemplateOutlet]=\"icon\" [ngTemplateOutletContext]=\"{ $implicit: i.suffixIcon }\"></ng-template>\n    </ng-container>\n  </nz-tag>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  {{ value || ui.defaultText || '-' }}\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <textarea\n    nz-input\n    [attr.id]=\"id\"\n    [disabled]=\"disabled\"\n    [attr.disabled]=\"disabled\"\n    [nzSize]=\"ui.size\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"change($event)\"\n    [attr.maxLength]=\"schema.maxLength || null\"\n    [attr.placeholder]=\"ui.placeholder\"\n    [nzAutosize]=\"autosize\"\n    [nzBorderless]=\"ui.borderless\"\n    (focus)=\"focus($event)\"\n    (blur)=\"blur($event)\"\n  >\n  </textarea>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue): void {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null): void {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-time-picker\n    [(ngModel)]=\"displayValue\"\n    (ngModelChange)=\"_change($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"ui.size\"\n    [nzFormat]=\"i.displayFormat\"\n    [nzAllowEmpty]=\"i.allowEmpty\"\n    [nzClearText]=\"i.clearText\"\n    [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n    [nzDisabledHours]=\"ui.disabledHours\"\n    [nzDisabledMinutes]=\"ui.disabledMinutes\"\n    [nzDisabledSeconds]=\"ui.disabledSeconds\"\n    [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n    [nzUse12Hours]=\"i.use12Hours\"\n    [nzHourStep]=\"i.hourStep\"\n    [nzMinuteStep]=\"i.minuteStep\"\n    [nzSecondStep]=\"i.secondStep\"\n    [nzPopupClassName]=\"ui.popupClassName\"\n    [nzPlaceHolder]=\"ui.placeholder\"\n    (nzOpenChange)=\"_openChange($event)\"\n  >\n  </nz-time-picker>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify(): void {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange): void {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange): void {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange): void {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-transfer\n    [nzDataSource]=\"list\"\n    [nzTitles]=\"i.titles\"\n    [nzOperations]=\"i.operations\"\n    [nzListStyle]=\"ui.listStyle\"\n    [nzItemUnit]=\"i.itemUnit\"\n    [nzItemsUnit]=\"i.itemsUnit\"\n    [nzShowSearch]=\"ui.showSearch\"\n    [nzFilterOption]=\"ui.filterOption\"\n    [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzCanMove]=\"_canMove\"\n    (nzChange)=\"_change($event)\"\n    (nzSearchChange)=\"_searchChange($event)\"\n    (nzSelectChange)=\"_selectChange($event)\"\n  >\n  </nz-transfer>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-tree-select\n    [nzAllowClear]=\"i.allowClear\"\n    [nzPlaceHolder]=\"ui.placeholder\"\n    [nzDropdownStyle]=\"ui.dropdownStyle\"\n    [nzDropdownClassName]=\"ui.dropdownClassName\"\n    [nzSize]=\"ui.size\"\n    [nzExpandedKeys]=\"ui.expandedKeys\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzMaxTagCount]=\"ui.maxTagCount\"\n    [nzMaxTagPlaceholder]=\"ui.maxTagPlaceholder || null\"\n    [nzTreeTemplate]=\"ui.treeTemplate || null\"\n    [nzDisabled]=\"disabled\"\n    [nzShowSearch]=\"i.showSearch\"\n    [nzShowIcon]=\"i.showIcon\"\n    [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n    [nzMultiple]=\"i.multiple\"\n    [nzHideUnMatched]=\"i.hideUnMatched\"\n    [nzCheckable]=\"i.checkable\"\n    [nzShowExpand]=\"i.showExpand\"\n    [nzShowLine]=\"i.showLine\"\n    [nzCheckStrictly]=\"i.checkStrictly\"\n    [nzAsyncData]=\"asyncData\"\n    [nzNodes]=\"data\"\n    [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n    [nzDisplayWith]=\"i.displayWith\"\n    [ngModel]=\"value\"\n    [nzVirtualHeight]=\"ui.virtualHeight\"\n    [nzVirtualItemSize]=\"ui.virtualItemSize || 28\"\n    [nzVirtualMaxBufferPx]=\"ui.virtualMaxBufferPx || 500\"\n    [nzVirtualMinBufferPx]=\"ui.virtualMinBufferPx || 28\"\n    (ngModelChange)=\"change($event)\"\n    (nzExpandChange)=\"expandChange($event)\"\n  >\n  </nz-tree-select>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util/other';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam): void {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue): void {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as NzUploadFile[];\n      this.formProperty._value = this.pureValue(list);\n      this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: NzUploadFile): any {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]): void {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]): void {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-upload\n    [nzType]=\"i.type\"\n    [(nzFileList)]=\"fileList\"\n    [nzDisabled]=\"disabled\"\n    [nzAction]=\"i.action\"\n    [nzDirectory]=\"i.directory\"\n    [nzOpenFileDialogOnClick]=\"i.openFileDialogOnClick\"\n    [nzAccept]=\"i.accept\"\n    [nzLimit]=\"i.limit\"\n    [nzFilter]=\"i.filter\"\n    [nzSize]=\"i.size\"\n    [nzFileType]=\"i.fileType\"\n    [nzHeaders]=\"ui.headers\"\n    [nzData]=\"ui.data\"\n    [nzListType]=\"i.listType\"\n    [nzMultiple]=\"i.multiple\"\n    [nzName]=\"i.name\"\n    [nzShowUploadList]=\"i.showUploadList\"\n    [nzWithCredentials]=\"i.withCredentials\"\n    [nzBeforeUpload]=\"i.beforeUpload\"\n    [nzCustomRequest]=\"i.customRequest\"\n    [nzRemove]=\"ui.remove || handleRemove\"\n    [nzPreview]=\"handlePreview\"\n    [nzPreviewFile]=\"ui.previewFile\"\n    [nzDownload]=\"ui.download\"\n    [nzTransformFile]=\"ui.transformFile\"\n    (nzChange)=\"change($event)\"\n    [nzShowButton]=\"fileList.length < i.limitFileCount\"\n  >\n    <ng-container [ngSwitch]=\"btnType\">\n      <ng-container *ngSwitchCase=\"'plus'\">\n        <i nz-icon nzType=\"plus\"></i>\n        <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'drag'\">\n        <p class=\"ant-upload-drag-icon\"><i nz-icon nzType=\"inbox\"></i></p>\n        <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\n        <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <button type=\"button\" nz-button><i nz-icon nzType=\"upload\"></i><span [innerHTML]=\"i.text\"></span></button>\n      </ng-container>\n    </ng-container>\n  </nz-upload>\n</sf-item-wrap>\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { AlainConfigService } from '@delon/util/config';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  exports: COMPONENTS,\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders<DelonFormModule> {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [AlainConfigService],\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n\n  /**\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}