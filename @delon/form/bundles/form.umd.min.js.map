{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@delon/form/src/config.ts","ng://@delon/form/src/utils.ts","ng://@delon/form/src/const.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts","ng://@delon/form/src/errors.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","DelonFormConfig","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","Injectable","args","providedIn","FORMATMAPS","date-time","widget","showTime","format","date","full-date","time","full-time","week","mode","month","uri","email","type","color","","isBlank","toBool","defaultValue","toBoolean","di","ui","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","$ref","match","exec","parts","split","current","parts_1","parts_1_1","part","replace","Error","findSchemaDefinition","localSchema","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","resolveIf","properties","allKeys","keys","ifKeys","detectKey","required","hasElse","visibleIf","visibleElse","forEach","cond","enum","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_errors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","_objErrors","_value","schemaValidator","createValidatorFn","default","_parent","_root","root","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","message","_custom","mergeErrors","newErrors","emitFormat","l_1","l","_v","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","PropertyGroup","_super","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ObjectProperty","formPropertyFactory","options","_propertiesId","createProperties","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","splice","orderProperties","title","createProperty","setValue","_hasValue","ArrayProperty","pos","isNaN","clearErrors","resetProperties","addProperty","newProperty","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","idx","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","StringProperty","FormPropertyFactory","refSchema","pop","_format","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","WidgetRegistry","_widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","dom","cdr","localeSrv","aclSrv","i18nSrv","unsubscribe$","_renders","Map","_valid","_inited","locale","layout","loading","noColon","cleanValue","formChange","EventEmitter","formSubmit","formReset","formError","change","takeUntil","emitError","onlyRoot","coverButtonProperty","markForCheck","refSchemas","merge","refreshSchema","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","fanyi","inheritUI","_defUi","coverProperty","isHorizontal","_schema","inFn","_parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","optionalHelp","text","oh","icon","placement","trigger","mouseEnterDelay","mouseLeaveDelay","i18n","descriptionI18n","description","_description","bypassSecurityTrustHtml","acl","can","items","uiSchemaInArr","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","changes","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","isFirst","errorsChanges","Promise","resolve","then","unsubscribe","ngOnDestroy","Component","selector","exportAs","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","[class.sf__no-colon]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","DelonLocaleService","ACLService","Optional","ALAIN_I18N_TOKEN","Input","Output","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","static","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","animations","helpMotion","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","get","Injector","HostBinding","ControlWidget","ControlUIWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","maxItems","removeTitle","_a","addTitle","addType","removable","addText","removeText","addItem","removeItem","AutoCompleteWidget","typing","isAsync","fixData","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","nzWidth","filterOption","width","filterOptionValue","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","flatRange","displayValue","displayFormat","allowClear","showToday","startFormat","endUi","endProperty","endFormat","toDate","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","valueWith","notFoundContent","prefix","autosize","_b","minimum","maximum","min","count","mentionChild","getMentions","_select","select","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","multipleOf","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","SelectWidget","hasGroup","checkGroup","group","autoClearSearchValue","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","showSearch","tokenSeparators","maxTagCount","compareWith","Infinity","o1","o2","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnAfterIcon","addOnBefore","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_close","onClose","TextWidget","TextareaWidget","TimeWidget","valueFormat","opt","allowEmpty","defaultOpenValue","hideDisabledOptions","use12Hours","hourStep","minuteStep","nzMinuteStep","secondStep","v","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handleRemove","handlePreview","file","preview","_url","thumbUrl","url","NzModalService","nzContent","nzFooter","hint","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","_getValue","deepGet","response","NzWidgetRegistry","ZORROS","NzAutocompleteModule","NzButtonModule","NzCardModule","NzCascaderModule","NzCheckboxModule","NzDatePickerModule","NzFormModule","NzGridModule","NzIconModule","NzInputModule","NzInputNumberModule","NzMentionModule","NzModalModule","NzRadioModule","NzRateModule","NzSelectModule","NzSliderModule","NzSwitchModule","NzTagModule","NzTimePickerModule","NzToolTipModule","NzTransferModule","NzTreeSelectModule","NzUploadModule","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","declarations","entryComponents","exports","false schema","additionalItems","additionalProperties","anyOf","dependencies","maxLength","minLength","formatMinimum","formatMaximum","minItems","maxProperties","minProperties","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`，默认：`[ 'type', 'enum' ]`\n   *\n   * - `type` 限定 Schema 中 `type` 类型\n   * - `enum` 限定应当是预设定的枚举值之一\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) 参数\n   */\n  ajv?: any;\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean = true;\n  /**\n   * 指定表单 `autocomplete` 值，默认：`on`\n   */\n  autocomplete?: 'on' | 'off' | null = null;\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean = false;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean = false;\n  /**\n   * 自定义通用错误信息\n   */\n  errors?: { [key: string]: string } = {};\n  /**\n   * 默认全局布局\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * 元素组件大小，用于 `nzSize` 值\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * 按钮风格\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * date小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`yyyy-MM-dd HH:mm:ss`\n   */\n  uiDateStringFormat?: string = 'yyyy-MM-dd HH:mm:ss';\n  /**\n   * date小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`x` 13位Unix Timestamp\n   */\n  uiDateNumberFormat?: string = 'x';\n  /**\n   * time小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string = 'HH:mm:ss';\n  /**\n   * time小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`x` 13位Unix Timestamp，日期统一使用 `1970-01-01`\n   */\n  uiTimeNumberFormat?: string = 'x';\n  /**\n   * 指定 `format: 'email'` 的默认Email后缀\n   */\n  uiEmailSuffixes?: string[] = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\n}\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SF_SEQ } from './const';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'yyyy-MM-ddTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'yyyy-MM-dd' },\n  'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'yyyy-WW' },\n  month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny) =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny) => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(schema: SFSchema, ui: SFUISchemaItem, formData: any, asyncArgs?: any): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","export const SF_SEQ = '/';\n","import { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { DelonFormConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema, SFSchemaType } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as any;\n    }\n    this.path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * 更新值且校验数据\n   *\n   * @param [onlySelf=false] 是否包含上级字段\n   * @param [emitValueEvent=true] 是否触发值变更通知\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors![err.keyword] || l[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(/{([\\.a-z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 部分数据源来自 reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui['$' + propertyId],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    // tslint:disable-next-line: forin\n    for (const propertyId in this.schema.properties) {\n      properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: any[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items!,\n      this.ui.$items,\n      formData,\n      this as PropertyGroup,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private options: DelonFormConfig) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup | null = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, schema, ui, formData, parent, path, this.options);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: NzSafeAny;\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[]; debug: boolean },\n  ): (value: SFSchema) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: NzSafeAny;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv({\n      ...options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[]; debug: boolean }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [...(this.options.ingoreKeywords as string[]), ...((extraOptions.ingoreKeywords as string[]) || [])];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors: any[] = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets() {\n    return this._widgets;\n  }\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty, SFUISchemaItem>>(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN, DelonLocaleService, LocaleData } from '@delon/theme';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton, SFLayout } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, FORMATMAPS, resolveIf, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, options: DelonFormConfig) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData: {};\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /** 立即显示错误视觉 */\n  @Input() @InputBoolean() firstVisual = true;\n  /** 是否只展示错误视觉不显示错误文本 */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** 表单模式 */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  /** 数据变更时回调 */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** 提交表单时回调 */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** 重置表单时回调 */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** 表单校验结果回调 */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** 表单校验状态 */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** 表单值 */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * 根据路径获取表单元素属性\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty | null {\n    return this.rootProperty!.searchProperty(path);\n  }\n\n  /**\n   * 根据路径获取表单元素当前值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * 根据路径设置某个表单元素属性值\n   * @param path [路径](https://ng-alain.com/form/qa#path)\n   * @param value 新值\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: DelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n  ) {\n    this.liveValidate = options.liveValidate as boolean;\n    this.firstVisual = options.firstVisual as boolean;\n    this.autocomplete = options.autocomplete as 'on' | 'off';\n    this.localeSrv.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<any> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null,\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<any>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntil(this.unsubscribe$),\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && (FORMATMAPS as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel) ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl) ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl = typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp,\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp,\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          property._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          const uiSchemaInArr = (uiSchema[uiKey] || {}).$items || {};\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchemaInArr[uiKey],\n            ...ui.$items,\n          };\n          inFn(property.items, property.items, uiSchemaInArr, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties!).forEach(key => {\n        const property = schema.properties![key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render!.grid) {\n        this._btn.render!.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render!.spanLabelFixed == null) {\n        this._btn.render!.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!this._btn.render!.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        this._btn.render!.class = 'text-center';\n      }\n    } else {\n      this._btn.render!.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (Object.keys(changes).length === 1 && (changes.loading || changes.disabled)) {\n      this.cdr.detectChanges();\n      return;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty!.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): this {\n    const fn = (property: FormProperty) => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key => fn((property.properties as { [key: string]: FormProperty })[key]));\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * 刷新 Schema，一般需要动态修改 Schema 某个值时可以方便调用\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string') throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * 重置表单\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty!.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  template: ` <ng-template #target></ng-template> `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual as boolean;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget || this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { SFSchema } from './schema/index';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string | null = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LocaleData } from '@delon/theme';\nimport { takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: UIT;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean | null {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp!.locale;\n  }\n\n  get oh() {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) protected readonly cd: ChangeDetectorRef,\n    @Inject(Injector) protected readonly injector: Injector,\n    @Inject(SFItemComponent) protected readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) protected readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe((errors: ErrorData[] | null) => {\n      if (errors == null) return;\n      di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n      // 不显示首次校验视觉\n      if (this.firstVisual) {\n        this.showError = errors.length > 0;\n        this.error = this.showError ? (errors[0].message as string) : '';\n\n        this.cd.detectChanges();\n      }\n      this.firstVisual = true;\n    });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n}\n\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue) {}\n}\n\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.unsubscribe$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: SafeHtml;\n  addType: string;\n  removeTitle: string | null;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return this.disabled || (this.schema.maxItems && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems);\n  }\n\n  get showRemove() {\n    return !this.disabled && this.removeTitle;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add({});\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFAutoCompleteWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> implements AfterViewInit {\n  i: any = {};\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n    if (this.ui.change) this.ui.change(item);\n  }\n\n  ngAfterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) => option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum! || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly!);\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCascaderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: (node: NzCascaderOption, index: number) => PromiseLike<any>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) => asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: any[] | null) {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]) {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear() {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCheckboxWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFCustomWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFDateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat: string;\n  private endFormat: string;\n  private flatRange = false;\n  mode: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat: string;\n  i: any;\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n  }\n\n  _change(value: Date | Date[] | null) {\n    if (value == null || (value as Date[]).length < 2) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null) {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFMentionWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as any;\n    }\n  }\n\n  reset(_value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFNumberWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string | number = value => value;\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + 1 : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - 1 : maximum;\n    }\n    this.step = multipleOf || 1;\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRadioWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list.map(i => {\n        i.label = this.dom.bypassSecurityTrustHtml(i.label);\n        return i;\n      });\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFRateWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  _value: any;\n  hasGroup = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      allowClear,\n      autoFocus,\n      dropdownClassName,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      notFoundContent,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      allowClear,\n      autoFocus: toBool(autoFocus, false),\n      dropdownClassName: dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      notFoundContent,\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  openChange(status: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((list: SFSchemaEnum[]) => {\n        this.data = list;\n        this.checkGroup(list);\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\nimport { ControlUIWidget } from '../../widget';\nimport { SFSliderWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: NzMarks | null;\n  included: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return value;\n  };\n\n  _afterChange(value: NzSliderValue) {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\nimport { SFStringWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    const { addOnAfter, addOnAfterIcon, addOnBefore, addOnBeforeIcon, prefix, prefixIcon, suffix, suffixIcon } = this.ui;\n    this.type = !!(addOnAfter || addOnBefore || addOnAfterIcon || addOnBeforeIcon || prefix || prefixIcon || suffix || suffixIcon)\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTagWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AutoSizeType } from 'ng-zorro-antd/input';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTextareaWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    const { autosize } = this.ui;\n    if (autosize != null) {\n      this.autosize = autosize;\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTimeWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd/transfer';\nimport { Observable, of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTransferWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false,\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd/core/tree';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFTreeSelectWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i: NzSafeAny;\n  data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { UploadChangeParam, UploadFile } from 'ng-zorro-antd/upload';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\nimport { SFUploadWidgetSchema } from './schema';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    const res: any = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this._setValue(this.fileList);\n      this.detectChanges();\n    });\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handleRemove = () => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null,\n    });\n  };\n}\n","import { WidgetRegistry } from '../widget.factory';\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule,\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否立即呈现错误视觉，默认：`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * 自定义校验\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n"]}