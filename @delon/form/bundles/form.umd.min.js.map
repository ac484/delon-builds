{"version":3,"sources":["ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","node_modules/tslib/tslib.es6.js","ng://@delon/form/src/utils.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"names":["ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","this","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","FORMATMAPS","date-time","widget","showTime","date","full-date","time","full-time","week","mode","month","uri","email","color","","isBlank","toBool","defaultValue","di","args","_i","console","warn","retrieveSchema","schema","definitions","$refSchema","findSchemaDefinition","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","localSchema","__rest","indexOf","getOwnPropertySymbols","resolveIf","ui","properties","allKeys","keys","ifKeys","detectKey","then","hasElse","else","visibleIf","visibleElse","forEach","cond","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","takeWhile","__destroy","of","TerminatorService","onDestroy","Subject","destroy","FormProperty","schemaValidatorFactory","parent","path","options","_value","_errors","_objErrors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","schemaValidator","createValidatorFn","default","_parent","_root","root","PropertyGroup","_path","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","idx","message","_custom","mergeErrors","newErrors","emitFormat","v","params","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","AtomicProperty","setValue","fallbackValue","reset","_hasValue","NumberProperty","parseFloat","parseInt","StringProperty","BooleanProperty","ArrayProperty","formPropertyFactory","tick","pos","isNaN","clearErrors","resetProperties","addProperty","newProperty","createProperty","items","$items","value_1","value_1_1","add","remove","index","splice","ObjectProperty","_propertiesId","createProperties","orderedProperties","orderProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","title","FormPropertyFactory","refSchema","TypeError","initializeRoot","rootProperty","SchemaValidatorFactory","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Optional","Inject","WidgetRegistry","widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","Injectable","ComponentFactoryResolver","useFactory","SFComponent","terminator","cd","i18n","locale","_renders","Map","_valid","_inited","layout","formChange","EventEmitter","formSubmit","formReset","formError","i18n$","change","coverButtonProperty","_mode","_btn","submit","search","edit","_item","onSubmit","preventDefault","stopPropagation","valid","emit","coverProperty","isHorizontal","_schema","inFn","parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","inIfFn","size","_ui","debug","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","refreshSchema","_addTpl","templateRef","set","_render","attachCustomRender","tpl","pui","newSchema","newUI","_formData","cleanRootSub","errorsChanges","Promise","resolve","unsubscribe","ngOnDestroy","Component","selector","template","preserveWhitespaces","providers","provide","deps","host","[class.sf]","[class.sf-search]","[class.sf-edit]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","DelonLocaleService","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","sfComp","showError","markForCheck","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ObjectWidget","_b","propertiesId","_c","show","ArrayWidget","arraySpan","addTitle","l","addType","removeTitle","removable","addItem","removeItem","StringWidget","addOnAfter","addOnBefore","addOnAfterIcon","addOnBeforeIcon","prefix","prefixIcon","suffix","suffixIcon","NumberWidget","formatter","parser","min","exclusiveMinimum","max","exclusiveMaximum","step","Math","trunc","DateWidget","displayValue","flatRange","displayFormat","allowClear","showToday","toDate","endProperty","_change","setEnd","_openChange","status","onOpenChange","_ok","onOk","Date","TimeWidget","allowEmpty","clearText","defaultOpenValue","hideDisabledOptions","hourStep","minuteStep","nzMinuteStep","secondStep","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","RadioWidget","data","styleType","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","setTimeout","BooleanWidget","TextareaWidget","autosize","SelectWidget","hasGroup","autoFocus","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","Infinity","notFoundContent","showSearch","group","openChange","searchChange","text","onSearch","scrollToBottom","TreeSelectWidget","dc","tranData","node","NzTreeNode","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","TagWidget","onChange","updateValue","checkedChange","_afterClose","afterClose","_close","onClose","UploadWidget","modalSrv","fileList","btnType","handlePreview","file","nzContent","url","thumbUrl","nzFooter","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","hint","notify","deepGet","response","pop","NzModalService","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","to","_a","_searchChange","_selectChange","selectChange","SliderWidget","_formatter","marks","included","_afterChange","afterChange","CustomWidget","RateWidget","hasText","count","allowHalf","genText","EMAILSUFFIX","AutoCompleteWidget","fixData","isAsync","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","orgTime","debounceTime","startWith","flatMap","filterData","addEmailSuffix","domain","CascaderWidget","showArrow","showInput","triggerAction","loadData","_visibleChange","visibleChange","_selectionChange","selectionChange","_select","select","_clear","clear","MentionWidget","loading","valueWith","placement","form","mentionChild","getMentions","_search","tap","TextWidget","NzWidgetRegistry","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","NgZorroAntdModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema':         `å¸å°æ¨¡å¼åºé`,\n  '$ref':                 `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems:        `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties:   `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf:                  `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies:           `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum:                   `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format:                 `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type:                   `ç±»ååºå½æ¯ {type}`,\n  required:               `å¿å¡«é¡¹`,\n  maxLength:              `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength:              `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum:                `å¿é¡» {comparison}{limit}`,\n  formatMinimum:          `å¿é¡» {comparison}{limit}`,\n  maximum:                `å¿é¡» {comparison}{limit}`,\n  formatMaximum:          `å¿é¡» {comparison}{limit}`,\n  maxItems:               `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems:               `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties:          `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties:          `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf:             `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not:                    `ä¸åºå½å¹é \"not\" schema`,\n  oneOf:                  `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern:                `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems:            `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom:                 `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames:          `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired:        `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch:                 `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const:                  `åºå½ç­äºå¸¸é`,\n  contains:               `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if:                     `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n  _custom?: boolean;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [ key: string ]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (value: any, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { SFUISchemaItem } from './schema/ui';\nimport { ERRORSDEFAULT } from './errors';\nimport { SFButton } from './interface';\n\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate? = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual? = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual? = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat? = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat? = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat? = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat? = 'x';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable, of } from 'rxjs';\nimport { map, takeWhile } from 'rxjs/operators';\nimport { deepCopy } from '@delon/util';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  return value == null ? defaultValue : `${value}` !== 'false';\n}\n\nexport function di(...args) {\n  // tslint:disable-next-line:no-console\n  console.warn(...args);\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(\n  schema: SFSchema,\n  definitions: SFSchemaDefinition = {},\n): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\n\n  if (!schema.if.properties)\n    throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties),\n    ifKeys = Object.keys(schema.if.properties);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then.required);\n  schema.required = schema.required.concat(schema.then.required);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else.required);\n    schema.required = schema.required.concat(schema.else.required);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if.properties[key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\n  });\n\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse)\n    schema.else.required.forEach(\n      key => (ui[`$${key}`].visibleIf = visibleElse),\n    );\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(\n      `ui schema order list contains extraneous ${errorPropList(extraneous)}`,\n    );\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(\n        `ui schema order list does not contain ${errorPropList(rest)}`,\n      );\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error(\n      'ui schema order list contains more than one wildcard item',\n    );\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return <SFSchemaEnum>{ label: item, value: item };\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => item.disabled = true);\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: any,\n  asyncArgs?: any,\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui\n      .asyncData(asyncArgs)\n      .pipe(\n        takeWhile(() => ui.__destroy !== true),\n        map(list => getEnum(list, formData, schema.readOnly)),\n      );\n  }\n  return of(getCopyEnum(schema.enum, formData, schema.readOnly));\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","// tslint:disable:no-use-before-declare\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { Widget } from '../widget';\nimport { isBlank } from '../utils';\n\nexport abstract class FormProperty {\n  schemaValidator: (value: any) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: any = null;\n  widget: Widget<any>;\n  private _errors: ErrorData[] = null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  private _valueChanges = new BehaviorSubject<any>(null);\n  private _errorsChanges = new BehaviorSubject<any>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    private options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = <PropertyGroup>(<any>this);\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type;\n  }\n\n  get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root || <PropertyGroup>(<any>this);\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get errors() {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: any, onlySelf: boolean): any;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: any, onlySelf: boolean): any;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): any;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(\n    onlySelf = false,\n    emitValueEvent = true,\n    emitValidator = true,\n  ) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return <PropertyGroup>property;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: any) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach((err, idx: number) => {\n        if (!err.message)\n          throw new Error(\n            `èªå®ä¹æ ¡éªå¨å¿é¡»è³å°è¿åä¸ä¸ª 'message' å±æ§ï¼ç¨äºè¡¨ç¤ºéè¯¯ææ¬`,\n          );\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] ||\n              this.options.errors[err.keyword] ||\n              ``;\n\n        if (message && typeof message === 'function')\n          message = message(err) as string;\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(\n              /{([\\.a-z0-9]+)}/g,\n              (v: string, key: string) => err.params[key] || '',\n            );\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Observable<boolean>[] = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: any) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(\n              valueCheck, visibilityCheck\n            ).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(\n              `Can't find property ${dependencyPath} for visibility check of ${\n                this.path\n              }`,\n            );\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged()\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (\n      property !== null &&\n      subPathIdx !== -1 &&\n      property instanceof PropertyGroup\n    ) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (<PropertyGroup>property).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (<PropertyGroup>child).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): any;\n\n  setValue(value: any, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: any, onlySelf: boolean) {\n    if (value == null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value =\n          value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): any {\n    return null;\n  }\n}\n","import { PropertyGroup, FormProperty } from './form.property';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { DelonFormConfig } from '../config';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: any,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: any, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(this._value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    const value: any[] = [];\n    this.forEachChild((property: ObjectProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push(Object.assign({}, property.formData, property.value));\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(value: any) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items,\n      this.ui.$items,\n      value,\n      this,\n    ) as ObjectProperty;\n    (<FormProperty[]>this.properties).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(value: any[]) {\n    for (const item of value) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // #region actions\n\n  add(value: any): FormProperty {\n    const newProperty = this.addProperty(value);\n    newProperty.resetValue(value, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = <FormProperty[]>this.properties;\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { DelonFormConfig } from '../config';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: any,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(\n        Object.keys(this.schema.properties),\n        this.ui.order as string[],\n      );\n    } catch (e) {\n      console.error(\n        `Invalid ${this.schema.title || 'root'} object field configuration:`,\n        e,\n      );\n    }\n    orderedProperties.forEach(propertyId => {\n      this.properties[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties[propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n  resetValue(value: any, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    // tslint:disable-next-line:forin\n    for (const propertyId in this.schema.properties) {\n      this.properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n  _updateValue() {\n    const value: any = {};\n    this.forEachChild((property: any, propertyId: string) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup, FormProperty } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { StringProperty } from './string.property';\nimport { BooleanProperty } from './boolean.property';\nimport { ArrayProperty } from './array.property';\nimport { ObjectProperty } from './object.property';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\n\nexport class FormPropertyFactory {\n  constructor(\n    private schemaValidatorFactory: SchemaValidatorFactory,\n    private options: DelonFormConfig,\n  ) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += '/';\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error(\n          'Instanciation of a FormProperty with an unknown parent type: ' +\n            parent.type,\n        );\n      }\n    } else {\n      path = '/';\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (\n        propertyId &&\n        ((parent!.schema.required || []) as string[]).indexOf(propertyId) !== -1\n      ) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) schema.title = propertyId;\n      // fix date\n      if (\n        (schema.type === 'string' || schema.type === 'number') &&\n        !schema.format &&\n        !(ui as SFUISchemaItem).format\n      ) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiDateStringFormat\n              : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiTimeStringFormat\n              : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Inject, Optional } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[] },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: any;\n\n  constructor(\n    @Optional()\n    @Inject(DelonFormConfig)\n    private options: DelonFormConfig,\n  ) {\n    super();\n    this.ajv = new Ajv(\n      Object.assign({}, options.ajv, {\n        errorDataPath: 'property',\n        allErrors: true,\n        jsonPointers: true,\n      }),\n    );\n    this.ajv.addFormat(\n      'data-url',\n      /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\n    );\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat(\n      'mobile',\n      /^(0|\\+?86|17951)?1[0-9]{10}$/,\n    );\n    this.ajv.addFormat(\n      'id-card',\n      /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/,\n    );\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[] },\n  ): (value: any) => ErrorData[] {\n    const ingoreKeywords: string[] = []\n      .concat(this.options.ingoreKeywords)\n      .concat(extraOptions.ingoreKeywords);\n\n    return (value: any): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ComponentRef,\n} from '@angular/core';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private widgets: { [type: string]: any } = {};\n\n  private defaultWidget: any;\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): any {\n    if (this.has(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(\n    private registry: WidgetRegistry,\n    private resolver: ComponentFactoryResolver,\n  ) {}\n\n  createWidget(\n    container: ViewContainerRef,\n    type: string,\n  ): ComponentRef<Widget<any>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type);\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<any>>(\n      componentClass,\n    );\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { DelonLocaleService } from '@delon/theme';\n\nimport { DelonFormConfig } from './config';\nimport { di, retrieveSchema, FORMATMAPS, resolveIf } from './utils';\nimport { TerminatorService } from './terminator.service';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { FormProperty } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\nimport { SFButton } from './interface';\nimport { ErrorData } from './errors';\n\nexport function useFactory(\n  schemaValidatorFactory: any,\n  options: DelonFormConfig,\n) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  templateUrl: './sf.component.html',\n  preserveWhitespaces: false,\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory: useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf-search]': `mode === 'search'`,\n    '[class.sf-edit]': `mode === 'edit'`,\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private i18n$: Subscription;\n  public locale: any = {};\n  private _renders = new Map<string, TemplateRef<any>>();\n  private _item: any;\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  rootProperty: FormProperty = null;\n  _formData: any;\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input()\n  layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n\n  /** JSON Schema */\n  @Input()\n  schema: SFSchema;\n\n  /** UI Schema */\n  @Input()\n  ui: SFUISchema;\n\n  /** è¡¨åé»è®¤å¼ */\n  @Input()\n  formData: {};\n\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨åºå® `label` æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input()\n  button: SFButton | 'none' = {};\n\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input()\n  @InputBoolean()\n  liveValidate = true;\n\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input()\n  autocomplete: 'on' | 'off';\n\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input()\n  @InputBoolean()\n  firstVisual = true;\n\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) this._btn.submit = this._btn.search;\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) this._btn.submit = this._btn.edit;\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n\n  /** æ°æ®åæ´æ¶åè° */\n  @Output()\n  readonly formChange = new EventEmitter<{}>();\n\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output()\n  readonly formSubmit = new EventEmitter<{}>();\n\n  /** éç½®è¡¨åæ¶åè° */\n  @Output()\n  readonly formReset = new EventEmitter<{}>();\n\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output()\n  readonly formError = new EventEmitter<ErrorData[]>();\n\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  get value(): any {\n    return this._item;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private cd: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate;\n    this.firstVisual = options.firstVisual;\n    this.autocomplete = options.autocomplete;\n    this.i18n$ = this.i18n.change.subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.coverButtonProperty();\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      Object.keys(schema.properties).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(\n          schema.properties[key] as SFSchema,\n          definitions,\n        );\n        const ui = Object.assign(\n          { widget: property.type },\n          property.format && FORMATMAPS[property.format],\n          typeof property.ui === 'string' ? { widget: property.ui } : null,\n          !property.ui &&\n          Array.isArray(property.enum) &&\n          property.enum.length > 0\n            ? { widget: 'select' }\n            : null,\n          this._defUi,\n          property.ui,\n          uiSchema[uiKey],\n        ) as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel =\n                typeof parentUiSchema.spanLabel === 'undefined'\n                  ? 5\n                  : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl =\n                typeof parentUiSchema.spanControl === 'undefined'\n                  ? 19\n                  : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined'\n                  ? null\n                  : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null && parentSchema) {\n          const dateEndProperty = parentSchema.properties[ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = Object.assign({}, dateEndProperty.ui, {\n              hidden: true,\n            });\n          } else {\n            ui.end = '';\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (property.items) {\n          uiRes[uiKey]['$items'] = uiRes[uiKey]['$items'] || {};\n          inFn(\n            property.items,\n            property.items,\n            (uiSchema[uiKey] || {})['$items'] || {},\n            ui,\n            uiRes[uiKey]['$items'],\n          );\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties).forEach(key => {\n        const property = schema.properties[key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = Object.assign(\n      <SFUISchemaItem>{\n        onlyVisual: this.options.onlyVisual,\n        size: this.options.size,\n        liveValidate: this.liveValidate,\n        firstVisual: this.firstVisual,\n      },\n      this.options.ui,\n      _schema.ui,\n      this.ui['*'],\n    );\n\n    // root\n    this._ui = Object.assign({}, this._defUi);\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    if (this._ui.debug) {\n      di('cover schema & ui', this._ui, _schema);\n    }\n  }\n\n  private coverButtonProperty() {\n    this._btn = Object.assign(\n      { render: {} },\n      this.locale,\n      this.options.button,\n      this.button,\n    );\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render.grid) {\n        this._btn.render.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render.spanLabelFixed == null) {\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (\n        !this._btn.render.class &&\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\n      ) {\n        this._btn.render.class = 'text-center';\n      }\n    } else {\n      this._btn.render.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n    if (this._ui.debug) di('button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(): void {\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<{}>) {\n    const property = this.rootProperty.searchProperty(path);\n    if (!property) {\n      console.warn(`æªæ¾å°è·¯å¾ï¼${path}`);\n      return;\n    }\n    if (this._renders.has(path)) {\n      console.warn(`å·²ç»å­å¨ç¸åèªå®ä¹è·¯å¾ï¼${path}`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\n    pui._render = templateRef;\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\n      if (!pui._render) pui._render = tpl;\n    });\n  }\n\n  validator() {\n    this.rootProperty._runValidation();\n    const errors = this.rootProperty.errors;\n    this._valid = !(errors && errors.length);\n    if (!this._valid) this.formError.emit(errors);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema) {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined')\n      throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(\n      this._schema,\n      this._ui,\n      this.formData,\n    );\n    this.attachCustomRender();\n\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = Object.assign({}, this.formData, value);\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors);\n      this.cd.detectChanges();\n    });\n\n    this.reset();\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false) {\n    this.rootProperty.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cd.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return ;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    this.i18n$.unsubscribe();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  OnDestroy,\n} from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\nimport { TerminatorService } from './terminator.service';\nimport { SFUISchemaItem } from './schema/ui';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  template: `<ng-template #target></ng-template>`,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<any>;\n  widget: Widget<any> = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef })\n  container: ViewContainerRef;\n\n  constructor(\n    private widgetFactory: WidgetFactory,\n    private terminator: TerminatorService,\n  ) {}\n\n  onWidgetInstanciated(widget: Widget<any>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => {\n      this.ngOnDestroy();\n    });\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(\n      this.container,\n      (this.formProperty.ui.widget || this.formProperty.schema.type) as string,\n    );\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    this.formProperty.ui.__destroy = true;\n    this.ref.destroy();\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  OnChanges,\n} from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf-fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector(\n        '.ant-form-item-control-wrapper',\n      );\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  preserveWhitespaces: false\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  // tslint:disable-next-line:no-input-rename\n  @Input('sf-template') path: string;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private table: SFComponent,\n  ) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(\n      this.path.startsWith('/') ? this.path : `/` + this.path,\n      this.templateRef,\n    );\n  }\n}\n","import {\n  HostBinding,\n  Optional,\n  AfterViewInit,\n  Inject,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { di } from './utils';\nimport { FormProperty } from './model/form.property';\nimport { ArrayProperty } from './model/array.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem } from './schema/ui';\nimport { ErrorData } from './errors';\nimport { SFComponent } from './sf.component';\n\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: SFUISchemaItem;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean {\n    if (this.schema.readOnly === true) return true;\n\n    return null;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(filter(w => w != null))\n      .subscribe((errors: ErrorData[]) => {\n        if (this.ui.debug) di('errorsChanges', this.formProperty.path, errors);\n\n        // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n        if (this.firstVisual) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? errors[0].message : '';\n\n          if (this.ui.__destroy !== true) this.cd.detectChanges();\n        }\n        this.firstVisual = true;\n      });\n  }\n\n  setValue(value: any) {\n    this.formProperty.setValue(value, false);\n    if (this.ui.debug) {\n      di('valueChanges', this.formProperty.path, this.formProperty);\n    }\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges() {\n    this.formProperty.root.widget.cd.markForCheck();\n  }\n\n  abstract reset(value: any);\n}\n\nexport class ControlWidget extends Widget<FormProperty> {\n  reset(value: any) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty>\n  implements AfterViewInit {\n  reset(value: any) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(filter(() => this.ui.__destroy !== true))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty>\n  implements AfterViewInit {\n  reset(value: any) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(filter(() => this.ui.__destroy !== true))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ObjectLayoutWidget } from '../../widget';\nimport { SFGridSchema } from '../../schema/ui';\nimport { FormProperty } from '../../model/form.property';\n\n@Component({\n  selector: 'sf-object',\n  template: `\n  <ng-container *ngIf=\"grid; else noGrid\">\n    <div nz-row [nzGutter]=\"grid.gutter\">\n      <ng-container *ngFor=\"let i of list\">\n        <ng-container *ngIf=\"i.property.visible && i.show\">\n          <div nz-col\n            [nzSpan]=\"i.grid.span\" [nzOffset]=\"i.grid.offset\"\n            [nzXs]=\"i.grid.xs\" [nzSm]=\"i.grid.sm\" [nzMd]=\"i.grid.md\"\n            [nzLg]=\"i.grid.lg\" [nzXl]=\"i.grid.xl\" [nzXXl]=\"i.grid.xxl\">\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-template #noGrid>\n    <ng-container *ngFor=\"let i of list\">\n      <ng-container *ngIf=\"i.property.visible && i.show\">\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n      </ng-container>\n    </ng-container>\n  </ng-template>`,\n  preserveWhitespaces: false,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: any[] = [];\n\n  ngOnInit(): void {\n    this.grid = this.ui.grid;\n    const list: any[] = [];\n    for (const key of this.formProperty.propertiesId) {\n      const property = this.formProperty.properties[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || this.grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  preserveWhitespaces: false\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return (\n      this.schema.maxItems &&\n      (this.formProperty.properties as any[]).length >= this.schema.maxItems\n    );\n  }\n\n  get l() {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  ngOnInit(): void {\n    if (this.ui.grid && this.ui.grid.arraySpan)\n      this.arraySpan = this.ui.grid.arraySpan;\n\n    this.addTitle = this.ui.addTitle || this.l['addText'];\n    this.addType = this.ui.addType || 'dashed';\n    this.removeTitle =\n      this.ui.removable === false ? null : this.ui.removeTitle || this.l['removeText'];\n  }\n\n  addItem() {\n    this.formProperty.add(null);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template #ipt>\n      <input nz-input\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.type]=\"ui.type || 'text'\"\n        [attr.placeholder]=\"ui.placeholder\"\n        [attr.autocomplete]=\"ui.autocomplete\"\n        [attr.autoFocus]=\"ui.autofocus\">\n    </ng-template>\n\n    <ng-container *ngIf=\"type === 'addon'; else ipt\">\n      <nz-input-group\n        [nzAddOnBefore]=\"ui.addOnBefore\" [nzAddOnAfter]=\"ui.addOnAfter\"\n        [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\" [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\n        [nzPrefix]=\"ui.prefix\" [nzPrefixIcon]=\"ui.prefixIcon\"\n        [nzSuffix]=\"ui.suffix\" [nzSuffixIcon]=\"ui.suffixIcon\">\n        <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\n      </nz-input-group>\n    </ng-container>\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class StringWidget extends ControlWidget implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    this.type = !!(\n      this.ui.addOnAfter ||\n      this.ui.addOnBefore ||\n      this.ui.addOnAfterIcon ||\n      this.ui.addOnBeforeIcon ||\n      this.ui.prefix ||\n      this.ui.prefixIcon ||\n      this.ui.suffix ||\n      this.ui.suffixIcon\n    )\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: any) {\n    if (this.schema.format === 'color' && !value) {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-input-number\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzMin]=\"min\"\n      [nzMax]=\"max\"\n      [nzStep]=\"step\"\n      [nzFormatter]=\"formatter\"\n      [nzParser]=\"parser\"\n      [nzPrecision]=\"ui.precision\"\n      [nzPlaceHolder]=\"ui.placeholder || ''\">\n    </nz-input-number>\n  </sf-item-wrap>`,\n  preserveWhitespaces: false,\n})\nexport class NumberWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter = value => value;\n  parser = value => value;\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    if (typeof schema.minimum !== 'undefined') {\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\n    }\n    if (typeof schema.maximum !== 'undefined') {\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\n    }\n    this.step = schema.multipleOf || 1;\n    if (schema.type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n    if (ui.prefix != null) {\n      ui.formatter = value => `${ui.prefix} ${value}`;\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => `${value} ${ui.unit}`;\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { ControlWidget } from '../../widget';\nimport { toBool } from '../../utils';\nimport { FormProperty } from '../../model/form.property';\n\n@Component({\n  selector: 'sf-date',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <ng-container [ngSwitch]=\"mode\">\n\n      <nz-month-picker *ngSwitchCase=\"'month'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      ></nz-month-picker>\n\n      <nz-week-picker *ngSwitchCase=\"'week'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n      ></nz-week-picker>\n\n      <nz-range-picker *ngSwitchCase=\"'range'\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzDisabledTime]=\"ui.disabledTime\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n        [nzRanges]=\"ui.ranges\"\n        [nzShowTime]=\"ui.showTime\"\n        (nzOnOk)=\"_ok($event)\"\n      ></nz-range-picker>\n\n      <nz-date-picker *ngSwitchDefault\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzFormat]=\"displayFormat\"\n        [(ngModel)]=\"displayValue\"\n        (ngModelChange)=\"_change($event)\"\n        [nzAllowClear]=\"i.allowClear\"\n        [nzClassName]=\"ui.className\"\n        [nzDisabledDate]=\"ui.disabledDate\"\n        [nzLocale]=\"ui.locale\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzPopupStyle]=\"ui.popupStyle\"\n        [nzDropdownClassName]=\"ui.dropdownClassName\"\n        (nzOnOpenChange)=\"_openChange($event)\"\n        [nzDisabledTime]=\"ui.disabledTime\"\n        [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n        [nzShowTime]=\"ui.showTime\"\n        [nzShowToday]=\"i.showToday\"\n        (nzOnOk)=\"_ok($event)\"\n      ></nz-date-picker>\n    </ng-container>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class DateWidget extends ControlWidget implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] = null;\n  displayFormat: string;\n  format: string;\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.mode = ui.mode || 'date';\n    this.flatRange = ui.end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!ui.displayFormat) {\n      switch (this.mode) {\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = ui.displayFormat;\n    }\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'YYYY-MM-DD HH:mm:ss';\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(ui.allowClear, true),\n      // nz-date-picker\n      showToday: toBool(ui.showToday, true),\n    };\n  }\n\n  reset(value: any) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n  }\n\n  _change(value: Date | Date[]) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? value.map(d => format(d, this.format))\n      : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent.properties[this.ui.end];\n  }\n\n  private setEnd(value: any) {\n    this.endProperty.setValue(value, true);\n  }\n\n  private toDate(value: any) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport format from 'date-fns/format';\nimport { toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-time',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-time-picker\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"i.displayFormat\"\n      [nzAllowEmpty]=\"i.allowEmpty\"\n      [nzClearText]=\"i.clearText\"\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n      [nzDisabledHours]=\"ui.disabledHours\"\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n      [nzHourStep]=\"i.hourStep\"\n      [nzMinuteStep]=\"i.minuteStep\"\n      [nzSecondStep]=\"i.secondStep\"\n      [nzPopupClassName]=\"ui.popupClassName\"\n      >\n    </nz-time-picker>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'HH:mm:ss';\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: any) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) value += ':00';\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(\n        Date.UTC(\n          1970,\n          0,\n          1,\n          value.getHours(),\n          value.getMinutes(),\n          value.getSeconds(),\n        ),\n      );\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\n\n@Component({\n  selector: 'sf-radio',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-radio-group\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzName]=\"id\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\">\n      <ng-container *ngIf=\"styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n      <ng-container *ngIf=\"!styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio-button\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n    </nz-radio-group>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class RadioWidget extends ControlWidget {\n  data: any[] = [];\n  styleType: boolean;\n\n  reset(value: any) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => (this.data = list),\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle = ``;\n  inited = false;\n\n  get l() {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  reset(value: any) {\n    this.inited = false;\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.allChecked = false;\n        this.indeterminate = false;\n        this.labelTitle = list.length === 0 ? '' : this.schema.title;\n        this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\n\n        this.updateAllChecked();\n        this.inited = true;\n        this.cd.detectChanges();\n      },\n    );\n  }\n\n  _setValue(value: any) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: any[]) {\n    this.data.forEach(\n      item => (item.checked = values.indexOf(item.value) !== -1),\n    );\n    this.notifySet();\n  }\n\n  onAllChecked(e: Event) {\n    e.stopPropagation();\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked === false)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    // issues: https://github.com/NG-ZORRO/ng-zorro-antd/issues/2025\n    setTimeout(() => this.detectChanges());\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-switch\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzCheckedChildren]=\"ui.checkedChildren\"\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\n    </nz-switch>\n  </sf-item-wrap>`,\n  preserveWhitespaces: false,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-textarea',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <textarea nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [nzAutosize]=\"autosize\">\n    </textarea>\n\n  </sf-item-wrap>`,\n  preserveWhitespaces: false,\n})\nexport class TextareaWidget extends ControlWidget implements OnInit {\n  autosize: any = true;\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-select',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-select\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzAllowClear]=\"i.allowClear\"\n      [nzAutoFocus]=\"i.autoFocus\"\n      [nzDropdownClassName]=\"i.dropdownClassName\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzServerSearch]=\"i.serverSearch\"\n      [nzMaxMultipleCount]=\"i.maxMultipleCount\"\n      [nzMode]=\"i.mode\"\n      [nzNotFoundContent]=\"i.notFoundContent\"\n      [nzShowSearch]=\"i.showSearch\"\n      (nzOpenChange)=\"openChange($event)\"\n      (nzOnSearch)=\"searchChange($event)\"\n      (nzScrollToBottom)=\"scrollToBottom($event)\">\n      <ng-container *ngIf=\"!hasGroup\">\n        <nz-option\n          *ngFor=\"let o of data\"\n          [nzLabel]=\"o.label\"\n          [nzValue]=\"o.value\"\n          [nzDisabled]=\"o.disabled\">\n        </nz-option>\n      </ng-container>\n      <ng-container *ngIf=\"hasGroup\">\n        <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\n          <nz-option\n            *ngFor=\"let o of i.children\"\n            [nzLabel]=\"o.label\"\n            [nzValue]=\"o.value\"\n            [nzDisabled]=\"o.disabled\">\n          </nz-option>\n        </nz-option-group>\n      </ng-container>\n    </nz-select>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class SelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  hasGroup = false;\n\n  ngOnInit(): void {\n    this.i = {\n      allowClear: this.ui.allowClear,\n      autoFocus: toBool(this.ui.autoFocus, false),\n      dropdownClassName: this.ui.dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(this.ui.dropdownMatchSelectWidth, true),\n      serverSearch: toBool(this.ui.serverSearch, false),\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\n      mode: this.ui.mode || 'default',\n      notFoundContent: this.ui.notFoundContent || 'æ æ³æ¾å°',\n      showSearch: toBool(this.ui.showSearch, true),\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.hasGroup = list.filter(w => w.group === true).length > 0;\n        this.detectChanges();\n      },\n    );\n  }\n\n  change(values: any) {\n    if (this.ui.change) this.ui.change(values);\n    this.setValue(values);\n  }\n\n  openChange(value: any) {\n    if (this.ui.openChange) this.ui.openChange(value);\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((res: any[]) => {\n        this.data = res;\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom(value: any) {\n    if (this.ui.scrollToBottom) this.ui.scrollToBottom(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { toBool, getData } from '../../utils';\nimport { NzTreeNode, NzFormatEmitEvent } from 'ng-zorro-antd';\nimport { map } from 'rxjs/operators';\nimport { deepCopy } from '@delon/util';\n\n@Component({\n  selector: 'sf-tree-select',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-tree-select\n      [nzAllowClear]=\"i.allowClear\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzDisabled]=\"disabled\"\n      [nzShowSearch]=\"i.showSearch\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzDropdownStyle]=\"ui.dropdownStyle\"\n      [nzMultiple]=\"i.multiple\"\n      [nzSize]=\"ui.size\"\n      [nzCheckable]=\"i.checkable\"\n      [nzShowExpand]=\"i.showExpand\"\n      [nzShowLine]=\"i.showLine\"\n      [nzAsyncData]=\"i.asyncData\"\n      [nzNodes]=\"data\"\n      [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n      [nzDefaultExpandedKeys]=\"i.defaultExpandedKeys\"\n      [nzDisplayWith]=\"i.displayWith\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      (nzExpandChange)=\"expandChange($event)\">\n    </nz-tree-select>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  private dc() {\n    // Muse wait `nz-tree-select` write values\n    // https://github.com/NG-ZORRO/ng-zorro-antd/issues/2316\n    setTimeout(() => this.detectChanges(), 1000);\n  }\n\n  private tranData(list: SFSchemaEnum[]) {\n    return list.map(node => new NzTreeNode(deepCopy(node) as any));\n  }\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title),\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData)\n      .pipe(map(list => this.tranData(list)))\n      .subscribe(list => {\n        this.data = list;\n        this.dc();\n      });\n  }\n\n  change(value: any) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e)\n      .pipe(map((list: SFSchemaEnum[]) => this.tranData(list)))\n      .subscribe(res => {\n        e.node.clearChildren();\n        e.node.addChildren(res);\n        this.dc();\n      });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\n\n@Component({\n  selector: 'sf-tag',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-tag\n      *ngFor=\"let i of data\"\n      nzMode=\"checkable\"\n      [nzChecked]=\"i.checked\"\n      (nzAfterClose)=\"_afterClose()\"\n      (nzOnClose)=\"_close($event)\"\n      (nzCheckedChange)=\"onChange(i)\">\n      {{i.label}}\n    </nz-tag>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: any) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { UploadFile, UploadChangeParam, NzModalService } from 'ng-zorro-antd';\nimport { ControlWidget } from '../../widget';\nimport { getData, toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-upload',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-upload\n      [nzType]=\"i.type\"\n      [nzFileList]=\"fileList\"\n      [nzDisabled]=\"disabled\"\n      [nzAction]=\"i.action\"\n      [nzAccept]=\"i.accept\"\n      [nzLimit]=\"i.limit\"\n      [nzSize]=\"i.size\"\n      [nzFileType]=\"i.fileType\"\n      [nzHeaders]=\"ui.headers\"\n      [nzData]=\"ui.data\"\n      [nzListType]=\"i.listType\"\n      [nzMultiple]=\"i.multiple\"\n      [nzName]=\"i.name\"\n      [nzShowUploadList]=\"i.showUploadList\"\n      [nzWithCredentials]=\"i.withCredentials\"\n      [nzRemove]=\"ui.remove\"\n      [nzPreview]=\"handlePreview\"\n      (nzChange)=\"change($event)\">\n      <ng-container [ngSwitch]=\"btnType\">\n        <ng-container *ngSwitchCase=\"'plus'\">\n          <i nz-icon type=\"plus\"></i>\n          <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'drag'\">\n          <p class=\"ant-upload-drag-icon\"><i nz-icon type=\"inbox\"></i></p>\n          <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\n          <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <button type=\"button\" nz-button>\n            <i nz-icon type=\"upload\"></i><span [innerHTML]=\"i.text\"></span>\n          </button>\n        </ng-container>\n      </ng-container>\n    </nz-upload>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class UploadWidget extends ControlWidget implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  constructor(cd: ChangeDetectorRef, private modalSrv: NzModalService) {\n    super(cd);\n  }\n\n  ngOnInit(): void {\n    this.i = {\n      type: this.ui.type || 'select',\n      text: this.ui.text || 'ç¹å»ä¸ä¼ ',\n      action: this.ui.action || '',\n      accept: this.ui.accept || '',\n      limit: this.ui.limit == null ? 0 : +this.ui.limit,\n      size: this.ui.fileSize == null ? 0 : +this.ui.fileSize,\n      fileType: this.ui.fileType || '',\n      listType: this.ui.listType || 'text',\n      multiple: toBool(this.ui.multiple, false),\n      name: this.ui.name || 'file',\n      showUploadList: toBool(this.ui.showUploadList, true),\n      withCredentials: toBool(this.ui.withCredentials, false),\n      resReName: (this.ui.resReName || '').split('.'),\n    };\n    if (this.i.listType === 'picture-card') this.btnType = 'plus';\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint =\n        this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this.notify(args.fileList);\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.fileList = list as UploadFile[];\n        this.notify(this.fileList);\n        this.detectChanges();\n      },\n    );\n  }\n\n  private notify(fileList: UploadFile[]) {\n    const res = fileList.map(item =>\n      deepGet(item.response, this.i.resReName, item.response),\n    );\n    this.formProperty.setValue(\n      this.i.multiple === true ? res : res.pop(),\n      false,\n    );\n  }\n\n  handlePreview = (file: UploadFile) => {\n    this.modalSrv\n      .create({\n        nzContent: `<img src=\"${file.url ||\n          file.thumbUrl}\" class=\"img-fluid\" />`,\n        nzFooter: null,\n      })\n      .afterClose.subscribe(() => this.detectChanges());\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-transfer',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-transfer\n      [nzDataSource]=\"list\"\n      [nzTitles]=\"i.titles\"\n      [nzOperations]=\"i.operations\"\n      [nzListStyle]=\"ui.listStyle\"\n      [nzItemUnit]=\"i.itemUnit\"\n      [nzItemsUnit]=\"i.itemsUnit\"\n      [nzShowSearch]=\"ui.showSearch\"\n      [nzFilterOption]=\"ui.filterOption\"\n      [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n      [nzNotFoundContent]=\"ui.notFoundContent\"\n      [nzCanMove]=\"_canMove\"\n      (nzChange)=\"_change($event)\"\n      (nzSearchChange)=\"_searchChange($event)\"\n      (nzSelectChange)=\"_selectChange($event)\">\n    </nz-transfer>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: any[] = [];\n  i: any;\n  private _data: any[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || 'é¡¹',\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) formData = [formData];\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) item.direction = 'right';\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: any): Observable<any[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: any) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter(w => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: any) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n  }\n\n  _selectChange(options: any) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.cd.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-slider\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzRange]=\"ui.range\"\n      [nzMin]=\"min\"\n      [nzMax]=\"max\"\n      [nzStep]=\"step\"\n      [nzMarks]=\"marks\"\n      [nzDots]=\"ui.dots\"\n      [nzIncluded]=\"included\"\n      [nzVertical]=\"ui.vertical\"\n      [nzTipFormatter]=\"_formatter\"\n      (nzOnAfterChange)=\"_afterChange($event)\">\n    </nz-slider>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class SliderWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: any;\n  included: boolean;\n\n  ngOnInit(): void {\n    this.min = this.schema.minimum || 0;\n    this.max = this.schema.maximum || 100;\n    this.step = this.schema.multipleOf || 1;\n\n    this.marks = this.ui.marks || null;\n    const included = this.ui.included;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: any) => {\n    if (this.ui.formatter) return this.ui.formatter(value);\n    return value;\n  }\n\n  _afterChange(value: any) {\n    if (this.ui.afterChange) this.ui.afterChange(value);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template\n      [ngTemplateOutlet]=\"$any(ui)._render\"\n      [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"></ng-template>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class CustomWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { toBool } from '../../utils';\n\n@Component({\n  selector: 'sf-rate',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-rate\n      [nzDisabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzAllowClear]=\"allowClear\"\n      [nzAllowHalf]=\"allowHalf\"\n      [nzAutoFocus]=\"autoFocus\"\n      [nzCount]=\"count\"></nz-rate>\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class RateWidget extends ControlWidget implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n  ngOnInit(): void {\n    this.count = this.schema.maximum || 5;\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(this.ui.allowClear, true);\n    this.autoFocus = toBool(this.ui.autoFocus, false);\n    this.hasText = !!this.ui.text;\n  }\n\n  genText() {\n    return this.hasText\n      ? (this.ui.text as string).replace('{{value}}', this.formProperty.value)\n      : '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { startWith, map, flatMap, debounceTime } from 'rxjs/operators';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\n\nexport const EMAILSUFFIX = [\n  'qq.com',\n  '163.com',\n  'gmail.com',\n  '126.com',\n  'aliyun.com',\n];\n\n@Component({\n  selector: 'sf-autocomplete',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n      <input nz-input [nzAutocomplete]=\"auto\"\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.placeholder]=\"ui.placeholder\"\n        autocomplete=\"off\">\n      <nz-autocomplete #auto\n        [nzBackfill]=\"i.backfill\"\n        [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\n        [nzWidth]=\"i.width\"\n        (selectionChange)=\"setValue($event?.nzValue)\">\n        <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i.label\">{{i.label}}</nz-auto-option>\n      </nz-autocomplete>\n    </sf-item-wrap>\n    `,\n  preserveWhitespaces: false,\n})\nexport class AutoCompleteWidget extends ControlWidget implements OnInit {\n  i: any;\n  fixData: SFSchemaEnum[] = [];\n  list: Observable<SFSchemaEnum[]>;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n\n  ngOnInit(): void {\n    this.i = {\n      backfill: toBool(this.ui.backfill, false),\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\n      width: this.ui.width || undefined,\n    };\n\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\n    if (typeof this.filterOption === 'boolean') {\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n\n    this.isAsync = !!this.ui.asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n    this.list = this.formProperty.valueChanges.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(\n        input =>\n          this.isAsync ? this.ui.asyncData(input) : this.filterData(input),\n      ),\n      map(res => getEnum(res, null, this.schema.readOnly)),\n    );\n  }\n\n  reset(value: any) {\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(EMAILSUFFIX, null, this.schema.readOnly);\n        break;\n      default:\n        this.fixData = getCopyEnum(\n          this.schema.enum,\n          this.formProperty.formData,\n          this.schema.readOnly\n        );\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(\n          this.fixData.filter(option => this.filterOption(input, option)),\n        );\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(\n      !value || ~value.indexOf('@')\n        ? []\n        : this.fixData.map(domain => `${value}@${domain.label}`),\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData, toBool } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-cascader',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-cascader\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"_change($event)\"\n      [nzOptions]=\"data\"\n      [nzAllowClear]=\"ui.allowClear\"\n      [nzAutoFocus]=\"ui.autoFocus\"\n      [nzChangeOn]=\"ui.changeOn\"\n      [nzChangeOnSelect]=\"ui.changeOnSelect\"\n      [nzColumnClassName]=\"ui.columnClassName\"\n      [nzExpandTrigger]=\"ui.expandTrigger\"\n      [nzMenuClassName]=\"ui.menuClassName\"\n      [nzMenuStyle]=\"ui.menuStyle\"\n      [nzLabelProperty]=\"ui.labelProperty\"\n      [nzValueProperty]=\"ui.valueProperty\"\n      [nzLoadData]=\"loadData\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzShowArrow]=\"showArrow\"\n      [nzShowInput]=\"showInput\"\n      [nzShowSearch]=\"ui.showSearch\"\n      (nzClear)=\"_clear($event)\"\n      (nzVisibleChange)=\"_visibleChange($event)\"\n      (nzSelect)=\"_select($event)\"\n      (nzSelectionChange)=\"_selectionChange($event)\">\n    </nz-cascader>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class CascaderWidget extends ControlWidget implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: any;\n\n  ngOnInit(): void {\n    this.clearText = this.ui.clearText || 'æ¸é¤';\n    this.showArrow = toBool(this.ui.showArrow, true);\n    this.showInput = toBool(this.ui.showInput, true);\n    this.triggerAction = this.ui.triggerAction || ['click'];\n    if (!!this.ui.asyncData) {\n      this.loadData = (node: any, index: number) =>\n        (this.ui.asyncData as any)(node, index, this);\n    }\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  _visibleChange(status: boolean) {\n    this.ui.visibleChange && this.ui.visibleChange(status);\n  }\n\n  _change(value: string) {\n    this.setValue(value);\n    this.ui.change && this.ui.change(value);\n  }\n\n  _selectionChange(options: any) {\n    this.ui.selectionChange && this.ui.selectionChange(options);\n  }\n\n  _select(options: any) {\n    this.ui.select && this.ui.select(options);\n  }\n\n  _clear(options: any) {\n    this.ui.clear && this.ui.clear(options);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { ControlWidget } from '../../widget';\nimport { getData, getEnum } from '../../utils';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { FormProperty, PropertyGroup } from '../../model/form.property';\nimport { NzMentionComponent } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'sf-mention',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n      <nz-mention #mentions\n        [nzSuggestions]=\"data\"\n        [nzValueWith]=\"i.valueWith\"\n        [nzLoading]=\"loading\"\n        [nzNotFoundContent]=\"i.notFoundContent\"\n        [nzPlacement]=\"i.placement\"\n        [nzPrefix]=\"i.prefix\"\n        (nzOnSelect)=\"_select($event)\"\n        (nzOnSearchChange)=\"_search($event)\">\n\n        <ng-container *ngIf=\"ui.inputStyle !== 'textarea'\">\n          <input nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            autocomplete=\"off\">\n        </ng-container>\n\n        <ng-container *ngIf=\"ui.inputStyle === 'textarea'\">\n          <textarea nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            [nzAutosize]=\"ui.autosize\">\n          </textarea>\n        </ng-container>\n\n      </nz-mention>\n\n    </sf-item-wrap>\n    `,\n  preserveWhitespaces: false,\n})\nexport class MentionWidget extends ControlWidget implements OnInit {\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    this.i = {\n      valueWith: this.ui.valueWith || (item => item.label),\n      notFoundContent:\n        this.ui.notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: this.ui.placement || 'bottom',\n      prefix: this.ui.prefix || '@',\n    };\n    const min =\n        typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1,\n      max =\n        typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (\n        value: any,\n        formProperty: FormProperty,\n        form: PropertyGroup,\n      ) => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      };\n    }\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: any) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\n      .pipe(tap(() => (this.loading = false)), map(res => getEnum(res, null, this.schema.readOnly)))\n      .subscribe(res => {\n        this.data = res;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    {{ value || ui.defaultText || '-' }}\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TextWidget extends ControlWidget implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ObjectWidget } from './object/object.widget';\nimport { ArrayWidget } from './array/array.widget';\nimport { StringWidget } from './string/string.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { DateWidget } from './date/date.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { UploadWidget } from './upload/upload.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { TextWidget } from './text/text.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { DelonUtilModule } from '@delon/util';\nimport { DelonLocaleModule } from '@delon/theme';\n\nimport { DelonFormConfig } from './config';\nimport {\n  SchemaValidatorFactory,\n  AjvSchemaValidatorFactory,\n} from './validator.factory';\nimport { SFComponent } from './sf.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\nimport { SFFixedDirective } from './sf-fixed.directive';\n\nconst COMPONENTS = [\n  SFComponent,\n  SFItemComponent,\n  SFItemWrapComponent,\n  SFTemplateDirective,\n  SFFixedDirective,\n];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { TextWidget } from './widgets/text/text.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, NgZorroAntdModule],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        DelonFormConfig,\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n"]}