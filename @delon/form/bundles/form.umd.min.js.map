{"version":3,"sources":["ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","node_modules/tslib/tslib.es6.js","ng://@delon/form/src/utils.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"names":["ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","this","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","uiEmailSuffixes","Injectable","args","providedIn","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","FORMATMAPS","date-time","widget","showTime","date","full-date","time","full-time","week","mode","month","uri","email","color","","isBlank","toBool","defaultValue","toBoolean","di","ui","_i","debug","console","warn","retrieveSchema","schema","definitions","$refSchema","findSchemaDefinition","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","localSchema","__rest","indexOf","getOwnPropertySymbols","resolveIf","properties","allKeys","keys","ifKeys","detectKey","then","hasElse","else","visibleIf","visibleElse","forEach","cond","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","_options","_value","_errors","_objErrors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","schemaValidator","createValidatorFn","default","_parent","_root","root","PropertyGroup","_path","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","idx","message","_custom","mergeErrors","newErrors","emitFormat","v","params","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ArrayProperty","formPropertyFactory","options","tick","pos","isNaN","setValue","clearErrors","resetProperties","_hasValue","addProperty","newProperty","createProperty","items","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","splice","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","ObjectProperty","_propertiesId","createProperties","orderedProperties","orderProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","title","StringProperty","FormPropertyFactory","refSchema","pop","TypeError","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","WidgetRegistry","widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","cdr","i18n","_renders","Map","_valid","_inited","locale","layout","loading","formChange","EventEmitter","formSubmit","formReset","formError","i18n$","change","coverButtonProperty","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","coverProperty","isHorizontal","_schema","inFn","parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","inIfFn","size","_ui","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","changes","refreshSchema","_addTpl","templateRef","set","attachCustomRender","tpl","_render","newSchema","newUI","_formData","cleanRootSub","errorsChanges","Promise","resolve","unsubscribe","ngOnDestroy","Component","selector","template","providers","provide","deps","host","[class.sf]","[class.sf__inline]","[class.sf__search]","[class.sf__edit]","[class.sf__no-error]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","DelonLocaleService","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","unsubscribe$","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","takeUntil","markForCheck","Injector","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","addTitle","l","addText","addType","removeTitle","removable","removeText","addItem","removeItem","AutoCompleteWidget","fixData","typing","isAsync","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_select","select","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","CustomWidget","DateWidget","displayValue","flatRange","displayFormat","allowClear","showToday","compCd","setTimeout","toDate","endProperty","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","_a","valueWith","notFoundContent","placement","prefix","autosize","min","count","mentionChild","getMentions","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","step","trunc","val","floor","ObjectWidget","showTitle","_c","propertiesId","_d","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","text","SelectWidget","hasGroup","autoClearSearchValue","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","Infinity","showSearch","tokenSeparators","maxTagCount","group","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnBefore","addOnAfterIcon","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_afterClose","afterClose","_close","onClose","TextWidget","TextareaWidget","TimeWidget","allowEmpty","defaultOpenValue","hideDisabledOptions","hourStep","minuteStep","nzMinuteStep","secondStep","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handlePreview","file","preview","_url","thumbUrl","url","get","NzModalService","nzContent","nzFooter","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","urlReName","beforeUpload","customRequest","directory","openFileDialogOnClick","hint","_getValue","deepGet","response","NzWidgetRegistry","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","NgZorroAntdModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `å¸å°æ¨¡å¼åºé`,\n  $ref: `æ æ³æ¾å°å¼ç¨{ref}`,\n  additionalItems: `ä¸åè®¸è¶è¿{ref}`,\n  additionalProperties: `ä¸åè®¸æé¢å¤çå±æ§`,\n  anyOf: `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  dependencies: `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  enum: `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  format: `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  type: `ç±»ååºå½æ¯ {type}`,\n  required: `å¿å¡«é¡¹`,\n  maxLength: `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  minLength: `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  minimum: `å¿é¡» {comparison}{limit}`,\n  formatMinimum: `å¿é¡» {comparison}{limit}`,\n  maximum: `å¿é¡» {comparison}{limit}`,\n  formatMaximum: `å¿é¡» {comparison}{limit}`,\n  maxItems: `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  minItems: `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  maxProperties: `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  minProperties: `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  multipleOf: `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  not: `ä¸åºå½å¹é \"not\" schema`,\n  oneOf: `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  pattern: `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  uniqueItems: `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  custom: `æ ¼å¼ä¸æ­£ç¡®`,\n  propertyNames: `å±æ§å \"{propertyName}\" æ æ`,\n  patternRequired: `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  switch: `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  const: `åºå½ç­äºå¸¸é`,\n  contains: `åºå½åå«ä¸ä¸ªææé¡¹`,\n  formatExclusiveMaximum: `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  formatExclusiveMinimum: `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  if: `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  [key: string]: any;\n\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  params?: { [key: string]: any };\n  message?: string;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup,\n  ) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { ERRORSDEFAULT } from './errors';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean = true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean = false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean = false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat?: string = 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat?: string = 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat?: string = 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat?: string = 'x';\n  /**\n   * æå® `format: 'email'` çé»è®¤Emailåç¼\n   */\n  uiEmailSuffixes?: string[] = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { deepCopy, toBoolean } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  date: { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  time: { widget: 'time' },\n  'full-time': { widget: 'time' },\n  week: { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  month: { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  uri: { widget: 'upload' },\n  email: { widget: 'autocomplete', type: 'email' },\n  color: { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  value = toBoolean(value, true);\n  return value == null ? defaultValue : value;\n}\n\nexport function di(ui: SFUISchema, ...args) {\n  if (ui.debug) {\n    // tslint:disable-next-line:no-console\n    console.warn(...args);\n  }\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\n\n  if (!schema.if.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties);\n  const ifKeys = Object.keys(schema.if.properties);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then.required);\n  schema.required = schema.required.concat(schema.then.required);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else.required);\n    schema.required = schema.required.concat(schema.else.required);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if.properties[key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\n  });\n\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) schema.else.required.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: any,\n  asyncArgs?: any,\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map(list => getEnum(list, formData, schema.readOnly)));\n  }\n  return of(getCopyEnum(schema.enum, formData, schema.readOnly));\n}\n","import { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty>;\n  private _errors: ErrorData[] = null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[]>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    private _options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug,\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = this as PropertyGroup;\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type;\n  }\n\n  get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root || ((this as any) as PropertyGroup);\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(onlySelf = false, emitValueEvent = true, emitValidator = true) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach((err, idx: number) => {\n        if (!err.message)\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] || this._options.errors[err.keyword] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err) as string;\n        }\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(\n              /{([\\.a-z0-9]+)}/g,\n              (v: string, key: string) => err.params[key] || '',\n            );\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(valueCheck, visibilityCheck).pipe(\n              map(results => results[0] && results[1]),\n            );\n            propertiesBinding.push(and);\n          } else {\n            console.warn(\n              `Can't find property ${dependencyPath} for visibility check of ${this.path}`,\n            );\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    const value: any[] = [];\n    this.forEachChild((property: ObjectProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items,\n      this.ui.$items,\n      formData,\n      this,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>) {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = this.properties as FormProperty[];\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() {}\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties), this.ui\n        .order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties.forEach(propertyId => {\n      this.properties[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties[propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && this.properties[propertyId]) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    for (const propertyId in this.schema.properties) {\n      this.properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nconst SEQ = '/';\n\nexport class FormPropertyFactory {\n  constructor(\n    private schemaValidatorFactory: SchemaValidatorFactory,\n    private options: DelonFormConfig,\n  ) {}\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SEQ;\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error(\n          'Instanciation of a FormProperty with an unknown parent type: ' + parent.type,\n        );\n      }\n    } else {\n      path = SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (propertyId && ((parent!.schema.required || []) as string[]).indexOf(propertyId.split(SEQ).pop()) !== -1) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if (\n        (schema.type === 'string' || schema.type === 'number') &&\n        !schema.format &&\n        !(ui as SFUISchemaItem).format\n      ) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiDateStringFormat\n              : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiTimeStringFormat\n              : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[], debug: boolean },\n  ): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv: any;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv({\n      ...options.ajv,\n      errorDataPath: 'property',\n      allErrors: true,\n      jsonPointers: true,\n    });\n    this.ajv.addFormat('data-url', /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/);\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat('mobile', /^(0|\\+?86|17951)?1[0-9]{10}$/);\n    this.ajv.addFormat('id-card', /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/);\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ingoreKeywords: string[], debug: boolean },\n  ): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = []\n      .concat(this.options.ingoreKeywords)\n      .concat(extraOptions.ingoreKeywords);\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n        if (extraOptions.debug) {\n          console.warn(e);\n        }\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private widgets: { [type: string]: Widget<FormProperty> } = {};\n\n  private defaultWidget: Widget<FormProperty>;\n\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty> {\n    if (this.has(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry, private resolver: ComponentFactoryResolver) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty>>(\n      componentClass,\n    );\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n} from '@angular/core';\nimport { DelonLocaleService, LocaleData } from '@delon/theme';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { Subscription } from 'rxjs';\n\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton } from './interface';\nimport { FormProperty } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema, FORMATMAPS } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(\n  schemaValidatorFactory: SchemaValidatorFactory,\n  options: DelonFormConfig,\n) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private i18n$: Subscription;\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  locale: LocaleData = {};\n  rootProperty: FormProperty = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input() layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** è¡¨åé»è®¤å¼ */\n  @Input() formData: {};\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨ `spanLabelFixed` åºå®æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input() autocomplete: 'on' | 'off';\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input() @InputBoolean() firstVisual = true;\n  /** æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ */\n  @Input() @InputBoolean() onlyVisual = false;\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n  /**\n   * Whether to load statusï¼when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  /** æ°æ®åæ´æ¶åè° */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** éç½®è¡¨åæ¶åè° */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å±æ§\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getProperty(path: string): FormProperty {\n    return this.rootProperty.searchProperty(path);\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å½åå¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   */\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è®¾ç½®æä¸ªè¡¨ååç´ å±æ§å¼\n   * @param path [è·¯å¾](https://ng-alain.com/form/qa#path)\n   * @param value æ°å¼\n   */\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private cdr: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate;\n    this.firstVisual = options.firstVisual;\n    this.autocomplete = options.autocomplete;\n    this.i18n$ = this.i18n.change.subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.coverButtonProperty();\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      Object.keys(schema.properties).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(schema.properties[key] as SFSchema, definitions);\n        const ui = {\n          widget: property.type,\n          ...(property.format && FORMATMAPS[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0\n            ? { widget: 'select' }\n            : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel =\n                typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl =\n                typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined'\n                  ? null\n                  : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties[ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (property.items) {\n          uiRes[uiKey].$items = uiRes[uiKey].$items || {};\n          inFn(\n            property.items,\n            property.items,\n            (uiSchema[uiKey] || {}).$items || {},\n            ui,\n            uiRes[uiKey].$items,\n          );\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties).forEach(key => {\n        const property = schema.properties[key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render.grid) {\n        this._btn.render.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render.spanLabelFixed == null) {\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (\n        !this._btn.render.class &&\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\n      ) {\n        this._btn.render.class = 'text-center';\n      }\n    } else {\n      this._btn.render.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.loading && Object.keys(changes).length === 1) {\n      this.cdr.detectChanges();\n      return ;\n    }\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    if (this._renders.has(path)) {\n      console.warn(`Duplicate definition \"${path}\" custom widget`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  validator(): this {\n    this.rootProperty._runValidation();\n    const errors = this.rootProperty.errors;\n    this._valid = !(errors && errors.length);\n    if (!this._valid) this.formError.emit(errors);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined')\n      throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(\n      this._schema,\n      this._ui,\n      this.formData,\n    );\n    this.attachCustomRender();\n\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...this.formData, ...value };\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors);\n      this.cdr.detectChanges();\n    });\n\n    return this.reset();\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    this.i18n$.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  template: `\n    <ng-template #target></ng-template>\n  `,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty> = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef })\n  container: ViewContainerRef;\n\n  constructor(private widgetFactory: WidgetFactory, private terminator: TerminatorService) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(this.container, (this.formProperty.ui.widget ||\n      this.formProperty.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(private templateRef: TemplateRef<void>, private table: SFComponent) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith('/') ? this.path : `/` + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, HostBinding, Inject, Injector } from '@angular/core';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\n\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: SFUISchemaItem;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean {\n    if (this.schema.readOnly === true) return true;\n\n    return null;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(\n        takeUntil(this.sfItemComp.unsubscribe$),\n        filter(w => w != null),\n      )\n      .subscribe((errors: ErrorData[]) => {\n        di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n        // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n        if (this.firstVisual) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? errors[0].message : '';\n\n          this.cd.detectChanges();\n        }\n        this.firstVisual = true;\n      });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue);\n}\n\nexport class ControlWidget extends Widget<FormProperty> {\n  reset(value: SFValue) {}\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty> implements AfterViewInit {\n  reset(value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty> implements AfterViewInit {\n  reset(value: SFValue) {}\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LocaleData } from '@delon/theme';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return (\n      this.schema.maxItems &&\n      (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems\n    );\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  ngOnInit(): void {\n    if (this.ui.grid && this.ui.grid.arraySpan) {\n      this.arraySpan = this.ui.grid.arraySpan;\n    }\n\n    this.addTitle = this.ui.addTitle || this.l.addText;\n    this.addType = this.ui.addType || 'dashed';\n    this.removeTitle =\n      this.ui.removable === false ? null : this.ui.removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add(null);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd';\nimport { of, Observable } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n})\nexport class AutoCompleteWidget extends ControlWidget implements AfterViewInit {\n  i: any = {};\n  fixData: SFSchemaEnum[] = [];\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n  }\n\n  ngAfterViewInit(): void {\n    this.i = {\n      backfill: toBool(this.ui.backfill, false),\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\n      width: this.ui.width || undefined,\n    };\n\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\n    if (typeof this.filterOption === 'boolean') {\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n\n    this.isAsync = !!this.ui.asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => (this.isAsync ? this.ui.asyncData(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly)),\n    );\n  }\n\n  reset(value: SFValue) {\n    this.typing = this.value;\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(this.schema.enum || this.formProperty.options.uiEmailSuffixes, null, this.schema.readOnly);\n        break;\n      default:\n        this.fixData = getCopyEnum(\n          this.schema.enum,\n          this.formProperty.formData,\n          this.schema.readOnly,\n        );\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(\n      !value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`),\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { LocaleData } from '@delon/theme';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n})\nexport class CascaderWidget extends ControlWidget implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  loadData: any;\n\n  ngOnInit(): void {\n    this.clearText = this.ui.clearText || 'æ¸é¤';\n    this.showArrow = toBool(this.ui.showArrow, true);\n    this.showInput = toBool(this.ui.showInput, true);\n    this.triggerAction = this.ui.triggerAction || ['click'];\n    if (!!this.ui.asyncData) {\n      this.loadData = (node: any, index: number) => (this.ui.asyncData as any)(node, index, this);\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: string) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n\n  _selectionChange(options: any) {\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _clear(options: any) {\n    if (this.ui.clear) this.ui.clear(options);\n  }\n}\n","import { Component } from '@angular/core';\nimport { LocaleData } from '@delon/theme';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle = ``;\n  inited = false;\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : this.schema.title;\n      this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.cd.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked() {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n})\nexport class CustomWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n})\nexport class DateWidget extends ControlWidget implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] = null;\n  displayFormat: string;\n  format: string;\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.mode = ui.mode || 'date';\n    this.flatRange = ui.end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!ui.displayFormat) {\n      switch (this.mode) {\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = ui.displayFormat;\n    }\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(ui.allowClear, true),\n      // nz-date-picker\n      showToday: toBool(ui.showToday, true),\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.compCd();\n  }\n\n  _change(value: Date | Date[]) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? value.map(d => format(d, this.format))\n      : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent.properties[this.ui.end];\n  }\n\n  private setEnd(value: string) {\n    this.endProperty.setValue(value, true);\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NzMentionComponent } from 'ng-zorro-antd';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n})\nexport class MentionWidget extends ControlWidget implements OnInit {\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n    const min = typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1;\n    const max = typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = () => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      };\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: any) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly)),\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n})\nexport class NumberWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter = value => value;\n  parser = value => value;\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    if (typeof schema.minimum !== 'undefined') {\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\n    }\n    if (typeof schema.maximum !== 'undefined') {\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\n    }\n    this.step = schema.multipleOf || 1;\n    if (schema.type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n    if (ui.prefix != null) {\n      ui.formatter = value =>  value == null ? '' : `${ui.prefix} ${value}`;\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value =>  value == null ? '' : `${value} ${ui.unit}`;\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n  title: string;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle } = ui;\n    if (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true) {\n      this.title = this.schema.title;\n    }\n    this.grid = grid;\n    const list: Array<{}> = [];\n    for (const key of formProperty.propertiesId) {\n      const property = formProperty.properties[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n})\nexport class RadioWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n})\nexport class RateWidget extends ControlWidget implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    this.count = this.schema.maximum || 5;\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(this.ui.allowClear, true);\n    this.autoFocus = toBool(this.ui.autoFocus, false);\n    this.hasText = !!this.ui.text;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n})\nexport class SelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[];\n  _value: any;\n  hasGroup = false;\n\n  ngOnInit(): void {\n    this.i = {\n      autoClearSearchValue: toBool(this.ui.autoClearSearchValue, true),\n      allowClear: this.ui.allowClear,\n      autoFocus: toBool(this.ui.autoFocus, false),\n      dropdownClassName: this.ui.dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(this.ui.dropdownMatchSelectWidth, true),\n      serverSearch: toBool(this.ui.serverSearch, false),\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\n      mode: this.ui.mode || 'default',\n      notFoundContent: this.ui.notFoundContent,\n      showSearch: toBool(this.ui.showSearch, true),\n      tokenSeparators: this.ui.tokenSeparators || [],\n      maxTagCount: this.ui.maxTagCount || null,\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this._value = value;\n      this.data = list;\n      this.hasGroup = list.filter(w => w.group === true).length > 0;\n      this.detectChanges();\n    });\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) {\n      this.ui.change(values);\n    }\n    this.setValue(values);\n  }\n\n  openChange(value: boolean) {\n    if (this.ui.openChange) {\n      this.ui.openChange(value);\n    }\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((res: SFSchemaEnum[]) => {\n        this.data = res;\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Marks, SliderValue } from 'ng-zorro-antd';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n})\nexport class SliderWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: Marks;\n  included: boolean;\n\n  ngOnInit(): void {\n    this.min = this.schema.minimum || 0;\n    this.max = this.schema.maximum || 100;\n    this.step = this.schema.multipleOf || 1;\n\n    this.marks = this.ui.marks || null;\n    const included = this.ui.included;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    if (this.ui.formatter) return this.ui.formatter(value);\n    return value;\n  }\n\n  _afterChange(value: SliderValue) {\n    if (this.ui.afterChange) this.ui.afterChange(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n})\nexport class StringWidget extends ControlWidget implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    this.type = !!(\n      this.ui.addOnAfter ||\n      this.ui.addOnBefore ||\n      this.ui.addOnAfterIcon ||\n      this.ui.addOnBeforeIcon ||\n      this.ui.prefix ||\n      this.ui.prefixIcon ||\n      this.ui.suffix ||\n      this.ui.suffixIcon\n    )\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (this.schema.format === 'color' && !value) {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(this.data.filter(w => w.checked).map(i => i.value), false);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n})\nexport class TextWidget extends ControlWidget implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n})\nexport class TextareaWidget extends ControlWidget implements OnInit {\n  autosize: any = true;\n\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    // æå»ºå±æ§å¯¹è±¡æ¶ä¼å¯¹é»è®¤å¼è¿è¡æ ¡éªï¼å æ­¤å¯ä»¥ç´æ¥ä½¿ç¨ format ä½ä¸ºæ ¼å¼åå±æ§\n    this.format = ui.format;\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  TransferCanMove,\n  TransferChange,\n  TransferItem,\n  TransferSearchChange,\n  TransferSelectChange,\n} from 'ng-zorro-antd';\nimport { of, Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || 'é¡¹',\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  }\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.cd.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.cd.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NzFormatEmitEvent } from 'ng-zorro-antd';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: any) => node.title),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData)\n      .subscribe(list => {\n        this.data = list;\n        this.detectChanges();\n      });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e)\n      .subscribe(res => {\n        e.node.clearChildren();\n        e.node.addChildren(res);\n        this.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService, UploadChangeParam, UploadFile } from 'ng-zorro-antd';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n})\nexport class UploadWidget extends ControlWidget implements OnInit {\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    this.i = {\n      type: type || 'select',\n      text: text || 'ç¹å»ä¸ä¼ ',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: toBool(showUploadList, true),\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (this.i.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint = this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : getData(this.schema, this.ui, this.formProperty.formData)).subscribe(\n      list => {\n        this.fileList = list as UploadFile[];\n        this._setValue(this.fileList);\n        this.detectChanges();\n      },\n    );\n  }\n\n  private _getValue(file: UploadFile) {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    fileList.filter(file => !file.url).forEach(file => {\n      file.url = deepGet(file.response, this.i.urlReName);\n    });\n    const res = fileList.map(file => this._getValue(file));\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return ;\n    }\n    this.injector\n      .get(NzModalService)\n      .create({\n        nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n        nzFooter: null,\n      });\n  }\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [\n  SFComponent,\n  SFItemComponent,\n  SFItemWrapComponent,\n  SFTemplateDirective,\n  SFFixedDirective,\n];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, NgZorroAntdModule],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n"]}