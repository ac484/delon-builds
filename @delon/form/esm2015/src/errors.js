export const ERRORSDEFAULT = {
    'false schema': `布尔模式出错`,
    $ref: `无法找到引用{ref}`,
    additionalItems: `不允许超过{ref}`,
    additionalProperties: `不允许有额外的属性`,
    anyOf: `数据应为 anyOf 所指定的其中一个`,
    dependencies: `应当拥有属性{property}的依赖属性{deps}`,
    enum: `应当是预设定的枚举值之一`,
    format: `格式不正确`,
    type: `类型应当是 {type}`,
    required: `必填项`,
    maxLength: `至多 {limit} 个字符`,
    minLength: `至少 {limit} 个字符以上`,
    minimum: `必须 {comparison}{limit}`,
    formatMinimum: `必须 {comparison}{limit}`,
    maximum: `必须 {comparison}{limit}`,
    formatMaximum: `必须 {comparison}{limit}`,
    maxItems: `不应多于 {limit} 个项`,
    minItems: `不应少于 {limit} 个项`,
    maxProperties: `不应多于 {limit} 个属性`,
    minProperties: `不应少于 {limit} 个属性`,
    multipleOf: `应当是 {multipleOf} 的整数倍`,
    not: `不应当匹配 "not" schema`,
    oneOf: `只能匹配一个 "oneOf" 中的 schema`,
    pattern: `数据格式不正确`,
    uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,
    custom: `格式不正确`,
    propertyNames: `属性名 "{propertyName}" 无效`,
    patternRequired: `应当有属性匹配模式 {missingPattern}`,
    switch: `由于 {caseIndex} 失败，未通过 "switch" 校验`,
    const: `应当等于常量`,
    contains: `应当包含一个有效项`,
    formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,
    formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,
    if: `应当匹配模式 "{failingKeyword}"`
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvZm9ybS9zcmMvZXJyb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRztJQUMzQixjQUFjLEVBQUUsUUFBUTtJQUN4QixJQUFJLEVBQUUsYUFBYTtJQUNuQixlQUFlLEVBQUUsWUFBWTtJQUM3QixvQkFBb0IsRUFBRSxXQUFXO0lBQ2pDLEtBQUssRUFBRSxxQkFBcUI7SUFDNUIsWUFBWSxFQUFFLDZCQUE2QjtJQUMzQyxJQUFJLEVBQUUsY0FBYztJQUNwQixNQUFNLEVBQUUsT0FBTztJQUNmLElBQUksRUFBRSxjQUFjO0lBQ3BCLFFBQVEsRUFBRSxLQUFLO0lBQ2YsU0FBUyxFQUFFLGdCQUFnQjtJQUMzQixTQUFTLEVBQUUsa0JBQWtCO0lBQzdCLE9BQU8sRUFBRSx3QkFBd0I7SUFDakMsYUFBYSxFQUFFLHdCQUF3QjtJQUN2QyxPQUFPLEVBQUUsd0JBQXdCO0lBQ2pDLGFBQWEsRUFBRSx3QkFBd0I7SUFDdkMsUUFBUSxFQUFFLGlCQUFpQjtJQUMzQixRQUFRLEVBQUUsaUJBQWlCO0lBQzNCLGFBQWEsRUFBRSxrQkFBa0I7SUFDakMsYUFBYSxFQUFFLGtCQUFrQjtJQUNqQyxVQUFVLEVBQUUsdUJBQXVCO0lBQ25DLEdBQUcsRUFBRSxvQkFBb0I7SUFDekIsS0FBSyxFQUFFLDBCQUEwQjtJQUNqQyxPQUFPLEVBQUUsU0FBUztJQUNsQixXQUFXLEVBQUUsZ0NBQWdDO0lBQzdDLE1BQU0sRUFBRSxPQUFPO0lBQ2YsYUFBYSxFQUFFLHlCQUF5QjtJQUN4QyxlQUFlLEVBQUUsNEJBQTRCO0lBQzdDLE1BQU0sRUFBRSxtQ0FBbUM7SUFDM0MsS0FBSyxFQUFFLFFBQVE7SUFDZixRQUFRLEVBQUUsV0FBVztJQUNyQixzQkFBc0IsRUFBRSwrQkFBK0I7SUFDdkQsc0JBQXNCLEVBQUUsK0JBQStCO0lBQ3ZELEVBQUUsRUFBRSwyQkFBMkI7Q0FDaEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgU0ZWYWx1ZSB9IGZyb20gJy4vaW50ZXJmYWNlJztcbmltcG9ydCB7IEZvcm1Qcm9wZXJ0eSwgUHJvcGVydHlHcm91cCB9IGZyb20gJy4vbW9kZWwvZm9ybS5wcm9wZXJ0eSc7XG5cbmV4cG9ydCBjb25zdCBFUlJPUlNERUZBVUxUID0ge1xuICAnZmFsc2Ugc2NoZW1hJzogYOW4g+WwlOaooeW8j+WHuumUmWAsXG4gICRyZWY6IGDml6Dms5Xmib7liLDlvJXnlKh7cmVmfWAsXG4gIGFkZGl0aW9uYWxJdGVtczogYOS4jeWFgeiuuOi2hei/h3tyZWZ9YCxcbiAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGDkuI3lhYHorrjmnInpop3lpJbnmoTlsZ7mgKdgLFxuICBhbnlPZjogYOaVsOaNruW6lOS4uiBhbnlPZiDmiYDmjIflrprnmoTlhbbkuK3kuIDkuKpgLFxuICBkZXBlbmRlbmNpZXM6IGDlupTlvZPmi6XmnInlsZ7mgKd7cHJvcGVydHl955qE5L6d6LWW5bGe5oCne2RlcHN9YCxcbiAgZW51bTogYOW6lOW9k+aYr+mihOiuvuWumueahOaemuS4vuWAvOS5i+S4gGAsXG4gIGZvcm1hdDogYOagvOW8j+S4jeato+ehrmAsIC8vIGDlupTlvZPljLnphY3moLzlvI8gXCJ7Zm9ybWF0fVwiYCxcbiAgdHlwZTogYOexu+Wei+W6lOW9k+aYryB7dHlwZX1gLFxuICByZXF1aXJlZDogYOW/heWhq+mhuWAsXG4gIG1heExlbmd0aDogYOiHs+WkmiB7bGltaXR9IOS4quWtl+espmAsXG4gIG1pbkxlbmd0aDogYOiHs+WwkSB7bGltaXR9IOS4quWtl+espuS7peS4imAsXG4gIG1pbmltdW06IGDlv4Xpobsge2NvbXBhcmlzb259e2xpbWl0fWAsXG4gIGZvcm1hdE1pbmltdW06IGDlv4Xpobsge2NvbXBhcmlzb259e2xpbWl0fWAsXG4gIG1heGltdW06IGDlv4Xpobsge2NvbXBhcmlzb259e2xpbWl0fWAsXG4gIGZvcm1hdE1heGltdW06IGDlv4Xpobsge2NvbXBhcmlzb259e2xpbWl0fWAsXG4gIG1heEl0ZW1zOiBg5LiN5bqU5aSa5LqOIHtsaW1pdH0g5Liq6aG5YCxcbiAgbWluSXRlbXM6IGDkuI3lupTlsJHkuo4ge2xpbWl0fSDkuKrpoblgLFxuICBtYXhQcm9wZXJ0aWVzOiBg5LiN5bqU5aSa5LqOIHtsaW1pdH0g5Liq5bGe5oCnYCxcbiAgbWluUHJvcGVydGllczogYOS4jeW6lOWwkeS6jiB7bGltaXR9IOS4quWxnuaAp2AsXG4gIG11bHRpcGxlT2Y6IGDlupTlvZPmmK8ge211bHRpcGxlT2Z9IOeahOaVtOaVsOWAjWAsXG4gIG5vdDogYOS4jeW6lOW9k+WMuemFjSBcIm5vdFwiIHNjaGVtYWAsXG4gIG9uZU9mOiBg5Y+q6IO95Yy56YWN5LiA5LiqIFwib25lT2ZcIiDkuK3nmoQgc2NoZW1hYCxcbiAgcGF0dGVybjogYOaVsOaNruagvOW8j+S4jeato+ehrmAsXG4gIHVuaXF1ZUl0ZW1zOiBg5LiN5bqU5b2T5ZCr5pyJ6YeN5aSN6aG5ICjnrKwge2p9IOmhueS4juesrCB7aX0g6aG55piv6YeN5aSN55qEKWAsXG4gIGN1c3RvbTogYOagvOW8j+S4jeato+ehrmAsXG4gIHByb3BlcnR5TmFtZXM6IGDlsZ7mgKflkI0gXCJ7cHJvcGVydHlOYW1lfVwiIOaXoOaViGAsXG4gIHBhdHRlcm5SZXF1aXJlZDogYOW6lOW9k+acieWxnuaAp+WMuemFjeaooeW8jyB7bWlzc2luZ1BhdHRlcm59YCxcbiAgc3dpdGNoOiBg55Sx5LqOIHtjYXNlSW5kZXh9IOWksei0pe+8jOacqumAmui/hyBcInN3aXRjaFwiIOagoemqjGAsXG4gIGNvbnN0OiBg5bqU5b2T562J5LqO5bi46YePYCxcbiAgY29udGFpbnM6IGDlupTlvZPljIXlkKvkuIDkuKrmnInmlYjpoblgLFxuICBmb3JtYXRFeGNsdXNpdmVNYXhpbXVtOiBgZm9ybWF0RXhjbHVzaXZlTWF4aW11bSDlupTlvZPmmK/luIPlsJTlgLxgLFxuICBmb3JtYXRFeGNsdXNpdmVNaW5pbXVtOiBgZm9ybWF0RXhjbHVzaXZlTWluaW11bSDlupTlvZPmmK/luIPlsJTlgLxgLFxuICBpZjogYOW6lOW9k+WMuemFjeaooeW8jyBcIntmYWlsaW5nS2V5d29yZH1cImBcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXJyb3JEYXRhIHtcbiAgW2tleTogc3RyaW5nXTogYW55O1xuXG4gIGtleXdvcmQ6IHN0cmluZztcbiAgZGF0YVBhdGg/OiBzdHJpbmc7XG4gIHNjaGVtYVBhdGg/OiBzdHJpbmc7XG4gIHBhcmFtcz86IHsgW2tleTogc3RyaW5nXTogYW55IH07XG4gIG1lc3NhZ2U/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXJyb3JTY2hlbWEge1xuICAvKipcbiAgICog5piv5ZCm5a6e5pe25qCh6aqM77yM6buY6K6k77yaYHRydWVgXG4gICAqIC0gYHRydWVgIOavj+S4gOasoemDveagoemqjFxuICAgKiAtIGBmYWxzZWAg5o+Q5Lqk5pe25qCh6aqMXG4gICAqL1xuICBsaXZlVmFsaWRhdGU/OiBib29sZWFuO1xuICAvKipcbiAgICog6Ieq5a6a5LmJ6ZSZ6K+v5L+h5oGv5paH5pys77yM6ZSu5ZCN6LWe5ZCMIGBFcnJvckRhdGEua2V5d29yZGAg5YC8XG4gICAqL1xuICBlcnJvcnM/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB8ICgob2JqOiBFcnJvckRhdGEpID0+IHN0cmluZykgfTtcbiAgLyoqXG4gICAqIOaYr+WQpueri+WNs+WRiOeOsOmUmeivr+inhuinie+8jOm7mOiupO+8mmBmYWxzZWBcbiAgICovXG4gIGZpcnN0VmlzdWFsPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIOaYr+WQpuWPquWxleekuumUmeivr+inhuinieS4jeaYvuekuumUmeivr+aWh+acrO+8jOm7mOiupO+8mmBmYWxzZWBcbiAgICovXG4gIG9ubHlWaXN1YWw/OiBib29sZWFuO1xuICAvKipcbiAgICog5piv5ZCm5b+955Wl5p+Q5Lqb5pWw5o2u57G75Z6L5qCh6aqMIGBFUlJPUlNERUZBVUxUYFxuICAgKiAtIOWAvOWni+e7iOWMheWQqyBgRGVsb25TY2hlbWFGb3JtQ29uZmlnLmluZ29yZUtleXdvcmRzYFxuICAgKi9cbiAgaW5nb3JlS2V5d29yZHM/OiBzdHJpbmdbXTtcblxuICAvKipcbiAgICog5piv5ZCm5by65Yi25Zyo5qCH562+5LiK5pi+56S6IGAqYCDmnaXooajnpLrlv4XloavvvIzkuIDoiKzlnKjlvZPkvb/nlKjoh6rlrprkuYnmoKHpqowgYHZhbGlkYXRvcmAg5Y+v6IO96ZyA6KaB5b+F5aGr6aG55aSE55CGXG4gICAqL1xuICBzaG93UmVxdWlyZWQ/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiDoh6rlrprkuYnmoKHpqoxcbiAgICovXG4gIHZhbGlkYXRvcj86IChcbiAgICB2YWx1ZTogU0ZWYWx1ZSxcbiAgICBmb3JtUHJvcGVydHk6IEZvcm1Qcm9wZXJ0eSxcbiAgICBmb3JtOiBQcm9wZXJ0eUdyb3VwXG4gICkgPT4gRXJyb3JEYXRhW10gfCBPYnNlcnZhYmxlPEVycm9yRGF0YVtdPjtcbn1cbiJdfQ==