/**
 * @license ng-alain(cipchk@qq.com) v11.3.1
 * (c) 2020 cipchk https://ng-alain.com/
 * License: MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@delon/util"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@delon/mock",["exports","@angular/core","@delon/util","@angular/common/http","rxjs","rxjs/operators"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).delon=e.delon||{},e.delon.mock={}),e.ng.core,e.delon.util,e.ng.common.http,e.rxjs,e.rxjs.operators)}(this,(function(e,t,r,n,o,i){"use strict";var c=function(e,t){this.status=e,this.error=t},a={data:null,delay:300,force:!1,log:!0,executeOtherInterceptors:!0},u=function(){function e(e){this.cached=[],this.config=e.merge("mock",a),this.applyMock(),delete this.config.data}return e.prototype.applyMock=function(){this.cached=[];try{this.realApplyMock()}catch(e){this.outputError(e)}},e.prototype.realApplyMock=function(){var e=this,t=this.config.data;t&&(Object.keys(t).forEach((function(r){var n=t[r];n&&Object.keys(n).forEach((function(t){var o=n[t];if("function"!=typeof o&&"object"!=typeof o&&"string"!=typeof o)throw Error("mock value of ["+r+"-"+t+"] should be function or object or string, but got "+typeof o);var i=e.genRule(t,o);if(-1===["GET","POST","PUT","HEAD","DELETE","PATCH","OPTIONS"].indexOf(i.method))throw Error("method of "+r+"-"+t+" is not valid");var c=e.cached.find((function(e){return e.url===i.url&&e.method===i.method}));c?c.callback=i.callback:e.cached.push(i)}))})),this.cached.sort((function(e,t){return(t.martcher||"").toString().length-(e.martcher||"").toString().length})))},e.prototype.genRule=function(e,t){var r="GET",n=e;if(e.indexOf(" ")>-1){var o=e.split(" ");r=o[0].toLowerCase(),n=o[1]}var i=null,c=[];if(~n.indexOf(":")){c=n.split("/").filter((function(e){return e.startsWith(":")})).map((function(e){return e.substring(1)}));var a=n.split("/").map((function(e){return e.startsWith(":")?"([^/]+)":e})).join("/");i=new RegExp("^"+a,"i")}else/(\([^)]+\))/i.test(n)&&(i=new RegExp(n,"i"));return{url:n,martcher:i,segments:c,callback:t,method:r.toUpperCase()}},e.prototype.outputError=function(e){var t=e.message.split(": ")[0],r=e.stack.split("\n").filter((function(e){return 0!==e.trim().indexOf("at ")})).map((function(e){return e.replace(t+": ","")}));throw r.splice(1,0,""),console.group(),console.warn("==========Failed to parse mock config.=========="),console.log(r.join("\n")),console.groupEnd(),e},e.prototype.getRule=function(e,t){e=(e||"GET").toUpperCase();var r={},n=this.cached.filter((function(r){return r.method===e&&(r.martcher?r.martcher.test(t):r.url===t)}));if(0===n.length)return null;var o=n.find((function(e){return e.url===t}))||n[0];o.martcher&&o.martcher.exec(t).slice(1).map((function(e,t){r[o.segments[t]]=e}));return{url:t,method:o.method,params:r,callback:o.callback}},e.prototype.clearCache=function(){this.cached=[]},Object.defineProperty(e.prototype,"rules",{get:function(){return this.cached},enumerable:!1,configurable:!0}),e.prototype.ngOnDestroy=function(){this.clearCache()},e}();u.Éµfac=function(e){return new(e||u)(t.ÉµÉµinject(r.AlainConfigService))},u.Éµprov=t.ÉµÉµdefineInjectable({token:u,factory:u.Éµfac,providedIn:"root"}),("undefined"==typeof ngDevMode||ngDevMode)&&t.ÉµsetClassMetadata(u,[{type:t.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:r.AlainConfigService}]}),null);var s=function(){function e(e,t){this.next=e,this.interceptor=t}return e.prototype.handle=function(e){return this.interceptor.intercept(e,this.next)},e}(),l=function(){function e(e){this.injector=e}return e.prototype.intercept=function(e,t){var a,l=this.injector.get(u),f=l.config,p=l.getRule(e.method,e.url.split("?")[0]);if(!p&&!f.force)return t.handle(e);switch(typeof p.callback){case"function":var d={original:e,body:e.body,queryString:{},headers:{},params:p.params},h=e.url.split("?");h.length>1&&h[1].split("&").forEach((function(e){var t=e.split("="),r=t[0],n=t[1];Object.keys(d.queryString).includes(r)?(Array.isArray(d.queryString[r])||(d.queryString[r]=[d.queryString[r]]),d.queryString[r].push(n)):d.queryString[r]=n})),e.params.keys().forEach((function(t){return d.queryString[t]=e.params.get(t)})),e.headers.keys().forEach((function(t){return d.headers[t]=e.headers.get(t)}));try{a=p.callback.call(this,d)}catch(t){a=new n.HttpErrorResponse({url:e.url,headers:e.headers,status:t instanceof c?t.status:400,statusText:t.statusText||"Unknown Error",error:t.error})}break;default:a=p.callback}a instanceof n.HttpResponseBase||(a=new n.HttpResponse({status:200,url:e.url,body:a})),a.body&&(a.body=r.deepCopy(a.body)),f.log&&(console.log("%cðŸ‘½"+e.method+"->"+e.urlWithParams+"->request","background:#000;color:#bada55",e),console.log("%cðŸ‘½"+e.method+"->"+e.urlWithParams+"->response","background:#000;color:#bada55",a));var g=a instanceof n.HttpErrorResponse?o.throwError(a):o.of(a);if(f.executeOtherInterceptors){var y=this.injector.get(n.HTTP_INTERCEPTORS,[]),m=y.slice(y.indexOf(this)+1);if(m.length>0)return m.reduceRight((function(e,t){return new s(e,t)}),{handle:function(){return g}}).handle(e).pipe(i.delay(f.delay))}return g.pipe(i.delay(f.delay))},e}();l.Éµfac=function(e){return new(e||l)(t.ÉµÉµinject(t.Injector))},l.Éµprov=t.ÉµÉµdefineInjectable({token:l,factory:l.Éµfac}),("undefined"==typeof ngDevMode||ngDevMode)&&t.ÉµsetClassMetadata(l,[{type:t.Injectable}],(function(){return[{type:t.Injector}]}),null);var f=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[{provide:n.HTTP_INTERCEPTORS,useClass:l,multi:!0}]}},e.forChild=function(){return{ngModule:e,providers:[{provide:n.HTTP_INTERCEPTORS,useClass:l,multi:!0}]}},e}();f.Éµmod=t.ÉµÉµdefineNgModule({type:f}),f.Éµinj=t.ÉµÉµdefineInjector({factory:function(e){return new(e||f)}}),("undefined"==typeof ngDevMode||ngDevMode)&&t.ÉµsetClassMetadata(f,[{type:t.NgModule,args:[{}]}],null,null),e.DelonMockModule=f,e.MockInterceptor=l,e.MockService=u,e.MockStatusError=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=mock.umd.min.js.map