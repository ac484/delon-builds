import { DOCUMENT, isPlatformServer } from '@angular/common';
import { PLATFORM_ID, inject } from '@angular/core';
export function stepPreloader() {
    const doc = inject(DOCUMENT);
    const ssr = isPlatformServer(inject(PLATFORM_ID));
    if (ssr) {
        return () => { };
    }
    const body = doc.querySelector('body');
    body.style.overflow = 'hidden';
    let done = false;
    return () => {
        if (done)
            return;
        done = true;
        const preloader = doc.querySelector('.preloader');
        if (preloader == null)
            return;
        const CLS = 'preloader-hidden';
        preloader.addEventListener('transitionend', () => {
            preloader.className = CLS;
        });
        preloader.className += ` ${CLS}-add ${CLS}-add-active`;
        body.style.overflow = '';
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlbG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUvc3JjL3NlcnZpY2VzL3ByZWxvYWRlci9wcmVsb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXBELE1BQU0sVUFBVSxhQUFhO0lBQzNCLE1BQU0sR0FBRyxHQUFhLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2QyxNQUFNLEdBQUcsR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztJQUNsRCxJQUFJLEdBQUcsRUFBRTtRQUNQLE9BQU8sR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO0tBQ2pCO0lBQ0QsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLGFBQWEsQ0FBa0IsTUFBTSxDQUFFLENBQUM7SUFDekQsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQy9CLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQztJQUVqQixPQUFPLEdBQUcsRUFBRTtRQUNWLElBQUksSUFBSTtZQUFFLE9BQU87UUFFakIsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNaLE1BQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQWMsWUFBWSxDQUFDLENBQUM7UUFDL0QsSUFBSSxTQUFTLElBQUksSUFBSTtZQUFFLE9BQU87UUFFOUIsTUFBTSxHQUFHLEdBQUcsa0JBQWtCLENBQUM7UUFDL0IsU0FBUyxDQUFDLGdCQUFnQixDQUFDLGVBQWUsRUFBRSxHQUFHLEVBQUU7WUFDL0MsU0FBUyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7UUFDNUIsQ0FBQyxDQUFDLENBQUM7UUFDSCxTQUFTLENBQUMsU0FBUyxJQUFJLElBQUksR0FBRyxRQUFRLEdBQUcsYUFBYSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUMzQixDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRE9DVU1FTlQsIGlzUGxhdGZvcm1TZXJ2ZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUExBVEZPUk1fSUQsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RlcFByZWxvYWRlcigpOiAoKSA9PiB2b2lkIHtcbiAgY29uc3QgZG9jOiBEb2N1bWVudCA9IGluamVjdChET0NVTUVOVCk7XG4gIGNvbnN0IHNzciA9IGlzUGxhdGZvcm1TZXJ2ZXIoaW5qZWN0KFBMQVRGT1JNX0lEKSk7XG4gIGlmIChzc3IpIHtcbiAgICByZXR1cm4gKCkgPT4ge307XG4gIH1cbiAgY29uc3QgYm9keSA9IGRvYy5xdWVyeVNlbGVjdG9yPEhUTUxCb2R5RWxlbWVudD4oJ2JvZHknKSE7XG4gIGJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgbGV0IGRvbmUgPSBmYWxzZTtcblxuICByZXR1cm4gKCkgPT4ge1xuICAgIGlmIChkb25lKSByZXR1cm47XG5cbiAgICBkb25lID0gdHJ1ZTtcbiAgICBjb25zdCBwcmVsb2FkZXIgPSBkb2MucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oJy5wcmVsb2FkZXInKTtcbiAgICBpZiAocHJlbG9hZGVyID09IG51bGwpIHJldHVybjtcblxuICAgIGNvbnN0IENMUyA9ICdwcmVsb2FkZXItaGlkZGVuJztcbiAgICBwcmVsb2FkZXIuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsICgpID0+IHtcbiAgICAgIHByZWxvYWRlci5jbGFzc05hbWUgPSBDTFM7XG4gICAgfSk7XG4gICAgcHJlbG9hZGVyLmNsYXNzTmFtZSArPSBgICR7Q0xTfS1hZGQgJHtDTFN9LWFkZC1hY3RpdmVgO1xuICAgIGJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnJztcbiAgfTtcbn1cbiJdfQ==