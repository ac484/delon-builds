import { registerLocaleData } from '@angular/common';
import { ENVIRONMENT_INITIALIZER, LOCALE_ID, importProvidersFrom, inject, makeEnvironmentProviders } from '@angular/core';
import { BellOutline, DeleteOutline, InboxOutline, PlusOutline, MenuFoldOutline, MenuUnfoldOutline } from '@ant-design/icons-angular/icons';
import { ALAIN_CONFIG } from '@delon/util/config';
import { NzDrawerModule } from 'ng-zorro-antd/drawer';
import { NZ_DATE_LOCALE, provideNzI18n } from 'ng-zorro-antd/i18n';
import { NzIconService } from 'ng-zorro-antd/icon';
import { NzModalModule } from 'ng-zorro-antd/modal';
import { DELON_LOCALE, DELON_LOCALE_SERVICE_PROVIDER } from './locale';
import zhCN from './locale/languages/zh-CN';
import { ALAIN_I18N_TOKEN } from './services';
import { ALAIN_SETTING_DEFAULT } from './services/settings/settings.service';
export function provideAlain(options) {
    const lang = options?.defaultLang;
    const provides = [
        { provide: ALAIN_CONFIG, useValue: options?.config },
        { provide: DELON_LOCALE, useValue: lang?.delon ?? zhCN },
        DELON_LOCALE_SERVICE_PROVIDER,
        importProvidersFrom([NzDrawerModule, NzModalModule]),
        ALAIN_SETTING_DEFAULT
    ];
    if (lang) {
        registerLocaleData(lang.ng, lang.abbr);
        provides.push({ provide: LOCALE_ID, useValue: lang.abbr }, provideNzI18n(lang.zorro), {
            provide: NZ_DATE_LOCALE,
            useValue: lang.date
        });
    }
    const i18nCls = options?.i18nClass;
    if (i18nCls) {
        provides.push({ provide: ALAIN_I18N_TOKEN, useClass: i18nCls, multi: false });
    }
    const icons = [
        BellOutline,
        DeleteOutline,
        PlusOutline,
        InboxOutline,
        MenuFoldOutline,
        MenuUnfoldOutline,
        ...(options.icons ?? [])
    ];
    provides.push({
        provide: ENVIRONMENT_INITIALIZER,
        multi: true,
        useValue: () => {
            inject(NzIconService, { optional: true })?.addIcon(...icons);
        }
    });
    return makeEnvironmentProviders(provides);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RoZW1lL3NyYy9wcm92aWRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3JELE9BQU8sRUFDTCx1QkFBdUIsRUFFdkIsU0FBUyxFQUdULG1CQUFtQixFQUNuQixNQUFNLEVBQ04sd0JBQXdCLEVBQ3pCLE1BQU0sZUFBZSxDQUFDO0FBR3ZCLE9BQU8sRUFDTCxXQUFXLEVBQ1gsYUFBYSxFQUNiLFlBQVksRUFDWixXQUFXLEVBQ1gsZUFBZSxFQUNmLGlCQUFpQixFQUNsQixNQUFNLGlDQUFpQyxDQUFDO0FBRXpDLE9BQU8sRUFBRSxZQUFZLEVBQWUsTUFBTSxvQkFBb0IsQ0FBQztBQUUvRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXBELE9BQU8sRUFBRSxZQUFZLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDdkUsT0FBTyxJQUFJLE1BQU0sMEJBQTBCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBc0I3RSxNQUFNLFVBQVUsWUFBWSxDQUFDLE9BQTRCO0lBQ3ZELE1BQU0sSUFBSSxHQUFHLE9BQU8sRUFBRSxXQUFXLENBQUM7SUFDbEMsTUFBTSxRQUFRLEdBQTJDO1FBQ3ZELEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRTtRQUNwRCxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxLQUFLLElBQUksSUFBSSxFQUFFO1FBQ3hELDZCQUE2QjtRQUM3QixtQkFBbUIsQ0FBQyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUNwRCxxQkFBcUI7S0FDdEIsQ0FBQztJQUNGLElBQUksSUFBSSxFQUFFLENBQUM7UUFDVCxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDcEYsT0FBTyxFQUFFLGNBQWM7WUFDdkIsUUFBUSxFQUFFLElBQUksQ0FBQyxJQUFJO1NBQ3BCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNLE9BQU8sR0FBRyxPQUFPLEVBQUUsU0FBUyxDQUFDO0lBQ25DLElBQUksT0FBTyxFQUFFLENBQUM7UUFDWixRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDaEYsQ0FBQztJQUVELE1BQU0sS0FBSyxHQUFxQjtRQUM5QixXQUFXO1FBQ1gsYUFBYTtRQUNiLFdBQVc7UUFDWCxZQUFZO1FBQ1osZUFBZTtRQUNmLGlCQUFpQjtRQUNqQixHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7S0FDekIsQ0FBQztJQUNGLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDWixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLEtBQUssRUFBRSxJQUFJO1FBQ1gsUUFBUSxFQUFFLEdBQUcsRUFBRTtZQUNiLE1BQU0sQ0FBQyxhQUFhLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQztRQUMvRCxDQUFDO0tBQ0YsQ0FBQyxDQUFDO0lBQ0gsT0FBTyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVnaXN0ZXJMb2NhbGVEYXRhIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gIEVOVklST05NRU5UX0lOSVRJQUxJWkVSLFxuICBFbnZpcm9ubWVudFByb3ZpZGVycyxcbiAgTE9DQUxFX0lELFxuICBQcm92aWRlcixcbiAgVHlwZSxcbiAgaW1wb3J0UHJvdmlkZXJzRnJvbSxcbiAgaW5qZWN0LFxuICBtYWtlRW52aXJvbm1lbnRQcm92aWRlcnNcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB0eXBlIHsgSWNvbkRlZmluaXRpb24gfSBmcm9tICdAYW50LWRlc2lnbi9pY29ucy1hbmd1bGFyJztcbmltcG9ydCB7XG4gIEJlbGxPdXRsaW5lLFxuICBEZWxldGVPdXRsaW5lLFxuICBJbmJveE91dGxpbmUsXG4gIFBsdXNPdXRsaW5lLFxuICBNZW51Rm9sZE91dGxpbmUsXG4gIE1lbnVVbmZvbGRPdXRsaW5lXG59IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zLWFuZ3VsYXIvaWNvbnMnO1xuXG5pbXBvcnQgeyBBTEFJTl9DT05GSUcsIEFsYWluQ29uZmlnIH0gZnJvbSAnQGRlbG9uL3V0aWwvY29uZmlnJztcbmltcG9ydCB0eXBlIHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56RHJhd2VyTW9kdWxlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9kcmF3ZXInO1xuaW1wb3J0IHsgTlpfREFURV9MT0NBTEUsIHByb3ZpZGVOekkxOG4gfSBmcm9tICduZy16b3Jyby1hbnRkL2kxOG4nO1xuaW1wb3J0IHsgTnpJY29uU2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvaWNvbic7XG5pbXBvcnQgeyBOek1vZGFsTW9kdWxlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9tb2RhbCc7XG5cbmltcG9ydCB7IERFTE9OX0xPQ0FMRSwgREVMT05fTE9DQUxFX1NFUlZJQ0VfUFJPVklERVIgfSBmcm9tICcuL2xvY2FsZSc7XG5pbXBvcnQgemhDTiBmcm9tICcuL2xvY2FsZS9sYW5ndWFnZXMvemgtQ04nO1xuaW1wb3J0IHsgQUxBSU5fSTE4Tl9UT0tFTiB9IGZyb20gJy4vc2VydmljZXMnO1xuaW1wb3J0IHsgQUxBSU5fU0VUVElOR19ERUZBVUxUIH0gZnJvbSAnLi9zZXJ2aWNlcy9zZXR0aW5ncy9zZXR0aW5ncy5zZXJ2aWNlJztcblxuZXhwb3J0IGludGVyZmFjZSBBbGFpblByb3ZpZGVPcHRpb25zIHtcbiAgY29uZmlnPzogQWxhaW5Db25maWc7XG4gIC8qKlxuICAgKiBJbml0aWFsaXplIGRlZmF1bHQgbGFuZ3VhZ2VcbiAgICpcbiAgICog5Yid5aeL5YyW6buY6K6k6K+t6KiAXG4gICAqL1xuICBkZWZhdWx0TGFuZz86IEFsYWluUHJvdmlkZUxhbmc7XG4gIGkxOG5DbGFzcz86IFR5cGU8TnpTYWZlQW55PjtcbiAgaWNvbnM/OiBJY29uRGVmaW5pdGlvbltdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFsYWluUHJvdmlkZUxhbmcge1xuICBhYmJyOiBzdHJpbmc7XG4gIG5nOiBOelNhZmVBbnk7XG4gIHpvcnJvOiBOelNhZmVBbnk7XG4gIGRhdGU6IE56U2FmZUFueTtcbiAgZGVsb246IE56U2FmZUFueTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVBbGFpbihvcHRpb25zOiBBbGFpblByb3ZpZGVPcHRpb25zKTogRW52aXJvbm1lbnRQcm92aWRlcnMge1xuICBjb25zdCBsYW5nID0gb3B0aW9ucz8uZGVmYXVsdExhbmc7XG4gIGNvbnN0IHByb3ZpZGVzOiBBcnJheTxQcm92aWRlciB8IEVudmlyb25tZW50UHJvdmlkZXJzPiA9IFtcbiAgICB7IHByb3ZpZGU6IEFMQUlOX0NPTkZJRywgdXNlVmFsdWU6IG9wdGlvbnM/LmNvbmZpZyB9LFxuICAgIHsgcHJvdmlkZTogREVMT05fTE9DQUxFLCB1c2VWYWx1ZTogbGFuZz8uZGVsb24gPz8gemhDTiB9LFxuICAgIERFTE9OX0xPQ0FMRV9TRVJWSUNFX1BST1ZJREVSLFxuICAgIGltcG9ydFByb3ZpZGVyc0Zyb20oW056RHJhd2VyTW9kdWxlLCBOek1vZGFsTW9kdWxlXSksXG4gICAgQUxBSU5fU0VUVElOR19ERUZBVUxUXG4gIF07XG4gIGlmIChsYW5nKSB7XG4gICAgcmVnaXN0ZXJMb2NhbGVEYXRhKGxhbmcubmcsIGxhbmcuYWJicik7XG4gICAgcHJvdmlkZXMucHVzaCh7IHByb3ZpZGU6IExPQ0FMRV9JRCwgdXNlVmFsdWU6IGxhbmcuYWJiciB9LCBwcm92aWRlTnpJMThuKGxhbmcuem9ycm8pLCB7XG4gICAgICBwcm92aWRlOiBOWl9EQVRFX0xPQ0FMRSxcbiAgICAgIHVzZVZhbHVlOiBsYW5nLmRhdGVcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0IGkxOG5DbHMgPSBvcHRpb25zPy5pMThuQ2xhc3M7XG4gIGlmIChpMThuQ2xzKSB7XG4gICAgcHJvdmlkZXMucHVzaCh7IHByb3ZpZGU6IEFMQUlOX0kxOE5fVE9LRU4sIHVzZUNsYXNzOiBpMThuQ2xzLCBtdWx0aTogZmFsc2UgfSk7XG4gIH1cblxuICBjb25zdCBpY29uczogSWNvbkRlZmluaXRpb25bXSA9IFtcbiAgICBCZWxsT3V0bGluZSxcbiAgICBEZWxldGVPdXRsaW5lLFxuICAgIFBsdXNPdXRsaW5lLFxuICAgIEluYm94T3V0bGluZSxcbiAgICBNZW51Rm9sZE91dGxpbmUsXG4gICAgTWVudVVuZm9sZE91dGxpbmUsXG4gICAgLi4uKG9wdGlvbnMuaWNvbnMgPz8gW10pXG4gIF07XG4gIHByb3ZpZGVzLnB1c2goe1xuICAgIHByb3ZpZGU6IEVOVklST05NRU5UX0lOSVRJQUxJWkVSLFxuICAgIG11bHRpOiB0cnVlLFxuICAgIHVzZVZhbHVlOiAoKSA9PiB7XG4gICAgICBpbmplY3QoTnpJY29uU2VydmljZSwgeyBvcHRpb25hbDogdHJ1ZSB9KT8uYWRkSWNvbiguLi5pY29ucyk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG1ha2VFbnZpcm9ubWVudFByb3ZpZGVycyhwcm92aWRlcyk7XG59XG4iXX0=