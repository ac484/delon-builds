import { registerLocaleData } from '@angular/common';
import { LOCALE_ID, importProvidersFrom, makeEnvironmentProviders } from '@angular/core';
import { ALAIN_CONFIG } from '@delon/util/config';
import { NzDrawerModule } from 'ng-zorro-antd/drawer';
import { NZ_DATE_LOCALE, provideNzI18n } from 'ng-zorro-antd/i18n';
import { NzModalModule } from 'ng-zorro-antd/modal';
import { DELON_LOCALE, DELON_LOCALE_SERVICE_PROVIDER } from './locale';
import { ALAIN_I18N_TOKEN } from './services';
import { ALAIN_SETTING_DEFAULT } from './services/settings/settings.service';
export function provideAlain(options) {
    const lang = options.defaultLang;
    if (typeof ngDevMode === 'undefined' || ngDevMode) {
        if (lang == null) {
            throw new Error(`Please provide language data for initialization`);
        }
    }
    registerLocaleData(lang.ng, lang.abbr);
    const provides = [
        { provide: ALAIN_CONFIG, useValue: options?.config },
        { provide: LOCALE_ID, useValue: lang.abbr },
        provideNzI18n(lang.zorro),
        { provide: NZ_DATE_LOCALE, useValue: lang.date },
        { provide: DELON_LOCALE, useValue: lang.delon },
        DELON_LOCALE_SERVICE_PROVIDER,
        importProvidersFrom([NzDrawerModule, NzModalModule]),
        ALAIN_SETTING_DEFAULT
    ];
    const i18nCls = options?.i18nClass;
    if (i18nCls) {
        provides.push({ provide: ALAIN_I18N_TOKEN, useClass: i18nCls, multi: false });
    }
    return makeEnvironmentProviders(provides);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RoZW1lL3NyYy9wcm92aWRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3JELE9BQU8sRUFFTCxTQUFTLEVBR1QsbUJBQW1CLEVBQ25CLHdCQUF3QixFQUN6QixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsWUFBWSxFQUFlLE1BQU0sb0JBQW9CLENBQUM7QUFFL0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXBELE9BQU8sRUFBRSxZQUFZLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDdkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBcUI3RSxNQUFNLFVBQVUsWUFBWSxDQUFDLE9BQTRCO0lBQ3ZELE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUM7SUFDakMsSUFBSSxPQUFPLFNBQVMsS0FBSyxXQUFXLElBQUksU0FBUyxFQUFFO1FBQ2pELElBQUksSUFBSSxJQUFJLElBQUksRUFBRTtZQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLGlEQUFpRCxDQUFDLENBQUM7U0FDcEU7S0FDRjtJQUVELGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sUUFBUSxHQUEyQztRQUN2RCxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUU7UUFDcEQsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQzNDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3pCLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNoRCxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDL0MsNkJBQTZCO1FBQzdCLG1CQUFtQixDQUFDLENBQUMsY0FBYyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3BELHFCQUFxQjtLQUN0QixDQUFDO0lBRUYsTUFBTSxPQUFPLEdBQUcsT0FBTyxFQUFFLFNBQVMsQ0FBQztJQUNuQyxJQUFJLE9BQU8sRUFBRTtRQUNYLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztLQUMvRTtJQUNELE9BQU8sd0JBQXdCLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlZ2lzdGVyTG9jYWxlRGF0YSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1xuICBFbnZpcm9ubWVudFByb3ZpZGVycyxcbiAgTE9DQUxFX0lELFxuICBQcm92aWRlcixcbiAgVHlwZSxcbiAgaW1wb3J0UHJvdmlkZXJzRnJvbSxcbiAgbWFrZUVudmlyb25tZW50UHJvdmlkZXJzXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBBTEFJTl9DT05GSUcsIEFsYWluQ29uZmlnIH0gZnJvbSAnQGRlbG9uL3V0aWwvY29uZmlnJztcbmltcG9ydCB0eXBlIHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56RHJhd2VyTW9kdWxlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9kcmF3ZXInO1xuaW1wb3J0IHsgTlpfREFURV9MT0NBTEUsIHByb3ZpZGVOekkxOG4gfSBmcm9tICduZy16b3Jyby1hbnRkL2kxOG4nO1xuaW1wb3J0IHsgTnpNb2RhbE1vZHVsZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvbW9kYWwnO1xuXG5pbXBvcnQgeyBERUxPTl9MT0NBTEUsIERFTE9OX0xPQ0FMRV9TRVJWSUNFX1BST1ZJREVSIH0gZnJvbSAnLi9sb2NhbGUnO1xuaW1wb3J0IHsgQUxBSU5fSTE4Tl9UT0tFTiB9IGZyb20gJy4vc2VydmljZXMnO1xuaW1wb3J0IHsgQUxBSU5fU0VUVElOR19ERUZBVUxUIH0gZnJvbSAnLi9zZXJ2aWNlcy9zZXR0aW5ncy9zZXR0aW5ncy5zZXJ2aWNlJztcblxuZXhwb3J0IGludGVyZmFjZSBBbGFpblByb3ZpZGVPcHRpb25zIHtcbiAgY29uZmlnPzogQWxhaW5Db25maWc7XG4gIC8qKlxuICAgKiBJbml0aWFsaXplIGRlZmF1bHQgbGFuZ3VhZ2VcbiAgICpcbiAgICog5Yid5aeL5YyW6buY6K6k6K+t6KiAXG4gICAqL1xuICBkZWZhdWx0TGFuZzogQWxhaW5Qcm92aWRlTGFuZztcbiAgaTE4bkNsYXNzPzogVHlwZTxOelNhZmVBbnk+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFsYWluUHJvdmlkZUxhbmcge1xuICBhYmJyOiBzdHJpbmc7XG4gIG5nOiBOelNhZmVBbnk7XG4gIHpvcnJvOiBOelNhZmVBbnk7XG4gIGRhdGU6IE56U2FmZUFueTtcbiAgZGVsb246IE56U2FmZUFueTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVBbGFpbihvcHRpb25zOiBBbGFpblByb3ZpZGVPcHRpb25zKTogRW52aXJvbm1lbnRQcm92aWRlcnMge1xuICBjb25zdCBsYW5nID0gb3B0aW9ucy5kZWZhdWx0TGFuZztcbiAgaWYgKHR5cGVvZiBuZ0Rldk1vZGUgPT09ICd1bmRlZmluZWQnIHx8IG5nRGV2TW9kZSkge1xuICAgIGlmIChsYW5nID09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgUGxlYXNlIHByb3ZpZGUgbGFuZ3VhZ2UgZGF0YSBmb3IgaW5pdGlhbGl6YXRpb25gKTtcbiAgICB9XG4gIH1cblxuICByZWdpc3RlckxvY2FsZURhdGEobGFuZy5uZywgbGFuZy5hYmJyKTtcbiAgY29uc3QgcHJvdmlkZXM6IEFycmF5PFByb3ZpZGVyIHwgRW52aXJvbm1lbnRQcm92aWRlcnM+ID0gW1xuICAgIHsgcHJvdmlkZTogQUxBSU5fQ09ORklHLCB1c2VWYWx1ZTogb3B0aW9ucz8uY29uZmlnIH0sXG4gICAgeyBwcm92aWRlOiBMT0NBTEVfSUQsIHVzZVZhbHVlOiBsYW5nLmFiYnIgfSxcbiAgICBwcm92aWRlTnpJMThuKGxhbmcuem9ycm8pLFxuICAgIHsgcHJvdmlkZTogTlpfREFURV9MT0NBTEUsIHVzZVZhbHVlOiBsYW5nLmRhdGUgfSxcbiAgICB7IHByb3ZpZGU6IERFTE9OX0xPQ0FMRSwgdXNlVmFsdWU6IGxhbmcuZGVsb24gfSxcbiAgICBERUxPTl9MT0NBTEVfU0VSVklDRV9QUk9WSURFUixcbiAgICBpbXBvcnRQcm92aWRlcnNGcm9tKFtOekRyYXdlck1vZHVsZSwgTnpNb2RhbE1vZHVsZV0pLFxuICAgIEFMQUlOX1NFVFRJTkdfREVGQVVMVFxuICBdO1xuXG4gIGNvbnN0IGkxOG5DbHMgPSBvcHRpb25zPy5pMThuQ2xhc3M7XG4gIGlmIChpMThuQ2xzKSB7XG4gICAgcHJvdmlkZXMucHVzaCh7IHByb3ZpZGU6IEFMQUlOX0kxOE5fVE9LRU4sIHVzZUNsYXNzOiBpMThuQ2xzLCBtdWx0aTogZmFsc2UgfSk7XG4gIH1cbiAgcmV0dXJuIG1ha2VFbnZpcm9ubWVudFByb3ZpZGVycyhwcm92aWRlcyk7XG59XG4iXX0=