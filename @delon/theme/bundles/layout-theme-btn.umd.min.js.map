{"version":3,"sources":["../../../../packages/theme/theme-btn/theme-btn.component.ts","../../../../packages/theme/theme-btn/theme-btn.module.ts"],"names":["ALAIN_THEME_BTN_KEYS","InjectionToken","ThemeBtnComponent","renderer","configSrv","platform","doc","directionality","KEYS","this","theme","isDev","isDevMode","types","key","text","devTips","deployUrl","destroy$","Subject","dir","prototype","ngOnInit","_this","value","_a","change","pipe","takeUntil","subscribe","direction","initTheme","isBrowser","localStorage","getItem","updateChartTheme","onThemeChange","set","setAttribute","body","dom","getElementById","remove","removeItem","el","createElement","type","rel","id","href","setItem","append","ngOnDestroy","removeChild","next","complete","Component","args","selector","template","host","[class.theme-btn]","[class.theme-btn-rtl]","changeDetection","ChangeDetectionStrategy","OnPush","Renderer2","AlainConfigService","Platform","Inject","DOCUMENT","Directionality","decorators","Optional","Input","COMPONENTS","NgModule","imports","CommonModule","NzDropDownModule","NzToolTipModule","providers","provide","useValue","declarations","exports"],"mappings":"03BAwBaA,EAAuB,IAAIC,EAAAA,eAAuB,qCAwB7D,SAAAC,EACUC,EACAC,EACAC,EACkBC,EACNC,EACkBC,GAL9BC,KAAAN,SAAAA,EACAM,KAAAL,UAAAA,EACAK,KAAAJ,SAAAA,EACkBI,KAAAH,IAAAA,EACNG,KAAAF,eAAAA,EACkBE,KAAAD,KAAAA,EAlBhCC,KAAAC,MAAQ,UAChBD,KAAAE,MAAQC,EAAAA,YACCH,KAAAI,MAAwB,CAC/B,CAAEC,IAAK,UAAWC,KAAM,iBACxB,CAAED,IAAK,OAAQC,KAAM,cACrB,CAAED,IAAK,UAAWC,KAAM,kBAEjBN,KAAAO,QAAU,gFACVP,KAAAQ,UAAY,GACbR,KAAAS,SAAW,IAAIC,EAAAA,QACvBV,KAAAW,IAAiB,aAWjBlB,EAAAmB,UAAAC,SAAA,WAAA,MAAAC,EAAAd,KACEA,KAAKW,IAAMX,KAAKF,eAAeiB,MACL,QAA1BC,EAAAhB,KAAKF,eAAemB,cAAM,IAAAD,GAAAA,EAAEE,KAAKC,EAAAA,UAAUnB,KAAKS,WAAWW,WAAU,SAACC,GACpEP,EAAKH,IAAMU,KAEbrB,KAAKsB,aAGC7B,EAAAmB,UAAAU,UAAA,WACDtB,KAAKJ,SAAS2B,YAGnBvB,KAAKC,MAAQuB,aAAaC,QAAQzB,KAAKD,OAAS,UAChDC,KAAK0B,mBACL1B,KAAK2B,cAAc3B,KAAKC,SAGlBR,EAAAmB,UAAAc,iBAAA,WACN1B,KAAKL,UAAUiC,IAAI,QAAS,CAAE3B,MAAsB,SAAfD,KAAKC,MAAmB,OAAS,MAGxER,EAAAmB,UAAAe,cAAA,SAAc1B,GACZ,GAAKD,KAAKJ,SAAS2B,UAAnB,CAGAvB,KAAKC,MAAQA,EACbD,KAAKN,SAASmC,aAAa7B,KAAKH,IAAIiC,KAAM,aAAc7B,GACxD,IAAM8B,EAAM/B,KAAKH,IAAImC,eAAehC,KAAKD,MAKzC,GAJIgC,GACFA,EAAIE,SAENT,aAAaU,WAAWlC,KAAKD,MACf,YAAVE,EAAqB,CACvB,IAAMkC,EAAKnC,KAAKH,IAAIuC,cAAc,QAClCD,EAAGE,KAAO,WACVF,EAAGG,IAAM,aACTH,EAAGI,GAAKvC,KAAKD,KACboC,EAAGK,KAAUxC,KAAKQ,UAAS,gBAAgBP,EAAK,OAEhDuB,aAAaiB,QAAQzC,KAAKD,KAAME,GAChCD,KAAKH,IAAIiC,KAAKY,OAAOP,GAEvBnC,KAAK0B,qBAGPjC,EAAAmB,UAAA+B,YAAA,WACE,IAAMR,EAAKnC,KAAKH,IAAImC,eAAehC,KAAKD,MAC9B,MAANoC,GACFnC,KAAKH,IAAIiC,KAAKc,YAAYT,GAE5BnC,KAAKS,SAASoC,OACd7C,KAAKS,SAASqC,qCAlFjBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAA,+2CACAC,KAAM,CACJC,oBAAqB,OACrBC,wBAAyB,iBAE3BC,gBAAiBC,EAAAA,wBAAwBC,oDApBzCC,EAAAA,iBAEOC,EAAAA,0BAdAC,EAAAA,yCAmDJC,EAAAA,OAAMZ,KAAA,CAACa,EAAAA,mBApDQC,EAAAA,eAAcC,WAAA,CAAA,CAAA1B,KAqD7B2B,EAAAA,2CACAJ,EAAAA,OAAMZ,KAAA,CAACzD,uCAhBT0E,EAAAA,uBAKAA,EAAAA,yBACAA,EAAAA,SCrCH,IAAMC,EAAa,CAACzE,KAapB,iCAXC0E,EAAAA,SAAQnB,KAAA,CAAC,CACRoB,QAAS,CAACC,EAAAA,aAAcC,EAAAA,iBAAkBC,EAAAA,iBAC1CC,UAAW,CACT,CACEC,QAASlF,EACTmF,SAAU,eAGdC,aAAcT,EACdU,QAASV","sourcesContent":["import { Direction, Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  InjectionToken,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n} from '@angular/core';\nimport { AlainConfigService } from '@delon/util/config';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface ThemeBtnType {\n  key: string;\n  text: string;\n}\n\nexport const ALAIN_THEME_BTN_KEYS = new InjectionToken<string>('ALAIN_THEME_BTN_KEYS');\n\n@Component({\n  selector: 'theme-btn',\n  templateUrl: './theme-btn.component.html',\n  host: {\n    '[class.theme-btn]': `true`,\n    '[class.theme-btn-rtl]': `dir === 'rtl'`,\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ThemeBtnComponent implements OnInit, OnDestroy {\n  private theme = 'default';\n  isDev = isDevMode();\n  @Input() types: ThemeBtnType[] = [\n    { key: 'default', text: 'Default Theme' },\n    { key: 'dark', text: 'Dark Theme' },\n    { key: 'compact', text: 'Compact Theme' },\n  ];\n  @Input() devTips = `When the dark.css file can't be found, you need to run it once: npm run theme`;\n  @Input() deployUrl = '';\n  private destroy$ = new Subject<void>();\n  dir: Direction = 'ltr';\n\n  constructor(\n    private renderer: Renderer2,\n    private configSrv: AlainConfigService,\n    private platform: Platform,\n    @Inject(DOCUMENT) private doc: any,\n    @Optional() private directionality: Directionality,\n    @Inject(ALAIN_THEME_BTN_KEYS) private KEYS: string,\n  ) {}\n\n  ngOnInit(): void {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n    this.initTheme();\n  }\n\n  private initTheme(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.theme = localStorage.getItem(this.KEYS) || 'default';\n    this.updateChartTheme();\n    this.onThemeChange(this.theme);\n  }\n\n  private updateChartTheme(): void {\n    this.configSrv.set('chart', { theme: this.theme === 'dark' ? 'dark' : '' });\n  }\n\n  onThemeChange(theme: string): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.theme = theme;\n    this.renderer.setAttribute(this.doc.body, 'data-theme', theme);\n    const dom = this.doc.getElementById(this.KEYS);\n    if (dom) {\n      dom.remove();\n    }\n    localStorage.removeItem(this.KEYS);\n    if (theme !== 'default') {\n      const el = this.doc.createElement('link');\n      el.type = 'text/css';\n      el.rel = 'stylesheet';\n      el.id = this.KEYS;\n      el.href = `${this.deployUrl}assets/style.${theme}.css`;\n\n      localStorage.setItem(this.KEYS, theme);\n      this.doc.body.append(el);\n    }\n    this.updateChartTheme();\n  }\n\n  ngOnDestroy(): void {\n    const el = this.doc.getElementById(this.KEYS);\n    if (el != null) {\n      this.doc.body.removeChild(el);\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { ALAIN_THEME_BTN_KEYS, ThemeBtnComponent } from './theme-btn.component';\n\nconst COMPONENTS = [ThemeBtnComponent];\n\n@NgModule({\n  imports: [CommonModule, NzDropDownModule, NzToolTipModule],\n  providers: [\n    {\n      provide: ALAIN_THEME_BTN_KEYS,\n      useValue: 'site-theme',\n    },\n  ],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class ThemeBtnModule {}\n"]}