/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export default (/** @type {?} */ ({
    abbr: 'ko-KR',
    exception: {
        403: `죄송합니다.이 페이지에 액세스 할 수 없습니다.`,
        404: `죄송합니다. 해당 페이지가 없습니다.`,
        500: `죄송합니다, 서버 오류가 있습니다.`,
        backToHome: '홈으로 돌아갑니다.',
    },
    noticeIcon: {
        emptyText: '데이터 없음',
        clearText: '지우기',
    },
    reuseTab: {
        close: '탭 닫기',
        closeOther: '다른 탭 닫기',
        closeRight: '오른쪽 탭 닫기',
        clear: '탭 지우기',
    },
    tagSelect: {
        expand: '펼치기',
        collapse: '접기',
    },
    miniProgress: {
        target: '대상: ',
    },
    st: {
        total: '전체 {{total}}건',
        filterConfirm: '확인',
        filterReset: '초기화',
    },
    sf: {
        submit: '제출',
        reset: '재설정',
        search: '검색',
        edit: '저장',
        addText: '추가',
        removeText: '제거',
        checkAllText: '모두 확인',
        error: {
            'false schema': `Boolean schema is false`,
            $ref: `Can't resolve reference {ref}`,
            additionalItems: `Should not have more than {limit} item`,
            additionalProperties: `Should not have additional properties`,
            anyOf: `Should match some schema in "anyOf"`,
            dependencies: `should have property {deps} when property {property} is present`,
            enum: `Should be equal to one of predefined values`,
            format: `Should match format "{format}"`,
            type: `Should be {type}`,
            required: `Required`,
            maxLength: `Should not be longer than {limit} character`,
            minLength: `Should not be shorter than {limit} character`,
            minimum: `Should be {comparison} {limit}`,
            formatMinimum: `Should be {comparison} {limit}`,
            maximum: `Should be {comparison} {limit}`,
            formatMaximum: `Should be {comparison} {limit}`,
            maxItems: `Should not have more than {limit} item`,
            minItems: `Should not have less than {limit} item`,
            maxProperties: `Should not have more than {limit} property`,
            minProperties: `Should not have less than {limit} property`,
            multipleOf: `Should be a multiple of {multipleOf}`,
            not: `Should not be valid according to schema in "not"`,
            oneOf: `Should match exactly one schema in "oneOf"`,
            pattern: `Should match pattern "{pattern}"`,
            uniqueItems: `Should not have duplicate items (items ## {j} and {i} are identical)`,
            custom: `Should match format`,
            propertyNames: `Property name "{propertyName}" is invalid`,
            patternRequired: `Should have property matching pattern "{missingPattern}"`,
            switch: `Should pass "switch" keyword validation, case {caseIndex} fails`,
            const: `Should be equal to constant`,
            contains: `Should contain a valid item`,
            formatExclusiveMaximum: `formatExclusiveMaximum should be boolean`,
            formatExclusiveMinimum: `formatExclusiveMinimum should be boolean`,
            if: `Should match "{failingKeyword}" schema`,
        },
    },
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia28tS1IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGVsb24vdGhlbWUvIiwic291cmNlcyI6WyJzcmMvbG9jYWxlL2xhbmd1YWdlcy9rby1LUi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsZUFBZSxtQkFBQTtJQUNiLElBQUksRUFBRSxPQUFPO0lBQ2IsU0FBUyxFQUFFO1FBQ1QsR0FBRyxFQUFFLDRCQUE0QjtRQUNqQyxHQUFHLEVBQUUsc0JBQXNCO1FBQzNCLEdBQUcsRUFBRSxxQkFBcUI7UUFDMUIsVUFBVSxFQUFFLFlBQVk7S0FDekI7SUFDRCxVQUFVLEVBQUU7UUFDVixTQUFTLEVBQUUsUUFBUTtRQUNuQixTQUFTLEVBQUUsS0FBSztLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNSLEtBQUssRUFBRSxNQUFNO1FBQ2IsVUFBVSxFQUFFLFNBQVM7UUFDckIsVUFBVSxFQUFFLFVBQVU7UUFDdEIsS0FBSyxFQUFFLE9BQU87S0FDZjtJQUNELFNBQVMsRUFBRTtRQUNULE1BQU0sRUFBRSxLQUFLO1FBQ2IsUUFBUSxFQUFFLElBQUk7S0FDZjtJQUNELFlBQVksRUFBRTtRQUNaLE1BQU0sRUFBRSxNQUFNO0tBQ2Y7SUFDRCxFQUFFLEVBQUU7UUFDRixLQUFLLEVBQUUsZUFBZTtRQUN0QixhQUFhLEVBQUUsSUFBSTtRQUNuQixXQUFXLEVBQUUsS0FBSztLQUNuQjtJQUNELEVBQUUsRUFBRTtRQUNGLE1BQU0sRUFBRSxJQUFJO1FBQ1osS0FBSyxFQUFFLEtBQUs7UUFDWixNQUFNLEVBQUUsSUFBSTtRQUNaLElBQUksRUFBRSxJQUFJO1FBQ1YsT0FBTyxFQUFFLElBQUk7UUFDYixVQUFVLEVBQUUsSUFBSTtRQUNoQixZQUFZLEVBQUUsT0FBTztRQUNyQixLQUFLLEVBQUU7WUFDTCxjQUFjLEVBQUUseUJBQXlCO1lBQ3pDLElBQUksRUFBRSwrQkFBK0I7WUFDckMsZUFBZSxFQUFFLHdDQUF3QztZQUN6RCxvQkFBb0IsRUFBRSx1Q0FBdUM7WUFDN0QsS0FBSyxFQUFFLHFDQUFxQztZQUM1QyxZQUFZLEVBQUUsaUVBQWlFO1lBQy9FLElBQUksRUFBRSw2Q0FBNkM7WUFDbkQsTUFBTSxFQUFFLGdDQUFnQztZQUN4QyxJQUFJLEVBQUUsa0JBQWtCO1lBQ3hCLFFBQVEsRUFBRSxVQUFVO1lBQ3BCLFNBQVMsRUFBRSw2Q0FBNkM7WUFDeEQsU0FBUyxFQUFFLDhDQUE4QztZQUN6RCxPQUFPLEVBQUUsZ0NBQWdDO1lBQ3pDLGFBQWEsRUFBRSxnQ0FBZ0M7WUFDL0MsT0FBTyxFQUFFLGdDQUFnQztZQUN6QyxhQUFhLEVBQUUsZ0NBQWdDO1lBQy9DLFFBQVEsRUFBRSx3Q0FBd0M7WUFDbEQsUUFBUSxFQUFFLHdDQUF3QztZQUNsRCxhQUFhLEVBQUUsNENBQTRDO1lBQzNELGFBQWEsRUFBRSw0Q0FBNEM7WUFDM0QsVUFBVSxFQUFFLHNDQUFzQztZQUNsRCxHQUFHLEVBQUUsa0RBQWtEO1lBQ3ZELEtBQUssRUFBRSw0Q0FBNEM7WUFDbkQsT0FBTyxFQUFFLGtDQUFrQztZQUMzQyxXQUFXLEVBQUUsc0VBQXNFO1lBQ25GLE1BQU0sRUFBRSxxQkFBcUI7WUFDN0IsYUFBYSxFQUFFLDJDQUEyQztZQUMxRCxlQUFlLEVBQUUsMERBQTBEO1lBQzNFLE1BQU0sRUFBRSxpRUFBaUU7WUFDekUsS0FBSyxFQUFFLDZCQUE2QjtZQUNwQyxRQUFRLEVBQUUsNkJBQTZCO1lBQ3ZDLHNCQUFzQixFQUFFLDBDQUEwQztZQUNsRSxzQkFBc0IsRUFBRSwwQ0FBMEM7WUFDbEUsRUFBRSxFQUFFLHdDQUF3QztTQUM3QztLQUNGO0NBQ0YsRUFBa0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZ1bGxMb2NhbGVEYXRhIH0gZnJvbSAnLi4vbG9jYWxlLnR5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhYmJyOiAna28tS1InLFxuICBleGNlcHRpb246IHtcbiAgICA0MDM6IGDso4TshqHtlanri4jri6Qu7J20IO2OmOydtOyngOyXkCDslaHshLjsiqQg7ZWgIOyImCDsl4bsirXri4jri6QuYCxcbiAgICA0MDQ6IGDso4TshqHtlanri4jri6QuIO2VtOuLuSDtjpjsnbTsp4DqsIAg7JeG7Iq164uI64ukLmAsXG4gICAgNTAwOiBg7KOE7Iah7ZWp64uI64ukLCDshJzrsoQg7Jik66WY6rCAIOyeiOyKteuLiOuLpC5gLFxuICAgIGJhY2tUb0hvbWU6ICftmYjsnLzroZwg64+M7JWE6rCR64uI64ukLicsXG4gIH0sXG4gIG5vdGljZUljb246IHtcbiAgICBlbXB0eVRleHQ6ICfrjbDsnbTthLAg7JeG7J2MJyxcbiAgICBjbGVhclRleHQ6ICfsp4DsmrDquLAnLFxuICB9LFxuICByZXVzZVRhYjoge1xuICAgIGNsb3NlOiAn7YOtIOuLq+q4sCcsXG4gICAgY2xvc2VPdGhlcjogJ+uLpOuluCDtg60g64ur6riwJyxcbiAgICBjbG9zZVJpZ2h0OiAn7Jik66W47Kq9IO2DrSDri6vquLAnLFxuICAgIGNsZWFyOiAn7YOtIOyngOyasOq4sCcsXG4gIH0sXG4gIHRhZ1NlbGVjdDoge1xuICAgIGV4cGFuZDogJ+2OvOy5mOq4sCcsXG4gICAgY29sbGFwc2U6ICfsoJHquLAnLFxuICB9LFxuICBtaW5pUHJvZ3Jlc3M6IHtcbiAgICB0YXJnZXQ6ICfrjIDsg4E6ICcsXG4gIH0sXG4gIHN0OiB7XG4gICAgdG90YWw6ICfsoITssrQge3t0b3RhbH196rG0JyxcbiAgICBmaWx0ZXJDb25maXJtOiAn7ZmV7J24JyxcbiAgICBmaWx0ZXJSZXNldDogJ+y0iOq4sO2ZlCcsXG4gIH0sXG4gIHNmOiB7XG4gICAgc3VibWl0OiAn7KCc7LacJyxcbiAgICByZXNldDogJ+yerOyEpOyglScsXG4gICAgc2VhcmNoOiAn6rKA7IOJJyxcbiAgICBlZGl0OiAn7KCA7J6lJyxcbiAgICBhZGRUZXh0OiAn7LaU6rCAJyxcbiAgICByZW1vdmVUZXh0OiAn7KCc6rGwJyxcbiAgICBjaGVja0FsbFRleHQ6ICfrqqjrkZAg7ZmV7J24JyxcbiAgICBlcnJvcjoge1xuICAgICAgJ2ZhbHNlIHNjaGVtYSc6IGBCb29sZWFuIHNjaGVtYSBpcyBmYWxzZWAsXG4gICAgICAkcmVmOiBgQ2FuJ3QgcmVzb2x2ZSByZWZlcmVuY2Uge3JlZn1gLFxuICAgICAgYWRkaXRpb25hbEl0ZW1zOiBgU2hvdWxkIG5vdCBoYXZlIG1vcmUgdGhhbiB7bGltaXR9IGl0ZW1gLFxuICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGBTaG91bGQgbm90IGhhdmUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzYCxcbiAgICAgIGFueU9mOiBgU2hvdWxkIG1hdGNoIHNvbWUgc2NoZW1hIGluIFwiYW55T2ZcImAsXG4gICAgICBkZXBlbmRlbmNpZXM6IGBzaG91bGQgaGF2ZSBwcm9wZXJ0eSB7ZGVwc30gd2hlbiBwcm9wZXJ0eSB7cHJvcGVydHl9IGlzIHByZXNlbnRgLFxuICAgICAgZW51bTogYFNob3VsZCBiZSBlcXVhbCB0byBvbmUgb2YgcHJlZGVmaW5lZCB2YWx1ZXNgLFxuICAgICAgZm9ybWF0OiBgU2hvdWxkIG1hdGNoIGZvcm1hdCBcIntmb3JtYXR9XCJgLFxuICAgICAgdHlwZTogYFNob3VsZCBiZSB7dHlwZX1gLFxuICAgICAgcmVxdWlyZWQ6IGBSZXF1aXJlZGAsXG4gICAgICBtYXhMZW5ndGg6IGBTaG91bGQgbm90IGJlIGxvbmdlciB0aGFuIHtsaW1pdH0gY2hhcmFjdGVyYCxcbiAgICAgIG1pbkxlbmd0aDogYFNob3VsZCBub3QgYmUgc2hvcnRlciB0aGFuIHtsaW1pdH0gY2hhcmFjdGVyYCxcbiAgICAgIG1pbmltdW06IGBTaG91bGQgYmUge2NvbXBhcmlzb259IHtsaW1pdH1gLFxuICAgICAgZm9ybWF0TWluaW11bTogYFNob3VsZCBiZSB7Y29tcGFyaXNvbn0ge2xpbWl0fWAsXG4gICAgICBtYXhpbXVtOiBgU2hvdWxkIGJlIHtjb21wYXJpc29ufSB7bGltaXR9YCxcbiAgICAgIGZvcm1hdE1heGltdW06IGBTaG91bGQgYmUge2NvbXBhcmlzb259IHtsaW1pdH1gLFxuICAgICAgbWF4SXRlbXM6IGBTaG91bGQgbm90IGhhdmUgbW9yZSB0aGFuIHtsaW1pdH0gaXRlbWAsXG4gICAgICBtaW5JdGVtczogYFNob3VsZCBub3QgaGF2ZSBsZXNzIHRoYW4ge2xpbWl0fSBpdGVtYCxcbiAgICAgIG1heFByb3BlcnRpZXM6IGBTaG91bGQgbm90IGhhdmUgbW9yZSB0aGFuIHtsaW1pdH0gcHJvcGVydHlgLFxuICAgICAgbWluUHJvcGVydGllczogYFNob3VsZCBub3QgaGF2ZSBsZXNzIHRoYW4ge2xpbWl0fSBwcm9wZXJ0eWAsXG4gICAgICBtdWx0aXBsZU9mOiBgU2hvdWxkIGJlIGEgbXVsdGlwbGUgb2Yge211bHRpcGxlT2Z9YCxcbiAgICAgIG5vdDogYFNob3VsZCBub3QgYmUgdmFsaWQgYWNjb3JkaW5nIHRvIHNjaGVtYSBpbiBcIm5vdFwiYCxcbiAgICAgIG9uZU9mOiBgU2hvdWxkIG1hdGNoIGV4YWN0bHkgb25lIHNjaGVtYSBpbiBcIm9uZU9mXCJgLFxuICAgICAgcGF0dGVybjogYFNob3VsZCBtYXRjaCBwYXR0ZXJuIFwie3BhdHRlcm59XCJgLFxuICAgICAgdW5pcXVlSXRlbXM6IGBTaG91bGQgbm90IGhhdmUgZHVwbGljYXRlIGl0ZW1zIChpdGVtcyAjIyB7an0gYW5kIHtpfSBhcmUgaWRlbnRpY2FsKWAsXG4gICAgICBjdXN0b206IGBTaG91bGQgbWF0Y2ggZm9ybWF0YCxcbiAgICAgIHByb3BlcnR5TmFtZXM6IGBQcm9wZXJ0eSBuYW1lIFwie3Byb3BlcnR5TmFtZX1cIiBpcyBpbnZhbGlkYCxcbiAgICAgIHBhdHRlcm5SZXF1aXJlZDogYFNob3VsZCBoYXZlIHByb3BlcnR5IG1hdGNoaW5nIHBhdHRlcm4gXCJ7bWlzc2luZ1BhdHRlcm59XCJgLFxuICAgICAgc3dpdGNoOiBgU2hvdWxkIHBhc3MgXCJzd2l0Y2hcIiBrZXl3b3JkIHZhbGlkYXRpb24sIGNhc2Uge2Nhc2VJbmRleH0gZmFpbHNgLFxuICAgICAgY29uc3Q6IGBTaG91bGQgYmUgZXF1YWwgdG8gY29uc3RhbnRgLFxuICAgICAgY29udGFpbnM6IGBTaG91bGQgY29udGFpbiBhIHZhbGlkIGl0ZW1gLFxuICAgICAgZm9ybWF0RXhjbHVzaXZlTWF4aW11bTogYGZvcm1hdEV4Y2x1c2l2ZU1heGltdW0gc2hvdWxkIGJlIGJvb2xlYW5gLFxuICAgICAgZm9ybWF0RXhjbHVzaXZlTWluaW11bTogYGZvcm1hdEV4Y2x1c2l2ZU1pbmltdW0gc2hvdWxkIGJlIGJvb2xlYW5gLFxuICAgICAgaWY6IGBTaG91bGQgbWF0Y2ggXCJ7ZmFpbGluZ0tleXdvcmR9XCIgc2NoZW1hYCxcbiAgICB9LFxuICB9LFxufSBhcyBGdWxsTG9jYWxlRGF0YTtcbiJdfQ==