/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export default (/** @type {?} */ ({
    abbr: 'el-GR',
    exception: {
        403: "\u039B\u03C5\u03C0\u03BF\u03CD\u03BC\u03B1\u03C3\u03C4\u03B5, \u03B4\u03B5\u03BD \u03AD\u03C7\u03B5\u03C4\u03B5 \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7 \u03C3\u03B5 \u03B1\u03C5\u03C4\u03AE\u03BD \u03C4\u03B7 \u03C3\u03B5\u03BB\u03AF\u03B4\u03B1",
        404: "\u039B\u03C5\u03C0\u03BF\u03CD\u03BC\u03B1\u03C3\u03C4\u03B5, \u03B7 \u03C3\u03B5\u03BB\u03AF\u03B4\u03B1 \u03B1\u03C5\u03C4\u03AE \u03B4\u03B5\u03BD \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B5",
        500: "\u039B\u03C5\u03C0\u03BF\u03CD\u03BC\u03B1\u03C3\u03C4\u03B5, \u03C3\u03C6\u03AC\u03BB\u03BC\u03B1 \u03B4\u03B9\u03B1\u03BA\u03BF\u03BC\u03B9\u03C3\u03C4\u03AE",
        backToHome: 'Επιστροφή στην αρχική σελίδα',
    },
    noticeIcon: {
        emptyText: 'Δεν υπάρχουν δεδομένα',
        clearText: 'Καθαρισμός',
    },
    reuseTab: {
        close: 'Κλείσιμο καρτέλας',
        closeOther: 'Κλείσιμο των άλλων καρτέλων',
        closeRight: 'Κλείσιμο των καρτελών δεξιά',
        clear: 'Καθαρισμός καρτελών',
    },
    tagSelect: {
        expand: 'Επέκταση',
        collapse: 'Σύμπτυξη',
    },
    miniProgress: {
        target: 'Στόχος: ',
    },
    st: {
        total: '{{range[0]}} - {{range[1]}} από {{total}}',
        filterConfirm: 'ΟΚ',
        filterReset: 'Επαναφορά',
    },
    sf: {
        submit: 'Υποβολή',
        reset: 'Επαναφορά',
        search: 'Αναζήτηση',
        edit: 'Αποθήκευση',
        addText: 'Προσθήκη',
        removeText: 'Αφαίρεση',
        checkAllText: 'Επιλογή όλων',
        error: {
            'false schema': "Boolean schema is false",
            $ref: "Can't resolve reference {ref}",
            additionalItems: "Should not have more than {limit} item",
            additionalProperties: "Should not have additional properties",
            anyOf: "Should match some schema in \"anyOf\"",
            dependencies: "should have property {deps} when property {property} is present",
            enum: "Should be equal to one of predefined values",
            format: "Should match format \"{format}\"",
            type: "Should be {type}",
            required: "Required",
            maxLength: "Should not be longer than {limit} character",
            minLength: "Should not be shorter than {limit} character",
            minimum: "Should be {comparison} {limit}",
            formatMinimum: "Should be {comparison} {limit}",
            maximum: "Should be {comparison} {limit}",
            formatMaximum: "Should be {comparison} {limit}",
            maxItems: "Should not have more than {limit} item",
            minItems: "Should not have less than {limit} item",
            maxProperties: "Should not have more than {limit} property",
            minProperties: "Should not have less than {limit} property",
            multipleOf: "Should be a multiple of {multipleOf}",
            not: "Should not be valid according to schema in \"not\"",
            oneOf: "Should match exactly one schema in \"oneOf\"",
            pattern: "Should match pattern \"{pattern}\"",
            uniqueItems: "Should not have duplicate items (items ## {j} and {i} are identical)",
            custom: "Should match format",
            propertyNames: "Property name \"{propertyName}\" is invalid",
            patternRequired: "Should have property matching pattern \"{missingPattern}\"",
            switch: "Should pass \"switch\" keyword validation, case {caseIndex} fails",
            const: "Should be equal to constant",
            contains: "Should contain a valid item",
            formatExclusiveMaximum: "formatExclusiveMaximum should be boolean",
            formatExclusiveMinimum: "formatExclusiveMinimum should be boolean",
            if: "Should match \"{failingKeyword}\" schema",
        },
    },
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWwtR1IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGVsb24vdGhlbWUvIiwic291cmNlcyI6WyJzcmMvbG9jYWxlL2xhbmd1YWdlcy9lbC1HUi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsZUFBZSxtQkFBQTtJQUNiLElBQUksRUFBRSxPQUFPO0lBQ2IsU0FBUyxFQUFFO1FBQ1QsR0FBRyxFQUFFLGdRQUFtRDtRQUN4RCxHQUFHLEVBQUUsa01BQXVDO1FBQzVDLEdBQUcsRUFBRSxpS0FBK0I7UUFDcEMsVUFBVSxFQUFFLDhCQUE4QjtLQUMzQztJQUNELFVBQVUsRUFBRTtRQUNWLFNBQVMsRUFBRSx1QkFBdUI7UUFDbEMsU0FBUyxFQUFFLFlBQVk7S0FDeEI7SUFDRCxRQUFRLEVBQUU7UUFDUixLQUFLLEVBQUUsbUJBQW1CO1FBQzFCLFVBQVUsRUFBRSw2QkFBNkI7UUFDekMsVUFBVSxFQUFFLDZCQUE2QjtRQUN6QyxLQUFLLEVBQUUscUJBQXFCO0tBQzdCO0lBQ0QsU0FBUyxFQUFFO1FBQ1QsTUFBTSxFQUFFLFVBQVU7UUFDbEIsUUFBUSxFQUFFLFVBQVU7S0FDckI7SUFDRCxZQUFZLEVBQUU7UUFDWixNQUFNLEVBQUUsVUFBVTtLQUNuQjtJQUNELEVBQUUsRUFBRTtRQUNGLEtBQUssRUFBRSwyQ0FBMkM7UUFDbEQsYUFBYSxFQUFFLElBQUk7UUFDbkIsV0FBVyxFQUFFLFdBQVc7S0FDekI7SUFDRCxFQUFFLEVBQUU7UUFDRixNQUFNLEVBQUUsU0FBUztRQUNqQixLQUFLLEVBQUUsV0FBVztRQUNsQixNQUFNLEVBQUUsV0FBVztRQUNuQixJQUFJLEVBQUUsWUFBWTtRQUNsQixPQUFPLEVBQUUsVUFBVTtRQUNuQixVQUFVLEVBQUUsVUFBVTtRQUN0QixZQUFZLEVBQUUsY0FBYztRQUM1QixLQUFLLEVBQUU7WUFDTCxjQUFjLEVBQUUseUJBQXlCO1lBQ3pDLElBQUksRUFBRSwrQkFBK0I7WUFDckMsZUFBZSxFQUFFLHdDQUF3QztZQUN6RCxvQkFBb0IsRUFBRSx1Q0FBdUM7WUFDN0QsS0FBSyxFQUFFLHVDQUFxQztZQUM1QyxZQUFZLEVBQUUsaUVBQWlFO1lBQy9FLElBQUksRUFBRSw2Q0FBNkM7WUFDbkQsTUFBTSxFQUFFLGtDQUFnQztZQUN4QyxJQUFJLEVBQUUsa0JBQWtCO1lBQ3hCLFFBQVEsRUFBRSxVQUFVO1lBQ3BCLFNBQVMsRUFBRSw2Q0FBNkM7WUFDeEQsU0FBUyxFQUFFLDhDQUE4QztZQUN6RCxPQUFPLEVBQUUsZ0NBQWdDO1lBQ3pDLGFBQWEsRUFBRSxnQ0FBZ0M7WUFDL0MsT0FBTyxFQUFFLGdDQUFnQztZQUN6QyxhQUFhLEVBQUUsZ0NBQWdDO1lBQy9DLFFBQVEsRUFBRSx3Q0FBd0M7WUFDbEQsUUFBUSxFQUFFLHdDQUF3QztZQUNsRCxhQUFhLEVBQUUsNENBQTRDO1lBQzNELGFBQWEsRUFBRSw0Q0FBNEM7WUFDM0QsVUFBVSxFQUFFLHNDQUFzQztZQUNsRCxHQUFHLEVBQUUsb0RBQWtEO1lBQ3ZELEtBQUssRUFBRSw4Q0FBNEM7WUFDbkQsT0FBTyxFQUFFLG9DQUFrQztZQUMzQyxXQUFXLEVBQUUsc0VBQXNFO1lBQ25GLE1BQU0sRUFBRSxxQkFBcUI7WUFDN0IsYUFBYSxFQUFFLDZDQUEyQztZQUMxRCxlQUFlLEVBQUUsNERBQTBEO1lBQzNFLE1BQU0sRUFBRSxtRUFBaUU7WUFDekUsS0FBSyxFQUFFLDZCQUE2QjtZQUNwQyxRQUFRLEVBQUUsNkJBQTZCO1lBQ3ZDLHNCQUFzQixFQUFFLDBDQUEwQztZQUNsRSxzQkFBc0IsRUFBRSwwQ0FBMEM7WUFDbEUsRUFBRSxFQUFFLDBDQUF3QztTQUM3QztLQUNGO0NBQ0YsRUFBa0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZ1bGxMb2NhbGVEYXRhIH0gZnJvbSAnLi4vbG9jYWxlLnR5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhYmJyOiAnZWwtR1InLFxuICBleGNlcHRpb246IHtcbiAgICA0MDM6IGDOm8+Fz4DOv8+NzrzOsc+Dz4TOtSwgzrTOtc69IM6tz4fOtc+EzrUgz4DPgc+Mz4POss6xz4POtyDPg861IM6xz4XPhM6uzr0gz4TOtyDPg861zrvOr860zrFgLFxuICAgIDQwNDogYM6bz4XPgM6/z43OvM6xz4PPhM61LCDOtyDPg861zrvOr860zrEgzrHPhc+Ezq4gzrTOtc69IM6yz4HOrc64zrfOus61YCxcbiAgICA1MDA6IGDOm8+Fz4DOv8+NzrzOsc+Dz4TOtSwgz4PPhs6szrvOvM6xIM60zrnOsc66zr/OvM65z4PPhM6uYCxcbiAgICBiYWNrVG9Ib21lOiAnzpXPgM65z4PPhM+Bzr/Phs6uIM+Dz4TOt869IM6xz4HPh865zrrOriDPg861zrvOr860zrEnLFxuICB9LFxuICBub3RpY2VJY29uOiB7XG4gICAgZW1wdHlUZXh0OiAnzpTOtc69IM+Fz4DOrM+Bz4fOv8+Fzr0gzrTOtc60zr/OvM6tzr3OsScsXG4gICAgY2xlYXJUZXh0OiAnzprOsc64zrHPgc65z4POvM+Mz4InLFxuICB9LFxuICByZXVzZVRhYjoge1xuICAgIGNsb3NlOiAnzprOu861zq/Pg865zrzOvyDOus6xz4HPhM6tzrvOsc+CJyxcbiAgICBjbG9zZU90aGVyOiAnzprOu861zq/Pg865zrzOvyDPhM+Jzr0gzqzOu867z4nOvSDOus6xz4HPhM6tzrvPic69JyxcbiAgICBjbG9zZVJpZ2h0OiAnzprOu861zq/Pg865zrzOvyDPhM+Jzr0gzrrOsc+Bz4TOtc67z47OvSDOtM61zr7Ouc6sJyxcbiAgICBjbGVhcjogJ86azrHOuM6xz4HOuc+DzrzPjM+CIM66zrHPgc+EzrXOu8+Ozr0nLFxuICB9LFxuICB0YWdTZWxlY3Q6IHtcbiAgICBleHBhbmQ6ICfOlc+Azq3Ous+EzrHPg863JyxcbiAgICBjb2xsYXBzZTogJ86jz43OvM+Az4TPhc6+zrcnLFxuICB9LFxuICBtaW5pUHJvZ3Jlc3M6IHtcbiAgICB0YXJnZXQ6ICfOo8+Ez4zPh86/z4I6ICcsXG4gIH0sXG4gIHN0OiB7XG4gICAgdG90YWw6ICd7e3JhbmdlWzBdfX0gLSB7e3JhbmdlWzFdfX0gzrHPgM+MIHt7dG90YWx9fScsXG4gICAgZmlsdGVyQ29uZmlybTogJ86fzponLFxuICAgIGZpbHRlclJlc2V0OiAnzpXPgM6xzr3Osc+Gzr/Pgc6sJyxcbiAgfSxcbiAgc2Y6IHtcbiAgICBzdWJtaXQ6ICfOpc+Azr/Oss6/zrvOricsXG4gICAgcmVzZXQ6ICfOlc+AzrHOvc6xz4bOv8+BzqwnLFxuICAgIHNlYXJjaDogJ86Rzr3Osc62zq7PhM63z4POtycsXG4gICAgZWRpdDogJ86Rz4DOv864zq7Ous61z4XPg863JyxcbiAgICBhZGRUZXh0OiAnzqDPgc6/z4POuM6uzrrOtycsXG4gICAgcmVtb3ZlVGV4dDogJ86Rz4bOsc6vz4HOtc+DzrcnLFxuICAgIGNoZWNrQWxsVGV4dDogJ86Vz4DOuc67zr/Os86uIM+MzrvPic69JyxcbiAgICBlcnJvcjoge1xuICAgICAgJ2ZhbHNlIHNjaGVtYSc6IGBCb29sZWFuIHNjaGVtYSBpcyBmYWxzZWAsXG4gICAgICAkcmVmOiBgQ2FuJ3QgcmVzb2x2ZSByZWZlcmVuY2Uge3JlZn1gLFxuICAgICAgYWRkaXRpb25hbEl0ZW1zOiBgU2hvdWxkIG5vdCBoYXZlIG1vcmUgdGhhbiB7bGltaXR9IGl0ZW1gLFxuICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGBTaG91bGQgbm90IGhhdmUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzYCxcbiAgICAgIGFueU9mOiBgU2hvdWxkIG1hdGNoIHNvbWUgc2NoZW1hIGluIFwiYW55T2ZcImAsXG4gICAgICBkZXBlbmRlbmNpZXM6IGBzaG91bGQgaGF2ZSBwcm9wZXJ0eSB7ZGVwc30gd2hlbiBwcm9wZXJ0eSB7cHJvcGVydHl9IGlzIHByZXNlbnRgLFxuICAgICAgZW51bTogYFNob3VsZCBiZSBlcXVhbCB0byBvbmUgb2YgcHJlZGVmaW5lZCB2YWx1ZXNgLFxuICAgICAgZm9ybWF0OiBgU2hvdWxkIG1hdGNoIGZvcm1hdCBcIntmb3JtYXR9XCJgLFxuICAgICAgdHlwZTogYFNob3VsZCBiZSB7dHlwZX1gLFxuICAgICAgcmVxdWlyZWQ6IGBSZXF1aXJlZGAsXG4gICAgICBtYXhMZW5ndGg6IGBTaG91bGQgbm90IGJlIGxvbmdlciB0aGFuIHtsaW1pdH0gY2hhcmFjdGVyYCxcbiAgICAgIG1pbkxlbmd0aDogYFNob3VsZCBub3QgYmUgc2hvcnRlciB0aGFuIHtsaW1pdH0gY2hhcmFjdGVyYCxcbiAgICAgIG1pbmltdW06IGBTaG91bGQgYmUge2NvbXBhcmlzb259IHtsaW1pdH1gLFxuICAgICAgZm9ybWF0TWluaW11bTogYFNob3VsZCBiZSB7Y29tcGFyaXNvbn0ge2xpbWl0fWAsXG4gICAgICBtYXhpbXVtOiBgU2hvdWxkIGJlIHtjb21wYXJpc29ufSB7bGltaXR9YCxcbiAgICAgIGZvcm1hdE1heGltdW06IGBTaG91bGQgYmUge2NvbXBhcmlzb259IHtsaW1pdH1gLFxuICAgICAgbWF4SXRlbXM6IGBTaG91bGQgbm90IGhhdmUgbW9yZSB0aGFuIHtsaW1pdH0gaXRlbWAsXG4gICAgICBtaW5JdGVtczogYFNob3VsZCBub3QgaGF2ZSBsZXNzIHRoYW4ge2xpbWl0fSBpdGVtYCxcbiAgICAgIG1heFByb3BlcnRpZXM6IGBTaG91bGQgbm90IGhhdmUgbW9yZSB0aGFuIHtsaW1pdH0gcHJvcGVydHlgLFxuICAgICAgbWluUHJvcGVydGllczogYFNob3VsZCBub3QgaGF2ZSBsZXNzIHRoYW4ge2xpbWl0fSBwcm9wZXJ0eWAsXG4gICAgICBtdWx0aXBsZU9mOiBgU2hvdWxkIGJlIGEgbXVsdGlwbGUgb2Yge211bHRpcGxlT2Z9YCxcbiAgICAgIG5vdDogYFNob3VsZCBub3QgYmUgdmFsaWQgYWNjb3JkaW5nIHRvIHNjaGVtYSBpbiBcIm5vdFwiYCxcbiAgICAgIG9uZU9mOiBgU2hvdWxkIG1hdGNoIGV4YWN0bHkgb25lIHNjaGVtYSBpbiBcIm9uZU9mXCJgLFxuICAgICAgcGF0dGVybjogYFNob3VsZCBtYXRjaCBwYXR0ZXJuIFwie3BhdHRlcm59XCJgLFxuICAgICAgdW5pcXVlSXRlbXM6IGBTaG91bGQgbm90IGhhdmUgZHVwbGljYXRlIGl0ZW1zIChpdGVtcyAjIyB7an0gYW5kIHtpfSBhcmUgaWRlbnRpY2FsKWAsXG4gICAgICBjdXN0b206IGBTaG91bGQgbWF0Y2ggZm9ybWF0YCxcbiAgICAgIHByb3BlcnR5TmFtZXM6IGBQcm9wZXJ0eSBuYW1lIFwie3Byb3BlcnR5TmFtZX1cIiBpcyBpbnZhbGlkYCxcbiAgICAgIHBhdHRlcm5SZXF1aXJlZDogYFNob3VsZCBoYXZlIHByb3BlcnR5IG1hdGNoaW5nIHBhdHRlcm4gXCJ7bWlzc2luZ1BhdHRlcm59XCJgLFxuICAgICAgc3dpdGNoOiBgU2hvdWxkIHBhc3MgXCJzd2l0Y2hcIiBrZXl3b3JkIHZhbGlkYXRpb24sIGNhc2Uge2Nhc2VJbmRleH0gZmFpbHNgLFxuICAgICAgY29uc3Q6IGBTaG91bGQgYmUgZXF1YWwgdG8gY29uc3RhbnRgLFxuICAgICAgY29udGFpbnM6IGBTaG91bGQgY29udGFpbiBhIHZhbGlkIGl0ZW1gLFxuICAgICAgZm9ybWF0RXhjbHVzaXZlTWF4aW11bTogYGZvcm1hdEV4Y2x1c2l2ZU1heGltdW0gc2hvdWxkIGJlIGJvb2xlYW5gLFxuICAgICAgZm9ybWF0RXhjbHVzaXZlTWluaW11bTogYGZvcm1hdEV4Y2x1c2l2ZU1pbmltdW0gc2hvdWxkIGJlIGJvb2xlYW5gLFxuICAgICAgaWY6IGBTaG91bGQgbWF0Y2ggXCJ7ZmFpbGluZ0tleXdvcmR9XCIgc2NoZW1hYCxcbiAgICB9LFxuICB9LFxufSBhcyBGdWxsTG9jYWxlRGF0YTtcbiJdfQ==