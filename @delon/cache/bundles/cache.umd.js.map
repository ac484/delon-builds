{"version":3,"file":"cache.umd.js.map","sources":["ng://@delon/cache/src/interface.ts","ng://@delon/cache/src/cache.config.ts","ng://@delon/cache/src/cache.service.ts","ng://@delon/cache/src/local-storage-cache.service.ts","ng://@delon/cache/src/cache.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface ICache {\n  // tslint:disable-next-line:no-any\n  v: any;\n  /** è¿ææ¶é´æ³ï¼`0` è¡¨ç¤ºä¸è¿æ */\n  e: number;\n}\n\nexport const DC_STORE_STORAGE_TOKEN = new InjectionToken<ICacheStore>(\n  'DC_STORE_STORAGE_TOKEN',\n);\n\nexport interface ICacheStore {\n  get(key: string): ICache;\n\n  set(key: string, value: ICache): boolean;\n\n  remove(key: string);\n}\n\nexport type CacheNotifyType = 'set' | 'remove' | 'expire';\n\nexport interface CacheNotifyResult {\n  type: CacheNotifyType;\n  // tslint:disable-next-line:no-any\n  value?: any;\n}\n","export class DelonCacheConfig {\n  /**\n   * ç¼å­æ¨¡å¼ï¼é»è®¤ï¼`promise`\n   * - `promise` çº¦å®æ¨¡å¼ï¼åè®¸ `key` ä½ä¸º http è·åæ°æ®\n   * - `none` æ­£å¸¸æ¨¡å¼\n   */\n  mode?: 'promise' | 'none' = 'promise';\n  /**\n   * éå½åè¿ååæ°ï¼ä¾å¦ï¼\n   * - `null` è¿åä½ä¸ºåå®¹\n   * - `list` è¿åä½åº `{ list: [] }`\n   * - `result.list` è¿åä½åº `{ result: { list: [] } }`\n   */\n  reName?: string | string[] = '';\n  /**\n   * æä¹åæ°æ®é®å¼åç¼\n   */\n  prefix?: string = '';\n  /**\n   * æä¹åæ°æ®åæ°æ®å­å¨é®å\n   */\n  meta_key?: string = '__cache_meta';\n}\n","// tslint:disable:no-any\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport addSeconds from 'date-fns/add_seconds';\nimport { of, BehaviorSubject, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { DelonCacheConfig } from './cache.config';\nimport {\n  CacheNotifyResult,\n  CacheNotifyType,\n  DC_STORE_STORAGE_TOKEN,\n  ICache,\n  ICacheStore,\n} from './interface';\n\n@Injectable()\nexport class CacheService implements OnDestroy {\n  private readonly memory: Map<string, ICache> = new Map<string, ICache>();\n  private readonly notifyBuffer: Map<string, BehaviorSubject<CacheNotifyResult>> = new Map<string, BehaviorSubject<CacheNotifyResult>>();\n  private meta: Set<string> = new Set<string>();\n  private freqTick = 3000;\n  private freqTime;\n\n  constructor(\n    private options: DelonCacheConfig,\n    @Inject(DC_STORE_STORAGE_TOKEN) private store: ICacheStore,\n    private http: HttpClient,\n  ) {\n    this.loadMeta();\n    this.startExpireNotify();\n  }\n\n  _deepGet(obj: any, path: string[], defaultValue?: any) {\n    if (!obj) return defaultValue;\n    if (path.length <= 1) {\n      const checkObj = path.length ? obj[path[0]] : obj;\n      return typeof checkObj === 'undefined' ? defaultValue : checkObj;\n    }\n    return path.reduce((o, k) => o[k], obj) || defaultValue;\n  }\n\n  // #region meta\n\n  private pushMeta(key: string) {\n    if (this.meta.has(key)) return;\n    this.meta.add(key);\n    this.saveMeta();\n  }\n\n  private removeMeta(key: string) {\n    if (!this.meta.has(key)) return;\n    this.meta.delete(key);\n    this.saveMeta();\n  }\n\n  private loadMeta() {\n    const ret = this.store.get(this.options.meta_key);\n    if (ret && ret.v) {\n      (ret.v as string[]).forEach(key => this.meta.add(key));\n    }\n  }\n\n  private saveMeta() {\n    const metaData: string[] = [];\n    this.meta.forEach(key => metaData.push(key));\n    this.store.set(this.options.meta_key, { v: metaData, e: 0 });\n  }\n\n  getMeta() {\n    return this.meta;\n  }\n\n  // #endregion\n\n  // #region set\n\n  /**\n   * æä¹åç¼å­ `Observable` å¯¹è±¡ï¼ä¾å¦ï¼\n   * - `set('data/1', this.http.get('data/1')).subscribe()`\n   * - `set('data/1', this.http.get('data/1'), { expire: 10 }).subscribe()`\n   */\n  set<T>(\n    key: string,\n    data: Observable<T>,\n    options?: { type?: 's'; expire?: number },\n  ): Observable<T>;\n  /**\n   * æä¹åç¼å­ `Observable` å¯¹è±¡ï¼ä¾å¦ï¼\n   * - `set('data/1', this.http.get('data/1')).subscribe()`\n   * - `set('data/1', this.http.get('data/1'), { expire: 10 }).subscribe()`\n   */\n  set(\n    key: string,\n    data: Observable<any>,\n    options?: { type?: 's'; expire?: number },\n  ): Observable<any>;\n  /**\n   * æä¹åç¼å­åºç¡å¯¹è±¡ï¼ä¾å¦ï¼\n   * - `set('data/1', 1)`\n   * - `set('data/1', 1, { expire: 10 })`\n   */\n  set(\n    key: string,\n    data: {},\n    options?: { type?: 's'; expire?: number },\n  ): void;\n  /**\n   * æå®ç¼å­ç±»åè¿è¡ç¼å­å¯¹è±¡ï¼ä¾å¦åå­ç¼å­ï¼\n   * - `set('data/1', 1, { type: 'm' })`\n   * - `set('data/1', 1, { type: 'm', expire: 10 })`\n   */\n  set(\n    key: string,\n    data: {},\n    options: { type: 'm' | 's'; expire?: number },\n  ): void;\n  /**\n   * ç¼å­å¯¹è±¡\n   */\n  set(\n    key: string,\n    data: any | Observable<any>,\n    options: {\n      /** å­å¨ç±»åï¼'m' è¡¨ç¤ºåå­ï¼'s' è¡¨ç¤ºæä¹ */\n      type?: 'm' | 's';\n      /**\n       * è¿ææ¶é´ï¼åä½ `ç§`\n       */\n      expire?: number;\n    } = {},\n  ): any {\n    // expire\n    let e = 0;\n    if (options.expire) {\n      e = addSeconds(new Date(), options.expire).valueOf();\n    }\n    if (!(data instanceof Observable)) {\n      this.save(options.type, key, { v: data, e });\n      return;\n    }\n    return data.pipe(\n      tap((v: any) => {\n        this.save(options.type, key, { v, e });\n      }),\n    );\n  }\n\n  private save(type: 'm' | 's', key: string, value: ICache) {\n    if (type === 'm') {\n      this.memory.set(key, value);\n    } else {\n      this.store.set(this.options.prefix + key, value);\n      this.pushMeta(key);\n    }\n    this.runNotify(key, 'set');\n  }\n\n  // #endregion\n\n  // #region get\n\n  /** è·åç¼å­æ°æ®ï¼è¥ `key` ä¸å­å¨å `key` ä½ä¸ºHTTPè¯·æ±ç¼å­åè¿å */\n  get<T>(\n    key: string,\n    options?: {\n      mode: 'promise';\n      type?: 'm' | 's';\n      expire?: number;\n    },\n  ): Observable<T>;\n  /** è·åç¼å­æ°æ®ï¼è¥ `key` ä¸å­å¨å `key` ä½ä¸ºHTTPè¯·æ±ç¼å­åè¿å */\n  get(\n    key: string,\n    options?: {\n      mode: 'promise';\n      type?: 'm' | 's';\n      expire?: number;\n    },\n  ): Observable<any>;\n  /** è·åç¼å­æ°æ®ï¼è¥ `key` ä¸å­å¨æå·²è¿æåè¿å null */\n  get(\n    key: string,\n    options: {\n      mode: 'none';\n      type?: 'm' | 's';\n      expire?: number;\n    },\n  ): any;\n  get(\n    key: string,\n    options: {\n      mode?: 'promise' | 'none';\n      type?: 'm' | 's';\n      expire?: number;\n    } = {},\n  ): Observable<any> | any {\n    const isPromise =\n      options.mode !== 'none' && this.options.mode === 'promise';\n    const value: ICache = this.memory.has(key)\n      ? this.memory.get(key)\n      : this.store.get(this.options.prefix + key);\n    if (!value || (value.e && value.e > 0 && value.e < new Date().valueOf())) {\n      if (isPromise) {\n        return this.http\n          .get(key)\n          .pipe(\n            // tslint:disable-next-line:no-any\n            map((ret: any) => this._deepGet(ret, this.options.reName as string[], null)),\n            tap(v => this.set(key, v)),\n          );\n      }\n      return null;\n    }\n\n    return isPromise ? of(value.v) : value.v;\n  }\n\n  /** è·åç¼å­æ°æ®ï¼è¥ `key` ä¸å­å¨æå·²è¿æåè¿å null */\n  getNone<T>(key: string): T;\n  /** è·åç¼å­æ°æ®ï¼è¥ `key` ä¸å­å¨æå·²è¿æåè¿å null */\n  getNone(key: string): any {\n    return this.get(key, { mode: 'none' });\n  }\n\n  /**\n   * è·åç¼å­ï¼è¥ä¸å­å¨åè®¾ç½®æä¹åç¼å­ `Observable` å¯¹è±¡\n   */\n  tryGet<T>(\n    key: string,\n    data: Observable<T>,\n    options?: { type?: 's'; expire?: number },\n  ): Observable<T>;\n  /**\n   * è·åç¼å­ï¼è¥ä¸å­å¨åè®¾ç½®æä¹åç¼å­ `Observable` å¯¹è±¡\n   */\n  tryGet(\n    key: string,\n    data: Observable<any>,\n    options?: { type?: 's'; expire?: number },\n  ): Observable<any>;\n  /**\n   * è·åç¼å­ï¼è¥ä¸å­å¨åè®¾ç½®æä¹åç¼å­åºç¡å¯¹è±¡\n   */\n  tryGet(\n    key: string,\n    data: {},\n    options?: { type?: 's'; expire?: number },\n  ): any;\n  /**\n   * è·åç¼å­ï¼è¥ä¸å­å¨åè®¾ç½®æå®ç¼å­ç±»åè¿è¡ç¼å­å¯¹è±¡\n   */\n  tryGet(\n    key: string,\n    data: {},\n    options: { type: 'm' | 's'; expire?: number },\n  ): any;\n\n  /**\n   * è·åç¼å­ï¼è¥ä¸å­å¨åè®¾ç½®ç¼å­å¯¹è±¡\n   */\n  tryGet(\n    key: string,\n    data: any | Observable<any>,\n    options: {\n      /** å­å¨ç±»åï¼'m' è¡¨ç¤ºåå­ï¼'s' è¡¨ç¤ºæä¹ */\n      type?: 'm' | 's';\n      /**\n       * è¿ææ¶é´ï¼åä½ `ç§`\n       */\n      expire?: number;\n    } = {},\n  ): any {\n    const ret = this.getNone(key);\n    if (ret === null) {\n      if (!(data instanceof Observable)) {\n        this.set(key, data, options as any);\n        return data;\n      }\n\n      return this.set(key, data as Observable<any>, options as any);\n    }\n    return of(ret);\n  }\n\n  // #endregion\n\n  // #region has\n\n  /** æ¯å¦ç¼å­ `key` */\n  has(key: string): boolean {\n    return this.memory.has(key) || this.meta.has(key);\n  }\n\n  // #endregion\n\n  // #region remove\n\n  private _remove(key: string, needNotify: boolean) {\n    if (needNotify) this.runNotify(key, 'remove');\n    if (this.memory.has(key)) {\n      this.memory.delete(key);\n      return;\n    }\n    this.store.remove(this.options.prefix + key);\n    this.removeMeta(key);\n  }\n\n  /** ç§»é¤ç¼å­ */\n  remove(key: string) {\n    this._remove(key, true);\n  }\n\n  /** æ¸ç©ºææç¼å­ */\n  clear() {\n    this.notifyBuffer.forEach((v, k) => this.runNotify(k, 'remove'));\n    this.memory.clear();\n    this.meta.forEach(key => this.store.remove(this.options.prefix + key));\n  }\n\n  // #endregion\n\n  // #region notify\n\n  /**\n   * è®¾ç½®çå¬é¢çï¼åä½ï¼æ¯«ç§ä¸æä½ `20ms`ï¼é»è®¤ï¼`3000ms`\n   */\n  set freq(value: number) {\n    this.freqTick = Math.max(20, value);\n    this.abortExpireNotify();\n    this.startExpireNotify();\n  }\n\n  private startExpireNotify() {\n    this.checkExpireNotify();\n    this.runExpireNotify();\n  }\n\n  private runExpireNotify() {\n    this.freqTime = setTimeout(() => {\n      this.checkExpireNotify();\n      this.runExpireNotify();\n    }, this.freqTick);\n  }\n\n  private checkExpireNotify() {\n    const removed: string[] = [];\n    this.notifyBuffer.forEach((v, key) => {\n      if (this.has(key) && this.getNone(key) === null) removed.push(key);\n    });\n    removed.forEach(key => {\n      this.runNotify(key, 'expire');\n      this._remove(key, false);\n    });\n  }\n\n  private abortExpireNotify() {\n    clearTimeout(this.freqTime);\n  }\n\n  private runNotify(key: string, type: CacheNotifyType) {\n    if (!this.notifyBuffer.has(key)) return;\n    this.notifyBuffer.get(key).next({ type, value: this.getNone(key) });\n  }\n\n  /**\n   * `key` çå¬ï¼å½ `key` åæ´ãè¿æãç§»é¤æ¶éç¥ï¼æ³¨æä»¥ä¸è¥å¹²ç»èï¼\n   *\n   * - è°ç¨åé¤åæ¬¡è°ç¨ `cancelNotify` å¦åæ°¸è¿ä¸è¿æ\n   * - çå¬å¨æ¯ `freq` (é»è®¤ï¼3ç§) æ§è¡ä¸æ¬¡è¿ææ£æ¥\n   */\n  notify(key: string): Observable<CacheNotifyResult> {\n    if (!this.notifyBuffer.has(key)) {\n      const change$ = new BehaviorSubject<CacheNotifyResult>(this.getNone(key));\n      this.notifyBuffer.set(key, change$);\n    }\n    return this.notifyBuffer.get(key).asObservable();\n  }\n\n  /**\n   * åæ¶ `key` çå¬\n   */\n  cancelNotify(key: string): void {\n    if (!this.notifyBuffer.has(key)) return;\n    this.notifyBuffer.get(key).unsubscribe();\n    this.notifyBuffer.delete(key);\n  }\n\n  /** `key` æ¯å¦å·²ç»çå¬ */\n  hasNotify(key: string): boolean {\n    return this.notifyBuffer.has(key);\n  }\n\n  /** æ¸ç©ºææ `key` ççå¬ */\n  clearNotify(): void {\n    this.notifyBuffer.forEach(v => v.unsubscribe());\n    this.notifyBuffer.clear();\n  }\n\n  // #endregion\n\n  ngOnDestroy(): void {\n    this.memory.clear();\n    this.abortExpireNotify();\n    this.clearNotify();\n  }\n}\n","import { ICache, ICacheStore } from './interface';\n\nexport class LocalStorageCacheService implements ICacheStore {\n  get(key: string): ICache {\n    return JSON.parse(localStorage.getItem(key) || 'null') || null;\n  }\n\n  set(key: string, value: ICache): boolean {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string) {\n    localStorage.removeItem(key);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { DelonCacheConfig } from './cache.config';\nimport { CacheService } from './cache.service';\nimport { DC_STORE_STORAGE_TOKEN } from './interface';\nimport { LocalStorageCacheService } from './local-storage-cache.service';\n\n@NgModule({})\nexport class DelonCacheModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonCacheModule,\n      providers: [\n        DelonCacheConfig,\n        CacheService,\n        { provide: DC_STORE_STORAGE_TOKEN, useClass: LocalStorageCacheService },\n      ],\n    };\n  }\n}\n"],"names":["InjectionToken","http","Observable","tap","map","of","BehaviorSubject","Injectable","Inject","HttpClient","NgModule"],"mappings":"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"}
